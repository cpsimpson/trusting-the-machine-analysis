---
title: "Analysis"
author: "Caroline Simpson"
format: 
  html:
    theme: cerulean
    df-print: kable
    code-fold: false
    toc: true
    toc-float:
      collapsed: true
      smooth-scroll: false
    toc-depth: 7

editor: visual
---

```{r include=FALSE}
#| label: setup

library(knitr)
library(kableExtra)

# library(rstatix)
# library(tidyverse)
# library(forcats)
# 
# library(haven)
# library(jtools)
# library(forcats)
# library(FactoMineR)
# library(psych)
# library(interactions)
# library(corrplot)
# library(rcartocolor)
# library(ggpubr)
# library(apaTables)
# library(FSA)
# 
# library(performance)
# library(see)


source("./scripts/data-loading.R", local = TRUE)
source("./scripts/data-cleaning.R", local = TRUE)
source("./scripts/analysis-data-properties.R", local = TRUE)
source("./scripts/analysis-descriptives.R", local = TRUE)
source("./scripts/analysis-reliability.R", local = TRUE)
source("./scripts/analysis-inferential.R", local = TRUE)
source("./scripts/analysis-correlation.R", local = TRUE)
source("./scripts/analysis-regression.R", local = TRUE)
source("./scripts/analysis-moderation-mediation.R", local = TRUE)
source("./scripts/analysis-chat-logs.R", local = TRUE)
source("./scripts/plotting.R", local = TRUE)
source("./scripts/common.R", local = TRUE)

directory_setup()
theme_set(my_theme)

s2_study <- "s2"

```

# Trusting the machine: Epistemic trust and anthropomorphism in generative artificial intelligence

**Research Question**: What effect does anthropomorphism have on level of trust in generative AI and the content it creates?

My **hypothesis** is that there will be an increase in epistemic trust with increasing levels of anthropomorphism.

## Data Analysis

### Load data

```{r}
#| label: load-data

s2_raw_data <- load_data(s2_study)
s2_raw_data <- factorize_data(s2_study, s2_raw_data)


```

Number of participants in raw data = `r nrow(s2_raw_data)`.

```{r}
#| label: explode-chatbots-used

s2_raw_data <- explode_chatbots_used(s2_raw_data)

```

### Exclude non-consent

```{r}

s2_raw_data <- exclude_non_consenting_participants(s2_raw_data)

```

### Manual Processing

Reviewed and coded Survey purpose check (what they think this study is about, not the attention check)

-   Manually coded the response values with the following key:

    -   0 = no answer provided

    -   1 = identified the survey was about AI content, perception of AI, human versus AI distinction

    -   2 = nonsensical text

    -   3 = values that describe a purpose (not about AI)

    -   4 = random word

    -   5 = unsure

    -   6 = "the study was interesting" or "good" and variations of this

    -   7 = None

    -   8 = paying attention

```{r}
#| label: participant-survey-topic-check

s2_raw_data |> 
  summarize_columns(SurveyTopicCheck_coded) 
```

Reviewed and coded Unrealistic parts of survey.

-   Unrealistic field is a separate field with the values of:

    -   1 = No

    -   2 = Yes

-   Unrealistic_coded -\> Manually coded the response values from Unrealistic_2_TEXT field with the following key:

    -   0 = no answer provided

    -   1 = didn't believe content written by the AI

    -   2 = don't believe that traits make sense to apply to AI

    -   3 = it all seemed realistic

    -   4 = description of AI was not believable

    -   5 = random text

    -   6 = unsure why they were asked questions about AI (in High condition)

    -   7 = Identified didn't follow instructions

    -   8 = Confusion with sliders

    -   9 = The chat (Chatbot was too fast, Chatbot wouldn't talk about other topics, Question why they would talk to an author)

    -   10 = Didn't understand the blog post

    -   11 = other (subconscious bias introduced)

    -   12 = predisposed to distrust information in experiments

    -   13 =

    -   14 = Quality or content of the article (no citations, etc)

```{r}

s2_raw_data |> 
  summarize_columns(Unrealistic) 

s2_raw_data |> 
  summarize_columns(Unrealistic, Unrealistic_coded) 
```

### Clean Data

#### Validate no duplicate participants

```{r}
duplicates <- s2_raw_data |> count_duplicate_participants()

```

There are `r if (duplicates == 0) "no duplicate participants" else paste (duplicates, "duplicates")`

```{r clean_remove_duplicates}
s2_deduped_data <- s2_raw_data |> deduplicate_participants()
duplicates <- s2_deduped_data |> count_duplicate_participants()
```

There are `r if (duplicates == 0) "no duplicate participants" else paste (duplicates, "duplicates")`after removing duplicates.

```{r}
recruited_participants <- s2_deduped_data |> count_recruited_participants(s2_study)

```

Number of participants recruited = `r recruited_participants`.

```{r}
s2_cleaned_data <- s2_deduped_data |> clean_data(s2_study)
```

Number of participants after exclusions = `r nrow(s2_cleaned_data)`.

### Fill missing values

#### Assess skewness and distribution

```{r}
s2_cleaned_data |> check_skewness(s2_study)

s2_cleaned_data |>
  dplyr::select(-Progress, -ConsentForm, -`Duration (in seconds)`, -Status, -Finished, -TopicCheck, -GodspeedMETI_28, -GodspeedMETI_29, -AIChatbotsUsed_NA) |> 
  check_normality(s2_study)

```

#### Fill missing values with median values

Populate missing values with the median within Condition.

```{r}

missing_values_within_conditions(s2_cleaned_data)

# Perform imputation only on selected variables
s2_imputed_data <- impute_data(s2_cleaned_data)

missing_values_within_conditions(s2_imputed_data)

```

### Reverse Coding

Reverse code items for each scale where appropriate

```{r}

s2_recoded_data <- s2_imputed_data |> recode_data(s2_study)

```

#### Standardize Scale Item Values

```{r}


s2_cleaned_data <- s2_recoded_data |> standardize_data()


```

#### Regroup data

Regroup the AIChatbotsFrequency, Education, and Age columns into smaller number of categories of data for analysis. Some of the more granular categories don't have a large enough sample for meaningful comparisons.

```{r}

s2_cleaned_data <- s2_cleaned_data |> regroup_data()                                  
```

### Calculate Scale Scores

#### Define Score Components

```{r}

s2_cleaned_data <- s2_cleaned_data |> compute_scores(s2_study)

```

### Scale Inter-item Reliability Analysis

#### Anthropomorphism (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$anthropomorphism_score)

s2_cleaned_data |> cronbachs_alpha(get_anthropomorphism_score_godspeed_cols())

```

#### Likeability (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$likeability_score)

s2_cleaned_data |> cronbachs_alpha(get_likeability_score_godspeed_cols())

```

#### Competence (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$competence_score)

s2_cleaned_data |> cronbachs_alpha(get_competence_score_godspeed_cols())

```

#### Expertise (METI Subscale)

```{r}

basic_descriptives(s2_cleaned_data$expertise_score)

s2_cleaned_data |> cronbachs_alpha(get_expertise_score_METI_cols())

```

#### Integrity (METI Subscale)

```{r}

basic_descriptives(s2_cleaned_data$integrity_score)

s2_cleaned_data |> cronbachs_alpha(get_integrity_score_METI_cols())


```

#### Benevolence (METI Subscale)

```{r}
basic_descriptives(s2_cleaned_data$benevolence_score)

s2_cleaned_data |> cronbachs_alpha(get_benevolence_score_METI_cols())

```

#### METI (Author Trust)

```{r}

basic_descriptives(s2_cleaned_data$author_trust_METI_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_METI_cols())

```

#### Trust Behaviour (Author Trust)

```{r}
basic_descriptives(s2_cleaned_data$author_trust_behaviour_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_behaviour_cols(s2_study))

```

#### Combine Author Trust

```{r}

basic_descriptives(s2_cleaned_data$author_trust_combined_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_combined_cols(s2_study))


```

#### Appelman (Content Trust)

```{r}
basic_descriptives(s2_cleaned_data$content_trust_appelman_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_appelman_cols())

```

#### Trust Behaviour (Content Trust)

```{r}
basic_descriptives(s2_cleaned_data$content_trust_behaviour_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_behaviour_cols())

```

#### Combined Content Trust

```{r}

basic_descriptives(s2_cleaned_data$content_trust_combined_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_combined_cols())

```

#### Expertise / Intentions

```{r}
basic_descriptives(s2_cleaned_data$intention_to_use_score)
s2_cleaned_data |> cronbachs_alpha(get_intention_cols())


basic_descriptives(s2_cleaned_data$fear_of_ai_score)
s2_cleaned_data |> cronbachs_alpha(get_fear_cols())


basic_descriptives(s2_cleaned_data$professional_content_expertise)
s2_cleaned_data |> cronbachs_alpha(get_participant_expertise_cols())

```

### Sample Characteristics

```         
N=`r length(unique(s2_cleaned_data$ResponseId))`
```

#### Study duration (in minutes)

```{r}
basic_descriptives(s2_cleaned_data$`Duration (in seconds)` / 60)
```

#### Participants reporting Technical Issues (Not removed in data cleaning)

```{r}
s2_cleaned_data |> 
  summarize_columns(TechnicalIssues) 

```

```{r}
s2_cleaned_data |> 
  summarize_columns(Unrealistic_coded) 
```

#### Participants per condition.

```{r}
s2_cleaned_data |> 
  summarize_columns(Condition)

```

#### Age

```         
Age range: `r round(min(s2_cleaned_data$Age_1, na.rm = TRUE), 2)` to `r round(max(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
Mean age: `r round(mean(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
Standard deviation: `r round(sd(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
```

```{r}
s2_cleaned_data |> 
  summarize_columns(age_range)

s2_cleaned_data |> 
  summarize_columns(age_range, Condition) 
```

#### Gender

```{r}

s2_cleaned_data |> 
  summarize_columns(Gender) 

s2_cleaned_data |> 
  summarize_columns(Gender, Condition) 

```

#### Sex

```{r}

s2_cleaned_data |> 
  summarize_columns(Sex)

s2_cleaned_data |> 
  summarize_columns(Sex, Condition)
```

#### Education Level

```{r}

s2_cleaned_data |> 
  summarize_columns(Education) 

s2_cleaned_data |> 
  summarize_columns(Education, Condition) 

s2_cleaned_data |> 
  summarize_columns(Education_regrouped) 

s2_cleaned_data |> 
  summarize_columns(Education_regrouped, Condition) 

```

#### AI Chatbot Usage

```{r}

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency) 

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency, Condition) 

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped) 

s2_cleaned_data |>
  summarize_columns(AIChatbotsFrequency_regrouped, Condition)

s2_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed)
  
s2_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed, Condition)

```

#### Science Content Familiarity

```{r}

s2_cleaned_data |> 
  summarize_columns(ScienceContent) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent, Condition) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped, Condition) 

```

#### Expertise

```{r}

s2_cleaned_data |> 
  summarize_columns(intention_to_use_score) 

s2_cleaned_data |> 
  summarize_columns(intention_to_use_score, Condition) 

s2_cleaned_data |> 
  summarize_columns(fear_of_ai_score) 

s2_cleaned_data |> 
  summarize_columns(fear_of_ai_score, Condition) 

s2_cleaned_data |> 
  summarize_columns(professional_content_expertise)

s2_cleaned_data |> 
  summarize_columns(professional_content_expertise, Condition) 

# changed opinion of AI
s2_cleaned_data |> 
  summarize_columns(ChangedOpinionOfAI) 

s2_cleaned_data |> 
  summarize_columns(ChangedOpinionOfAI, Condition) 


s2_cleaned_data |> 
  summarize_columns(CouldWriteContent) 

s2_cleaned_data |> 
  summarize_columns(CouldWriteContent, Condition) 


```

### Manipulation Check

#### Chat Analysis

```{r}
# process_chatlogs(s2_cleaned_data)
```

```{r}

```

#### Anthropomorphism

##### Plot

```{r}

violin_plot(s2_cleaned_data, 
            s2_study,
            "Condition",
            "anthropomorphism_score",
            include_legend = FALSE)

```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score) 
```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(anthropomorphism_score ~ Condition)
```

##### Correlations

```{r}

# s2_cleaned_data$Engaging <- as.numeric(s2_cleaned_data$Engaging)
# s2_cleaned_data |> test_correlation("anthropomorphism_score", "Engaging")
# 
# plot <- correlation_plot(s2_cleaned_data,
#             s2_study,
#             "Engaging",
#             "anthropomorphism_score"
#             )
# 
# plot
```

#### Likeability

We were not explicitly intending to manipulate likeability

##### Plot

```{r}
violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "likeability_score",
            include_legend = FALSE)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "likeability_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "likeability_score")

plot
```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, likeability_score)
```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(likeability_score ~ Condition)
```

#### Competence

We were not explicitly intending to manipulate competence \##### Plot

```{r}
violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "competence_score",
            include_legend = FALSE)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "competence_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "competence_score")

plot
```

```{r}


s2_cleaned_data |> test_correlation("competence_score", "likeability_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "competence_score",
            "likeability_score")

plot
```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, competence_score)
```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(competence_score ~ Condition)
```

### Main Analysis

#### Content Trust

##### Plot

```{r}

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "content_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s2_cleaned_data |> descriptives_by_group(Condition, content_trust_combined_score)

```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Condition)
```

##### Post-hoc Analysis

```{r}
result <- run_post_hoc_regression_analysis(
  data = s2_cleaned_data,
  dv = "content_trust_combined_score",
  study = s2_study
)

print(result)
# result <- build_regression_table_apa(
#   data = s2_cleaned_data,
#   dv = "content_trust_combined_score",
#   predictors = c("Condition",  
#                  "likeability_score", "competence_score", 
#                  "author_trust_combined_score",
#                  "Age_1", "Gender", "Sex", "Education_regrouped", 
#                  "AIChatbotsFrequency_regrouped",
#                  "ScienceContent_regrouped",
#                  "intention_to_use_score",
#                  "ChangedOpinionOfAI",
#                  "fear_of_ai_score",
#                  "CouldWriteContent",
#                  "professional_content_expertise",
#                  "SurveyTopicCheck_coded",
#                  "Unrealistic",
#                  "Unrealistic_coded",
#                  "WellWritten",
#                  "Boring",
#                  "Engaging",
#                  "fear_of_ai_score"
#                  ), 
#   study = s2_study
# )
# 
# print(result)

```
###### Anthropomorphism

```{r}

s2_cleaned_data |> linear_model(content_trust_combined_score ~ anthropomorphism_score)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "content_trust_combined_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "content_trust_combined_score")

plot
```

<!-- ###### Author / Content Trust Interaction -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data,  -->
<!--             s2_study, -->
<!--             "author_trust_combined_score", -->
<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |>  -->
<!--   linear_model(content_trust_combined_score ~  author_trust_combined_score * anthropomorphism_score) -->

<!-- # interactions::sim_slopes(lm_model, -->
<!-- #               pred = author_trust_combined_score, -->
<!-- #               modx = anthropomorphism_score) -->

<!-- plot <- s2_cleaned_data |> interaction_plot_3( -->
<!--   lm_model,  -->
<!--   pred_name = "author_trust_combined_score", -->
<!--   mod_name = "anthropomorphism_score",  -->
<!--   target_name = "content_trust_combined_score",  -->
<!--   study = s2_study) -->

<!-- plot -->


<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |>  -->
<!--   linear_model(content_trust_combined_score ~ author_trust_combined_score * anthropomorphism_score * AIChatbotsFrequency_regrouped) -->

<!-- # interactions::sim_slopes(lm_model, -->
<!-- #               pred = author_trust_combined_score, -->
<!-- #               modx = anthropomorphism_score) -->

<!-- plot <- s2_cleaned_data |> interaction_plot_4( -->
<!--   lm_model,  -->
<!--   pred_name = "author_trust_combined_score", -->
<!--   mod_name = "anthropomorphism_score",  -->
<!--   mod2_name = "AIChatbotsFrequency_regrouped", -->
<!--   mod2_v = c("frequently", "occasionally", "rarely"), -->
<!--   target_name = "content_trust_combined_score",  -->
<!--   study = s2_study) -->

<!-- plot -->



<!-- ``` -->

<!-- ###### Age -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(age_range) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ age_range, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("Age_1", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "Age_1", -->
<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Gender -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Gender, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> -->
<!--   droplevels() |> run_simple_effects_t_tests(content_trust_combined_score ~ Gender) -->

<!-- ``` -->

<!-- ###### Sex -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(Sex) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Sex, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Education -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Education_regrouped, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### AI Usage Experience -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ AIChatbotsFrequency_regrouped, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ AIChatbotsFrequency_regrouped) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "AIChatbotsFrequency_regrouped", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(  c("rarely", "occasionally"), -->
<!--     c("rarely", "frequently"), -->
<!--     c("occasionally", "frequently") )) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->
<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * AIChatbotsFrequency_regrouped) -->


<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "AIChatbotsFrequency_regrouped", -->
<!--                                 target_name = "content_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Science Content Experience -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ ScienceContent_regrouped, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ScienceContent_regrouped) -->


<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "ScienceContent_regrouped", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(  c("rarely", "occasionally"), -->
<!--     c("rarely", "frequently"), -->
<!--     c("occasionally", "frequently") )) -->

<!-- plot -->


<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * ScienceContent_regrouped) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "ScienceContent_regrouped", -->
<!--                                 target_name = "content_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->


<!-- ``` -->

<!-- ###### Intention to Use AI -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> test_correlation("intention_to_use_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "intention_to_use_score", -->
<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->


<!-- ``` -->

<!-- ###### Changed Opinion -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(ChangedOpinionOfAI, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ ChangedOpinionOfAI, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ChangedOpinionOfAI) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "ChangedOpinionOfAI", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list( -->
<!--               c("1", "2"), -->
<!--               c("2", "3"), -->
<!--               c("3", "4"), -->
<!--               c("4", "5"), -->
<!--               c("1", "3"), -->
<!--               c("2", "4"), -->
<!--               c("3", "5"), -->
<!--               c("1", "4"), -->
<!--               c("2", "5"), -->
<!--               c("1", "5") -->
<!--               ) -->
<!--     ) -->

<!-- ``` -->

<!-- ###### Fear of AI -->

<!-- ```{r} -->


<!-- s2_cleaned_data |> test_correlation("fear_of_ai_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "fear_of_ai_score", -->
<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Could Write -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(CouldWriteContent, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ CouldWriteContent, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ CouldWriteContent) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "CouldWriteContent", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list( -->
<!--               c("1", "2"), -->
<!--               c("2", "3"), -->
<!--               c("3", "4"), -->
<!--               c("4", "5"), -->
<!--               c("1", "3"), -->
<!--               c("2", "4"), -->
<!--               c("3", "5"), -->
<!--               c("1", "4"), -->
<!--               c("2", "5"), -->
<!--               c("1", "5") -->
<!--               ) -->
<!--     ) -->

<!-- ``` -->

<!-- ###### Professional Content / Writing Expertise -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("professional_content_expertise", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "professional_content_expertise", -->
<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Content Properties -->

<!-- Well-written -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(WellWritten, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ WellWritten, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ WellWritten) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "WellWritten", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list( -->
<!--               c("-2", "-1"), -->
<!--               c("-1", "0"), -->
<!--               c("0", "1"), -->
<!--               c("1", "2"), -->
<!--               c("-2", "0"), -->
<!--               c("-1", "1"), -->
<!--               c("0", "2"), -->
<!--               c("-2", "1"), -->
<!--               c("-1", "2"), -->
<!--               c("-2", "2") -->
<!--               ) -->
<!--     ) -->
<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * WellWritten) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "WellWritten", -->
<!--                                 target_name = "content_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- Boring -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Boring, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Boring, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Boring) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "Boring", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list( -->
<!--               c("-2", "-1"), -->
<!--               c("-1", "0"), -->
<!--               c("0", "1"), -->
<!--               c("1", "2"), -->
<!--               c("-2", "0"), -->
<!--               c("-1", "1"), -->
<!--               c("0", "2"), -->
<!--               c("-2", "1"), -->
<!--               c("-1", "2"), -->
<!--               c("-2", "2") -->
<!--               ) -->
<!--     ) -->
<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Boring) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "Boring", -->
<!--                                 target_name = "content_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- Engaging -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Engaging, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Engaging, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Engaging) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "Engaging", -->
<!--             "content_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list( -->
<!--               c("-2", "-1"), -->
<!--               c("-1", "0"), -->
<!--               c("0", "1"), -->
<!--               c("1", "2"), -->
<!--               c("-2", "0"), -->
<!--               c("-1", "1"), -->
<!--               c("0", "2"), -->
<!--               c("-2", "1"), -->
<!--               c("-1", "2"), -->
<!--               c("-2", "2") -->
<!--               ) -->
<!--     ) -->
<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Engaging) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "Engaging", -->
<!--                                 target_name = "content_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Survey Purpose Check -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ SurveyTopicCheck_coded, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Unrealistic Check -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Unrealistic, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Unrealistic, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Unrealistic_coded, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--    group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |> -->
<!--   run_between_subjects_anova(content_trust_combined_score ~ Unrealistic_coded, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> -->
<!--   droplevels() |> -->
<!--   run_simple_effects_t_tests(content_trust_combined_score ~ Unrealistic_coded) -->


<!-- ``` -->

#### Author Trust

##### Plot

```{r}
plot <- violin_plot(s2_cleaned_data, 
            s2_study,
            "Condition",
            "author_trust_combined_score",
            include_legend = FALSE)

plot

```

##### Descriptive Statistics

```{r}

s2_cleaned_data |> descriptives_by_group(Condition, author_trust_combined_score)

```

##### Inferential Statistics

```{r}

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Condition)

```

##### Post-hoc Analysis

```{r}

result <- run_post_hoc_regression_analysis(
  data = s2_cleaned_data,
  dv = "author_trust_combined_score",
  study = s2_study
)

print(result)
# result <- build_regression_table_apa(
#   data = s2_cleaned_data,
#   dv = "author_trust_combined_score",
#   predictors = c("Condition",  
#                  "likeability_score", "competence_score", 
#                  "content_trust_combined_score",
#                  "Age_1", "Gender", "Sex", "Education_regrouped", 
#                  "AIChatbotsFrequency_regrouped",
#                  "ScienceContent_regrouped",
#                  "intention_to_use_score",
#                  "ChangedOpinionOfAI",
#                  "fear_of_ai_score",
#                  "CouldWriteContent",
#                  "professional_content_expertise",
#                  "SurveyTopicCheck_coded",
#                  "Unrealistic",
#                  "Unrealistic_coded",
#                  "WellWritten",
#                  "Boring",
#                  "Engaging",
#                  "fear_of_ai_score"
#                  ), 
#   study = s2_study
# )
# 
# print(result)

```

###### Anthropomorphism

```{r}

s2_cleaned_data |> linear_model(author_trust_combined_score ~ anthropomorphism_score)

```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "author_trust_combined_score")

plot <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "anthropomorphism_score",
            "author_trust_combined_score")

plot

```

#### Path Analysis

```{r}
s2_cleaned_data$ScienceContent_ordinal <- as.numeric(factor(s2_cleaned_data$ScienceContent_regrouped,
                                              levels = c("rarely", "occasionally", "frequently")))

s2_cleaned_data$AIChatbotsFrequency_ordinal <- as.numeric(factor(s2_cleaned_data$AIChatbotsFrequency_regrouped,
                                              levels = c("rarely", "occasionally", "frequently")))

  s2_cleaned_data$WellWritten_n <- as.numeric(s2_cleaned_data$WellWritten)
  s2_cleaned_data$Boring_n <- as.numeric(s2_cleaned_data$Boring)
  s2_cleaned_data$Engaging_n <- as.numeric(s2_cleaned_data$Engaging)
```

```{r}
model_design <- '
    # Core paths
  anthropomorphism_score ~ a1*Condition
  likeability_score ~ b1*anthropomorphism_score + c1*Condition
  competence_score ~ b2*anthropomorphism_score + b3*likeability_score
  author_trust_combined_score ~ d1*Condition + d2*anthropomorphism_score + d3*likeability_score + d4*competence_score
  content_trust_combined_score ~ e1*author_trust_combined_score + e2*ScienceContent_ordinal + f1*Condition

  # Covariances
  likeability_score ~~ competence_score
  anthropomorphism_score ~~ likeability_score

  # Additional predictors
  likeability_score ~ fear_of_ai_score + AIChatbotsFrequency_ordinal + WellWritten_n + Boring_n + Engaging_n
  competence_score ~ fear_of_ai_score + AIChatbotsFrequency_ordinal + WellWritten_n + Boring_n + Engaging_n
  anthropomorphism_score ~ AIChatbotsFrequency_ordinal + WellWritten_n + Boring_n + Engaging_n
  author_trust_combined_score ~ fear_of_ai_score + intention_to_use_score + AIChatbotsFrequency_ordinal + professional_content_expertise + WellWritten_n + Boring_n + Engaging_n
  content_trust_combined_score ~ fear_of_ai_score + intention_to_use_score + AIChatbotsFrequency_ordinal + professional_content_expertise + WellWritten_n + Boring_n + Engaging_n

  # Indirect effects (retain prior ones for consistency)
  ind1_likeablty := a1 * b1
  ind3_thr_tr___ := a1 * b1 * d3
  ind8_nthr_lk__ := b1 * d3 * e1
'
poster_fit_1 <- s2_cleaned_data |> test_med_mod_model(model_design)
# poster_fit <- sem(model, data = your_data, std.lv = TRUE)
# summary(poster_fit, fit.measures = TRUE, standardized = TRUE)
```

```{r}
lavaan::summary(poster_fit_1, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
plot <- plot_model(poster_fit_1, s2_study)
plot
```


```{r}
s2_model_trimmed <- '
    # Core theoretical path
  anthropomorphism_score ~ a1*Condition
  likeability_score ~ b1*Condition
  competence_score ~ c1*Condition
  author_trust_combined_score ~ likeability_score + competence_score + anthropomorphism_score
  content_trust_combined_score ~ e1*author_trust_combined_score  + WellWritten_n

    # Optional: bidirectional path (uncomment if theoretically justified)
  author_trust_combined_score ~ f1*content_trust_combined_score

  # Optional: or use covariance if you don’t want to assume direction
  # author_trust_combined_score ~~ content_trust_combined_score
  
  # Correlations
  ScienceContent_ordinal ~~ content_trust_combined_score
  competence_score ~~ b2*anthropomorphism_score 
  likeability_score ~~ anthropomorphism_score
  competence_score ~~ likeability_score
  
  # Indirect effects
  ind1 := b1 * e1           # Condition → Anthro → Author Trust  → Content Trust
  ind2 := a1 * e1           # Condition → Likeability → Author Trust → Content Trust
  ind3 := c1 * e1           # Condition → Competence → Author Trust → Content Trust

'

s2_trimmed_model_fit <- s2_cleaned_data |> test_med_mod_model(s2_model_trimmed)
```

```{r}
lavaan::summary(s2_trimmed_model_fit, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
lavaan::inspect(s2_trimmed_model_fit, "r2")
```
```{r}
export_sem_results_to_word(s2_trimmed_model_fit, s2_study, "trimmed_model")
```

```{r}
plot <- plot_model(s2_trimmed_model_fit, s2_study)
plot
```

```{r}

# 
# model_design <- '
#   # Regressions (labeled)
#   anthropomorphism_score ~ a1*Condition
#   likeability_score ~ b1*anthropomorphism_score + c1*Condition
#   competence_score ~ b2*anthropomorphism_score + b3*likeability_score
#   author_trust_combined_score ~ d1*Condition + d2*anthropomorphism_score + d3*likeability_score + d4*competence_score
#   content_trust_combined_score ~ e1*author_trust_combined_score + e2*ScienceContent_ordinal
# 
#   # Correlations
#   likeability_score ~~ competence_score
#   anthropomorphism_score ~~ likeability_score
# 
#   # Indirect effects
#   ind1_likeability := a1 * b1
#   ind2_author_trust_via_anthro := a1 * d2
#   ind3_author_trust_via_anthro_likeability := a1 * b1 * d3
#   ind4_author_trust_full_path := a1 * b1 * b3 * d4
#   ind5_content_trust := e1 * d2 * a1   # Just one of many possible content trust pathways
#   
# '
# poster_fit_2 <- s2_cleaned_data |> test_med_mod_model(model_design)
# # poster_fit <- sem(model, data = your_data, std.lv = TRUE)
```

```{r}
# lavaan::summary(poster_fit_2, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
# plot <- plot_model(poster_fit_2, s2_study)
# plot
```

```{r}
# model_design <- '
#     # Regressions (with path labels)
#   anthropomorphism_score ~ a1*Condition
#   likeability_score ~ b1*anthropomorphism_score + c1*Condition
#   competence_score ~ b2*anthropomorphism_score + b3*likeability_score
#   author_trust_combined_score ~ d1*Condition + d2*anthropomorphism_score + d3*likeability_score + d4*competence_score
#   content_trust_combined_score ~ e1*author_trust_combined_score + e2*ScienceContent_ordinal + f1*Condition
# 
#   # Correlations
#   likeability_score ~~ competence_score
#   anthropomorphism_score ~~ likeability_score
# 
#   # Indirect effects
#   ind1_likeablty := a1 * b1
#   ind2_thr_trs__ := a1 * d2
#   ind3_thr_tr___ := a1 * b1 * d3
#   ind4_thr_trs__ := a1 * b1 * b3 * d4
#   ind5_cntnt_trs := e1 * d2 * a1
# 
#   # NEW indirect effects
#   ind6_cond_to_content_direct := f1
#   ind7_cond_likeability_author_content := c1 * d3 * e1
#   ind8_anthro_likeability_author_content := b1 * d3 * e1
#   
# '
# poster_fit_3 <- s2_cleaned_data |> test_med_mod_model(model_design)
# # poster_fit <- sem(model, data = your_data, std.lv = TRUE)
```

```{r}
# lavaan::summary(poster_fit_3, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
# plot <- plot_model(poster_fit_3, s2_study)
# plot

```

```{r}
# 
# # + e2*ScienceContent_ordinal
# # + h1*AIChatbotsFrequency_ordinal
# # ind7 := h1 * f1 * e1                # AI Usage → Competence → Author Trust → Content Trust
# #   AIChatbotsFrequency_ordinal ~~ competence_score
#   # AIChatbotsFrequency_ordinal ~~ likeability_score
#   # AIChatbotsFrequency_ordinal ~~ anthropomorphism_score
# 
# s2_model_trimmed <- '
#   # Core theoretical path
#   anthropomorphism_score ~ a1*Condition
#   likeability_score ~ b1*Condition
#   competence_score ~ c1*Condition
#   author_trust_combined_score ~ likeability_score + competence_score + anthropomorphism_score
#   content_trust_combined_score ~ e1*author_trust_combined_score  + WellWritten_n
# 
#   # Correlations
#   ScienceContent_ordinal ~~ content_trust_combined_score
#   competence_score ~~ b2*anthropomorphism_score 
#   likeability_score ~~ anthropomorphism_score
#   competence_score ~~ likeability_score
#   
#   # Indirect effects
#   ind1 := b1 * e1                # Condition → Anthro → Likeability → Author Trust  → Content Trust
#   ind2 := a1 * e1           # Condition → Likeability → Author Trust → Content Trust
#   ind3 := c1 * e1                     # Competence → Author Trust → Content Trust
# 
# '
# 
# s2_trimmed_model_fit <- s2_cleaned_data |> test_med_mod_model(s2_model_trimmed)
```

```{r}
# lavaan::summary(s2_trimmed_model_fit, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}

# lavaan::inspect(s2_trimmed_model_fit, "r2")
```


```{r}
# plot <- plot_model(s2_trimmed_model_fit, s2_study)
# plot
``` 

<!-- ```{r} -->

<!-- # Mean center variables -->
<!-- s2_cleaned_data$anthropomorphism_c <- scale(s2_cleaned_data$anthropomorphism_score, scale = FALSE) -->
<!-- s2_cleaned_data$AIUsage_c <- scale(as.numeric(s2_cleaned_data$AIChatbotsFrequency_regrouped), scale = FALSE) -->

<!-- # Interaction term -->
<!-- s2_cleaned_data$anthro_x_usage <- s2_cleaned_data$anthropomorphism_c * s2_cleaned_data$AIUsage_c -->

<!-- model_design <- ' -->
<!--   # Regressions -->
<!--   anthropomorphism_score ~ a1 * Condition -->
<!--   likeability_score ~ a3 * anthropomorphism_score + e * Condition  -->
<!--   author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition + b3 * likeability_score + m1 * anthro_x_usage -->
<!--   content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + c_prime * Condition -->

<!--   # Indirect Effects -->
<!--   indirect1 := a1 * b2 -->
<!--   indirect2 := a1 * a2 * b1 -->
<!--   moderated_indirect := a1 * m1 * b1 -->
<!--   indirect3 := d * b1 -->
<!--   indirect4 := e * b3 * b1 -->
<!--   indirect5 := a1 * a3 * b3 * b1 -->

<!--   # Total effect -->
<!--   total := c_prime + indirect1 + indirect2 + indirect3 + indirect4 + indirect5 + moderated_indirect -->
<!-- ' -->

<!-- # s2_fit_basic <- s2_cleaned_data |> test_med_mod_model(model_design) -->

<!-- ``` -->

<!-- ```{r} -->
<!-- # plot <- plot_model(s2_fit_basic, s2_study) -->
<!-- #  -->
<!-- # plot -->
<!-- ``` -->

<!-- ```{r} -->

<!-- # Mean center variables -->
<!-- s2_cleaned_data$anthropomorphism_c <- scale(s2_cleaned_data$anthropomorphism_score, scale = FALSE) -->
<!-- s2_cleaned_data$AIUsage_c <- scale(as.numeric(s2_cleaned_data$AIChatbotsFrequency_regrouped), scale = FALSE) -->

<!-- # Interaction term -->
<!-- s2_cleaned_data$anthro_x_usage <- s2_cleaned_data$anthropomorphism_c * s2_cleaned_data$AIUsage_c -->

<!-- model_design <- ' -->

<!--   # Define the latent variable -->
<!--   author_trust_behaviour =~ author_trust_behavioural_score -->

<!--   expertise =~ z.GodspeedMETI_10 + z.GodspeedMETI_13 + z.GodspeedMETI_15r + z.GodspeedMETI_16r + z.GodspeedMETI_17r + z.GodspeedMETI_18r -->
<!--   integreity =~ z.GodspeedMETI_19r + z.GodspeedMETI_20r + z.GodspeedMETI_21r + z.GodspeedMETI_22r -->
<!--   benevolence =~ z.GodspeedMETI_23r + z.GodspeedMETI_24r + z.GodspeedMETI_25r + z.GodspeedMETI_26r -->
<!--   author_trust_traits =~ expertise + integreity + benevolence  -->

<!--   perceived_author_trust =~ author_trust_behaviour + author_trust_traits -->

<!--   # Mediation paths -->
<!--   anthropomorphism_score ~ a1 * Condition -->
<!--   perceived_author_trust ~ a2 * anthropomorphism_score + d * Condition + m1 * anthro_x_usage -->
<!--   content_trust_combined_score ~ b1 * perceived_author_trust + b2 * anthropomorphism_score + c_prime * Condition -->

<!--   # Indirect effects -->
<!--   indirect1 := a1 * b2 -->
<!--   indirect2 := a1 * a2 * b1 -->
<!--   indirect3 := d * b1 -->
<!--   moderated_indirect := a1 * m1 * b1 -->

<!--   # Total effect -->
<!--   total := c_prime + indirect1 + indirect2 + indirect3 + moderated_indirect -->

<!-- ' -->


<!-- # s2_fit_basic <- s2_cleaned_data |> test_med_mod_model(model_design) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # subset = c("Condition", "anthropomorphism_score", "perceived_author_trust", "content_trust_combined_score", "anthro_x_usage", "expertise", "integrity", "benevolence", "author_trust_traits", "author_trust_behaviour") -->

<!-- # plot <- plot_model(s2_fit_basic, s2_study) -->
<!-- #  -->
<!-- # plot -->
<!-- ``` -->

<!-- ```{r} -->
<!-- model_design <- ' -->
<!--   # Mediation paths -->
<!--   anthropomorphism_score ~ a1 * Condition -->
<!--   author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition  -->
<!--   content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + c_prime * Condition -->

<!--   # Indirect effects -->
<!--   indirect1 := a1 * b2 -->
<!--   indirect2 := a1 * a2 * b1 -->
<!--   indirect3 := d * b1 -->

<!--   # Total effect -->
<!--   total := c_prime + indirect1 + indirect2 + indirect3 -->
<!-- ' -->
<!-- # s2_fit_basic <- s2_cleaned_data |> test_med_mod_model(model_design) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # plot <- plot_model(s2_fit_basic, s2_study) -->
<!-- #  -->
<!-- # plot -->
<!-- ``` -->

<!-- ```{r} -->
<!-- model_design <- ' -->

<!--   # Define the latent variable -->
<!--   author_trust_behaviour =~ z.TrustBehaviour_7 + z.TrustBehaviour_8 + z.TrustBehaviour_10 + z.TrustBehaviour_11 -->

<!--   expertise =~ z.GodspeedMETI_10 + z.GodspeedMETI_13 + z.GodspeedMETI_15r + z.GodspeedMETI_16r + z.GodspeedMETI_17r + z.GodspeedMETI_18r -->
<!--   integreity =~ z.GodspeedMETI_19r + z.GodspeedMETI_20r + z.GodspeedMETI_21r + z.GodspeedMETI_22r -->
<!--   benevolence =~ z.GodspeedMETI_23r + z.GodspeedMETI_24r + z.GodspeedMETI_25r + z.GodspeedMETI_26r -->
<!--   author_trust_traits =~ expertise + integreity + benevolence  -->

<!--   perceived_author_trust =~ author_trust_behaviour + author_trust_traits -->

<!--   # Mediation paths -->
<!--   anthropomorphism_score ~ a1 * Condition -->
<!--   perceived_author_trust ~ a2 * anthropomorphism_score + d * Condition  -->
<!--   content_trust_combined_score ~ b1 * perceived_author_trust + b2 * anthropomorphism_score + c_prime * Condition -->

<!--   # Indirect effects -->
<!--   indirect1 := a1 * b2 -->
<!--   indirect2 := a1 * a2 * b1 -->
<!--   indirect3 := d * b1 -->

<!--   # Total effect -->
<!--   total := c_prime + indirect1 + indirect2 + indirect3 -->
<!-- ' -->
<!-- # s2_fit_basic <- s2_cleaned_data |> test_med_mod_model(model_design) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # summary_table <- get_sem_summary_table(s2_fit_basic, save_doc = TRUE, outfile = "plots/s2/sem_summary_table.docx") -->
<!-- # knitr::kable(summary_table) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # plot <- plot_model(s2_fit_basic, s2_study) -->
<!-- #  -->
<!-- # plot -->
<!-- ``` -->

<!-- ```{r} -->
<!-- model_design <- ' -->
<!--   # Mediation paths -->
<!--   anthropomorphism_score ~ a1 * Condition -->
<!--   likeability_score ~ a3 * anthropomorphism_score + e * Condition -->
<!--   author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition + b3 * likeability_score -->
<!--   content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + c_prime * Condition -->

<!--   # Indirect effects -->
<!--   indirect1 := a1 * b2 -->
<!--   indirect2 := a1 * a2 * b1 -->
<!--   indirect3 := d * b1 -->
<!--   indirect4 := e * b3 * b1 -->
<!--   indirect5 := a1 * a3 * b3 * b1 -->

<!--   # Total effect -->
<!--   total := c_prime + indirect1 + indirect2 + indirect3 + indirect4 + indirect5 -->
<!-- ' -->
<!-- # s2_fit_with_likeability <- s2_cleaned_data |> test_med_mod_model(model_design) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # plot <- plot_model(s2_fit_with_likeability, s2_study) -->
<!-- #  -->
<!-- # plot -->
<!-- ``` -->

<!-- ```{r} -->
<!-- model_design <- ' -->
<!--   # Mediation paths -->
<!--   anthropomorphism_score ~ a1 * Condition -->
<!--   likeability_score ~ a3 * anthropomorphism_score + e * Condition -->
<!--   competence_score ~ f * Condition + b4 * likeability_score + b5 * anthropomorphism_score -->
<!--   author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition + b3 * likeability_score + b6 * competence_score -->
<!--   content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + b7 * competence_score + b8 * likeability_score + c_prime * Condition -->

<!--   # Indirect effects -->
<!--   indirect1 := a1 * b2 -->
<!--   indirect2 := a1 * a2 * b1 -->
<!--   indirect3 := d * b1 -->
<!--   indirect4 := e * b3 * b1 -->
<!--   indirect5 := a1 * a3 * b3 * b1 -->
<!--   indirect6 := f * b7 -->
<!--   indirect7 := f * b6 * b1 -->
<!--   indirect8 := e * b8 -->

<!--   # Total effect -->
<!--   total := c_prime + indirect1 + indirect2 + indirect3 + indirect4 + indirect5 + indirect6 + indirect7 + indirect8 -->
<!-- ' -->
<!-- # s2_fit_with_likeability_and_competence <- s2_cleaned_data |> test_med_mod_model(model_design) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # plot <- plot_model(s2_fit_with_likeability_and_competence, s2_study) -->
<!-- #  -->
<!-- # plot -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # library(lavaan) -->
<!-- #  -->
<!-- # model <- ' -->
<!-- #   # Mutual paths -->
<!-- #   anthropomorphism_score ~ author_trust_combined_score -->
<!-- #   author_trust_combined_score ~ anthropomorphism_score -->
<!-- # ' -->
<!-- #  -->
<!-- # fit <- sem(model, data = s2_cleaned_data) -->
<!-- # summary(fit, standardized = TRUE) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # # Mediation model -->
<!-- # library(mediation) -->
<!-- #  -->
<!-- # # Mediator model -->
<!-- # med_model <- lm(author_trust_combined_score ~ Condition, data = s2_cleaned_data) -->
<!-- #  -->
<!-- # # Outcome model -->
<!-- # outcome_model <- lm(content_trust_combined_score ~ Condition + author_trust_combined_score, data = s2_cleaned_data) -->
<!-- #  -->
<!-- # # Mediation analysis -->
<!-- # mediation_result <- mediate(med_model, outcome_model, -->
<!-- #                             treat = "Condition", -->
<!-- #                             mediator = "author_trust_combined_score", -->
<!-- #                             boot = TRUE, sims = 5000) -->
<!-- #  -->
<!-- # summary(mediation_result) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # library(lavaan) -->
<!-- #  -->
<!-- # s2_cleaned_data$interaction_term <- s2_cleaned_data$author_trust_combined_score * s2_cleaned_data$anthropomorphism_score -->
<!-- #  -->
<!-- #  -->
<!-- # modmed_model <- ' -->
<!-- #   # First stage: Condition → Author Trust -->
<!-- #   author_trust_combined_score ~ a1*Condition -->
<!-- #  -->
<!-- #   # Second stage: Content Trust ~ Author Trust + Moderator + Interaction -->
<!-- #   content_trust_combined_score ~ b1*author_trust_combined_score + b2*anthropomorphism_score + b3*interaction_term -->
<!-- #  -->
<!-- #   # Indirect effect (not moderated) -->
<!-- #   indirect := a1 * b1 -->
<!-- #  -->
<!-- #   # Conditional indirect effect when moderator is low (-1 SD) and high (+1 SD) -->
<!-- #   ind_low := a1 * (b1 + b3 * -1) -->
<!-- #   ind_high := a1 * (b1 + b3 * 1) -->
<!-- # ' -->
<!-- #  -->
<!-- # fit <- sem(modmed_model, data = s2_cleaned_data, se = "bootstrap", bootstrap = 5000) -->
<!-- # summary(fit, standardized = TRUE) -->

<!-- ``` -->

<!-- ```{r} -->
<!-- # library(semPlot) -->
<!-- #  -->
<!-- # # # After fitting a lavaan model: -->
<!-- # # semPaths(fit,  -->
<!-- # #          what = "std",             # show standardized coefficients -->
<!-- # #          layout = "circle",        # or "tree", "spring", "circle2" -->
<!-- # #          edge.label.cex = 1.2,     # size of path labels -->
<!-- # #          nCharNodes = 0,           # don't shorten node names -->
<!-- # #          sizeMan = 8,              # node size -->
<!-- # #          residuals = FALSE,        # hide residual variances -->
<!-- # #          title = FALSE) -->
<!-- #  -->
<!-- # semPaths( -->
<!-- #   object = fit,              # your lavaan model object -->
<!-- #   what = "std",              # show standardized coefficients -->
<!-- #   layout = "tree",           # "tree", "circle", "spring", etc. -->
<!-- #   edge.label.cex = 1.2,      # size of edge (path) labels -->
<!-- #   sizeMan = 8,               # size of variable boxes -->
<!-- #   sizeLat = 0,               # hide latent variable nodes (you have none) -->
<!-- #   residuals = FALSE,         # don't show residual variances -->
<!-- #   nCharNodes = 0,            # show full variable names -->
<!-- #   title = FALSE -->
<!-- # ) -->

<!-- ``` -->

<!-- ```{r} -->
<!-- #  -->
<!-- # lm_model <- lm(author_trust_combined_score ~ anthropomorphism_score * content_trust_combined_score, data = s2_cleaned_data) -->
<!-- # summary(lm_model) -->
<!-- #  -->
<!-- # plot <- interact_plot(lm_model,  -->
<!-- #               pred = anthropomorphism_score,  -->
<!-- #               modx = content_trust_combined_score,   -->
<!-- #               x.label ="Anthropomorphism Score", -->
<!-- #               y.label = "Author Trust Score", -->
<!-- #               legend.main = "Content Trust Score", -->
<!-- #               plot.points = TRUE, jitter = 0.5, point.alpha = 0.25, geom="bar",  -->
<!-- #               colors = safe_pal) + -->
<!-- #   theme(legend.position = "right") -->
<!-- #  -->
<!-- # ggsave("plots/s2/author_anthropomorphism_content_interaction.png", plot = plot, create.dir = TRUE) -->
<!-- #  -->
<!-- # plot -->

<!-- ``` -->

<!-- ```{r} -->
<!-- #  -->
<!-- # lm_model <- lm(author_trust_combined_score ~ anthropomorphism_score * content_trust_combined_score * AIChatbotsFrequency_regrouped, data = s2_cleaned_data) -->
<!-- # summary(lm_model) -->
<!-- #  -->
<!-- # plot <- interact_plot(lm_model,  -->
<!-- #               pred = anthropomorphism_score,  -->
<!-- #               modx = content_trust_combined_score, -->
<!-- #               mod2 = AIChatbotsFrequency_regrouped, -->
<!-- #               x.label ="Anthropomorphism Score", -->
<!-- #               y.label = "Author Trust Score", -->
<!-- #               legend.main = "Content Trust Score", -->
<!-- #               mod2.values = c("frequently", "occasionally", "rarely"), -->
<!-- #               mod2.labels = c("frequently", "occasionally", "rarely"), -->
<!-- #               plot.points = TRUE, jitter = 0.5, point.alpha = 0.25, geom="bar",  -->
<!-- #               colors = safe_pal) + -->
<!-- #   theme(legend.position = "right") -->
<!-- #  -->
<!-- # ggsave("plots/s2/author_anthropomorphism_content_frequency_interaction.png", plot = plot, create.dir = TRUE) -->
<!-- #  -->
<!-- # plot -->

<!-- ``` -->

<!-- ```{r} -->
<!-- #  -->
<!-- # lm_model <- lm(author_trust_combined_score ~ anthropomorphism_score * AIChatbotsFrequency_regrouped, data = s2_cleaned_data) -->
<!-- # summary(lm_model) -->
<!-- #  -->
<!-- # plot <- interact_plot(lm_model,  -->
<!-- #               pred = anthropomorphism_score,  -->
<!-- #               modx = AIChatbotsFrequency_regrouped, -->
<!-- #               x.label ="Anthropomorphism Score", -->
<!-- #               y.label = "Author Trust Score", -->
<!-- #               legend.main = "Frequency", -->
<!-- #               # mod2.values = c("frequently", "occasionally", "rarely"), -->
<!-- #               # mod2.labels = c("frequently", "occasionally", "rarely"), -->
<!-- #               plot.points = TRUE, jitter = 0.5, point.alpha = 0.25, geom="bar",  -->
<!-- #               colors = safe_pal) + -->
<!-- #   theme(legend.position = "right") -->
<!-- #  -->
<!-- # ggsave("plots/s2/author_anthropomorphism_frequency_interaction.png", plot = plot, create.dir = TRUE) -->
<!-- #  -->
<!-- # plot -->

<!-- ``` -->

<!-- ###### Age -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(age_range, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(age_range) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ age_range, "author_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("Age_1", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data,  -->
<!--             s2_study, -->
<!--             "Age_1", -->
<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Gender (Man / Woman only) -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Gender, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(Gender) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Gender, "author_trust_combined_score") -->


<!-- ``` -->

<!-- ###### Sex (Male / Female only) -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(Sex, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(Sex) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Sex, "author_trust_combined_score") -->
<!-- ``` -->

<!-- ###### Education -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(Education, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(Education) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Education, "author_trust_combined_score") -->



<!-- ``` -->

<!-- ###### AI Usage Experience -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(AIChatbotsFrequency_regrouped, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(AIChatbotsFrequency_regrouped) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ AIChatbotsFrequency_regrouped, "author_trust_combined_score") -->


<!-- ``` -->

<!-- ###### Science Content Experience -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(ScienceContent, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(ScienceContent) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ ScienceContent, "author_trust_combined_score") -->


<!-- s2_cleaned_data |> descriptives_by_group(ScienceContent_regrouped, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   group_by(ScienceContent_regrouped) |> filter(n() > 3) |> ungroup() |> -->
<!--   droplevels() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ ScienceContent_regrouped, "author_trust_combined_score") -->


<!-- ``` -->

<!-- ###### Intention to Use AI -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("intention_to_use_score", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data,  -->
<!--             s2_study, -->
<!--             "intention_to_use_score", -->
<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->



<!-- ``` -->

<!-- ###### Changed Opinion -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(ChangedOpinionOfAI, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ ChangedOpinionOfAI, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ ChangedOpinionOfAI) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "ChangedOpinionOfAI", -->
<!--             "author_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(   -->
<!--               c("1", "2"), -->
<!--               c("2", "3"), -->
<!--               c("3", "4"), -->
<!--               c("4", "5"), -->
<!--               c("1", "3"), -->
<!--               c("2", "4"), -->
<!--               c("3", "5"), -->
<!--               c("1", "4"), -->
<!--               c("2", "5"), -->
<!--               c("1", "5") -->
<!--               ) -->
<!--     ) -->
<!-- ``` -->

<!-- ###### Fear of AI -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("fear_of_ai_score", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data,  -->
<!--             s2_study, -->
<!--             "fear_of_ai_score", -->
<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Could Write -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(CouldWriteContent, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ CouldWriteContent, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ CouldWriteContent) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "CouldWriteContent", -->
<!--             "author_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(   -->
<!--               c("1", "2"), -->
<!--               c("2", "3"), -->
<!--               c("3", "4"), -->
<!--               c("4", "5"), -->
<!--               c("1", "3"), -->
<!--               c("2", "4"), -->
<!--               c("3", "5"), -->
<!--               c("1", "4"), -->
<!--               c("2", "5"), -->
<!--               c("1", "5") -->
<!--               ) -->
<!--     ) -->
<!-- ``` -->

<!-- ###### Professional Content / Writing Expertise -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("professional_content_expertise", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data,  -->
<!--             s2_study, -->
<!--             "professional_content_expertise", -->
<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->
<!-- plots$lm -->
<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Content Properties -->

<!-- ####### Well-written -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(WellWritten, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ WellWritten, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ WellWritten) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "WellWritten", -->
<!--             "author_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(   -->
<!--               c("-2", "-1"), -->
<!--               c("-1", "0"), -->
<!--               c("0", "1"), -->
<!--               c("1", "2"), -->
<!--               c("-2", "0"), -->
<!--               c("-1", "1"), -->
<!--               c("0", "2"), -->
<!--               c("-2", "1"), -->
<!--               c("-1", "2"), -->
<!--               c("-2", "2") -->
<!--               ) -->
<!--     ) -->

<!-- lm_model <- s2_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * WellWritten) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "WellWritten", -->
<!--                                 target_name = "author_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ####### Boring -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Boring, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Boring, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Boring) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "Boring", -->
<!--             "author_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(   -->
<!--               c("-2", "-1"), -->
<!--               c("-1", "0"), -->
<!--               c("0", "1"), -->
<!--               c("1", "2"), -->
<!--               c("-2", "0"), -->
<!--               c("-1", "1"), -->
<!--               c("0", "2"), -->
<!--               c("-2", "1"), -->
<!--               c("-1", "2"), -->
<!--               c("-2", "2") -->
<!--               ) -->
<!--     ) -->


<!-- lm_model <- s2_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Boring) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "Boring", -->
<!--                                 target_name = "author_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ####### Engaging -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Engaging, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Engaging, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Engaging) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->
<!--             s2_study, -->
<!--             "Engaging", -->
<!--             "author_trust_combined_score", -->
<!--             include_legend = FALSE, -->
<!--             comparisons = list(   -->
<!--               c("-2", "-1"), -->
<!--               c("-1", "0"), -->
<!--               c("0", "1"), -->
<!--               c("1", "2"), -->
<!--               c("-2", "0"), -->
<!--               c("-1", "1"), -->
<!--               c("0", "2"), -->
<!--               c("-2", "1"), -->
<!--               c("-1", "2"), -->
<!--               c("-2", "2") -->
<!--               ) -->
<!--     ) -->
<!-- lm_model <- s2_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Engaging) -->

<!-- plot <- s2_cleaned_data |> -->
<!--   categorical_interaction_plot_3(lm_model, -->
<!--                                 pred_name = "Condition", -->
<!--                                 mod_name = "Engaging", -->
<!--                                 target_name = "author_trust_combined_score", -->
<!--                                 study = s2_study -->
<!--                                 ) -->

<!-- plot -->
<!-- ``` -->

<!-- ###### Survey Purpose Check -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ SurveyTopicCheck_coded, "author_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Unrealistic Check -->

<!-- ```{r} -->
<!-- s2_cleaned_data |> descriptives_by_group(Unrealistic, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Unrealistic, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> descriptives_by_group(Unrealistic_coded, author_trust_combined_score)  -->

<!-- aov_model <- s2_cleaned_data |> -->
<!--    group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |> -->
<!--   run_between_subjects_anova(author_trust_combined_score ~ Unrealistic_coded, "author_trust_combined_score") -->

<!-- s2_cleaned_data |> -->
<!--   droplevels() |> -->
<!--   run_simple_effects_t_tests(author_trust_combined_score ~ Unrealistic_coded) -->

<!-- ``` -->

#### Correlations



```{r}

s2_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "author_trust_combined_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess
```

```{r}

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s2_cleaned_data |> filter(Condition == "High")),

        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))

      )

)

```


# References

```{r}
citation()
version$version.string

citation("rstatix")
packageVersion("rstatix")

citation("stats")
packageVersion("stats")

citation("effectsize")
packageVersion("effectsize")

citation("psych")
packageVersion("psych")

citation("interactions")
packageVersion("interactions")

citation("corrplot")
packageVersion("corrplot")

citation("performance")
packageVersion("performance")

citation("FSA")
packageVersion("FSA")

citation("see")
packageVersion("see")
```
