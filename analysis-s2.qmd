---
title: "Analysis"
author: "Caroline Simpson"
format: 
  html:
    theme: cerulean
    df-print: kable
    code-fold: false
    toc: true
    toc-float:
      collapsed: true
      smooth-scroll: false
    toc-depth: 7

editor: visual
---

```{r include=FALSE}
#| label: setup

library(knitr)
library(kableExtra)

# library(rstatix)
# library(tidyverse)
# library(forcats)
# 
# library(haven)
# library(jtools)
# library(forcats)
# library(FactoMineR)
# library(psych)
# library(interactions)
# library(corrplot)
# library(rcartocolor)
# library(ggpubr)
# library(apaTables)
# library(FSA)
# 
# library(performance)
# library(see)


source("./scripts/data-loading.R", local = TRUE)
source("./scripts/data-cleaning.R", local = TRUE)
source("./scripts/analysis-data-properties.R", local = TRUE)
source("./scripts/analysis-descriptives.R", local = TRUE)
source("./scripts/analysis-reliability.R", local = TRUE)
source("./scripts/analysis-inferential.R", local = TRUE)
source("./scripts/analysis-correlation.R", local = TRUE)
source("./scripts/analysis-moderation-mediation.R", local = TRUE)
source("./scripts/analysis-chat-logs.R", local = TRUE)
source("./scripts/plotting.R", local = TRUE)
source("./scripts/common.R", local = TRUE)

directory_setup()
theme_set(my_theme)

s2_study <- "s2"

```

# Trusting the machine: Epistemic trust and anthropomorphism in generative artificial intelligence

**Research Question**: What effect does anthropomorphism have on level of trust in generative AI and the content it creates?

My **hypothesis** is that there will be an increase in epistemic trust with increasing levels of anthropomorphism.

## Highlights

## Next Steps

## Data Analysis

### Load data

```{r}
#| label: load-data

s2_raw_data <- load_data(s2_study)
s2_raw_data <- factorize_data(s2_study, s2_raw_data)


```

Number of participants in raw data = `r nrow(s2_raw_data)`.

```{r}
#| label: explode-chatbots-used

s2_raw_data <- explode_chatbots_used(s2_raw_data)

```

### Exclude non-consent

```{r}

s2_raw_data <- exclude_non_consenting_participants(s2_raw_data)

```

### Manual Processing

Reviewed and coded Survey purpose check (what they think this study is about, not the attention check)

-   Manually coded the response values with the following key:

    -   0 = no answer provided

    -   1 = identified the survey was about AI content, perception of AI, human versus AI distinction

    -   2 = nonsensical text

    -   3 = values that describe a purpose (not about AI)

    -   4 = random word

    -   5 = unsure

    -   6 = "the study was interesting" or "good" and variations of this

    -   7 = None

    -   8 = paying attention

```{r}
#| label: participant-survey-topic-check

s2_raw_data |> 
  summarize_columns(SurveyTopicCheck_coded) 
```

Reviewed and coded Unrealistic parts of survey.

-   Unrealistic field is a separate field with the values of:

    -   1 = No

    -   2 = Yes

-   Unrealistic_coded -\> Manually coded the response values from Unrealistic_2_TEXT field with the following key:

    -   0 = no answer provided

    -   1 = didn't believe content written by the AI

    -   2 = don't believe that traits make sense to apply to AI

    -   3 = it all seemed realistic

    -   4 = description of AI was not believable

    -   5 = random text

    -   6 = unsure why they were asked questions about AI (in High condition)

    -   7 = Identified didn't follow instructions

    -   8 = Confusion with sliders

    -   9 = The chat (Chatbot was too fast, Chatbot wouldn't talk about other topics, Question why they would talk to an author)

    -   10 = Didn't understand the blog post

    -   11 = other (subconscious bias introduced)

    -   12 = predisposed to distrust information in experiments

    -   13 =

    -   14 = Quality or content of the article (no citations, etc)

```{r}

s2_raw_data |> 
  summarize_columns(Unrealistic) 

s2_raw_data |> 
  summarize_columns(Unrealistic, Unrealistic_coded) 
```

### Clean Data

#### Validate no duplicate participants

```{r}
duplicates <- s2_raw_data |> count_duplicate_participants()

```

There are `r if (duplicates == 0) "no duplicate participants" else paste (duplicates, "duplicates")`

```{r clean_remove_duplicates}
s2_deduped_data <- s2_raw_data |> deduplicate_participants()
duplicates <- s2_deduped_data |> count_duplicate_participants()
```

There are `r if (duplicates == 0) "no duplicate participants" else paste (duplicates, "duplicates")`after removing duplicates.

```{r}
recruited_participants <- s2_deduped_data |> count_recruited_participants(s2_study)

```

Number of participants recruited = `r recruited_participants`.

```{r}
s2_cleaned_data <- s2_deduped_data |> clean_data(s2_study)
```

Number of participants after exclusions = `r nrow(s2_cleaned_data)`.

### Fill missing values

#### Assess skewness and distribution

```{r}
s2_cleaned_data |> check_skewness(s2_study)

s2_cleaned_data |>
  dplyr::select(-Progress, -ConsentForm, -`Duration (in seconds)`, -Status, -Finished, -TopicCheck, -GodspeedMETI_28, -GodspeedMETI_29, -AIChatbotsUsed_NA) |> 
  check_normality(s2_study)

```

#### Fill missing values with median values

Populate missing values with the median within Condition.

```{r}

missing_values_within_conditions(s2_cleaned_data)

# Perform imputation only on selected variables
s2_imputed_data <- impute_data(s2_cleaned_data)

missing_values_within_conditions(s2_imputed_data)

```

### Reverse Coding

Reverse code items for each scale where appropriate

```{r}

s2_recoded_data <- s2_imputed_data |> recode_data(s2_study)

```

#### Standardize Scale Item Values

```{r}


s2_cleaned_data <- s2_recoded_data |> standardize_data()


```

#### Regroup data

Regroup the AIChatbotsFrequency, Education, and Age columns into smaller number of categories of data for analysis. Some of the more granular categories don't have a large enough sample for meaningful comparisons.

```{r}

s2_cleaned_data <- s2_cleaned_data |> regroup_data()                                  
```

### Calculate Scale Scores

#### Define Score Components

```{r}

s2_cleaned_data <- s2_cleaned_data |> compute_scores(s2_study)

```

### Scale Inter-item Reliability Analysis

#### Anthropomorphism (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$anthropomorphism_score)

s2_cleaned_data |> cronbachs_alpha(get_anthropomorphism_score_godspeed_cols())

```

#### Likeability (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$likeability_score)

s2_cleaned_data |> cronbachs_alpha(get_likeability_score_godspeed_cols())

```

#### Competence (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$competence_score)

s2_cleaned_data |> cronbachs_alpha(get_competence_score_godspeed_cols())

```

#### Expertise (METI Subscale)

```{r}

basic_descriptives(s2_cleaned_data$expertise_score)

s2_cleaned_data |> cronbachs_alpha(get_expertise_score_METI_cols())

```

#### Integrity (METI Subscale)

```{r}

basic_descriptives(s2_cleaned_data$integrity_score)

s2_cleaned_data |> cronbachs_alpha(get_integrity_score_METI_cols())


```

#### Benevolence (METI Subscale)

```{r}
basic_descriptives(s2_cleaned_data$benevolence_score)

s2_cleaned_data |> cronbachs_alpha(get_benevolence_score_METI_cols())

```

#### METI (Author Trust)

```{r}

basic_descriptives(s2_cleaned_data$author_trust_METI_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_METI_cols())

```

#### Trust Behaviour (Author Trust)

```{r}
basic_descriptives(s2_cleaned_data$author_trust_behaviour_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_behaviour_cols(s2_study))

```

#### Combine Author Trust

```{r}

basic_descriptives(s2_cleaned_data$author_trust_combined_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_combined_cols(s2_study))


```

#### Appelman (Content Trust)

```{r}
basic_descriptives(s2_cleaned_data$content_trust_appelman_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_appelman_cols())

```

#### Trust Behaviour (Content Trust)

```{r}
basic_descriptives(s2_cleaned_data$content_trust_behaviour_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_behaviour_cols())

```

#### Combined Content Trust

```{r}

basic_descriptives(s2_cleaned_data$content_trust_combined_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_combined_cols())

```

#### Expertise / Intentions

```{r}
basic_descriptives(s2_cleaned_data$intention_to_use_score)
s2_cleaned_data |> cronbachs_alpha(get_intention_cols())


basic_descriptives(s2_cleaned_data$fear_of_ai_score)
s2_cleaned_data |> cronbachs_alpha(get_fear_cols())


basic_descriptives(s2_cleaned_data$professional_content_expertise)
s2_cleaned_data |> cronbachs_alpha(get_participant_expertise_cols())

```

### Sample Characteristics

```         
N=`r length(unique(s2_cleaned_data$ResponseId))`
```

#### Study duration (in minutes)

```{r}
basic_descriptives(s2_cleaned_data$`Duration (in seconds)` / 60)
```

#### Participants reporting Technical Issues (Not removed in data cleaning)

```{r}
s2_cleaned_data |> 
  summarize_columns(TechnicalIssues) 

```

```{r}
s2_cleaned_data |> 
  summarize_columns(Unrealistic_coded) 
```

#### Participants per condition.

```{r}
s2_cleaned_data |> 
  summarize_columns(Condition)

```

#### Age

```         
Age range: `r round(min(s2_cleaned_data$Age_1, na.rm = TRUE), 2)` to `r round(max(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
Mean age: `r round(mean(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
Standard deviation: `r round(sd(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
```

```{r}
s2_cleaned_data |> 
  summarize_columns(age_range)

s2_cleaned_data |> 
  summarize_columns(age_range, Condition) 
```

#### Gender

```{r}

s2_cleaned_data |> 
  summarize_columns(Gender) 

s2_cleaned_data |> 
  summarize_columns(Gender, Condition) 

```

#### Sex

```{r}

s2_cleaned_data |> 
  summarize_columns(Sex)

s2_cleaned_data |> 
  summarize_columns(Sex, Condition)
```

#### Education Level

```{r}

s2_cleaned_data |> 
  summarize_columns(Education) 

s2_cleaned_data |> 
  summarize_columns(Education, Condition) 

s2_cleaned_data |> 
  summarize_columns(Education_regrouped) 

s2_cleaned_data |> 
  summarize_columns(Education_regrouped, Condition) 

```

#### AI Chatbot Usage

```{r}

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency) 

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency, Condition) 

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped) 

s2_cleaned_data |>
  summarize_columns(AIChatbotsFrequency_regrouped, Condition)

s2_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed)
  
s2_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed, Condition)

```

#### Science Content Familiarity

```{r}

s2_cleaned_data |> 
  summarize_columns(ScienceContent) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent, Condition) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped, Condition) 

```

#### Expertise

```{r}

s2_cleaned_data |> 
  summarize_columns(intention_to_use_score) 

s2_cleaned_data |> 
  summarize_columns(intention_to_use_score, Condition) 

s2_cleaned_data |> 
  summarize_columns(fear_of_ai_score) 

s2_cleaned_data |> 
  summarize_columns(fear_of_ai_score, Condition) 

s2_cleaned_data |> 
  summarize_columns(professional_content_expertise)

s2_cleaned_data |> 
  summarize_columns(professional_content_expertise, Condition) 

# changed opinion of AI
s2_cleaned_data |> 
  summarize_columns(Experience_4) 

s2_cleaned_data |> 
  summarize_columns(Experience_4, Condition) 


s2_cleaned_data |> 
  summarize_columns(Experience_7) 

s2_cleaned_data |> 
  summarize_columns(Experience_7, Condition) 


```

### Manipulation Check

#### Chat Analysis

```{r}
# process_chatlogs(s2_cleaned_data)
```

```{r}

```

#### Anthropomorphism

##### Plot

```{r}

violin_plot(s2_cleaned_data, 
            s2_study,
            "Condition",
            "anthropomorphism_score",
            include_legend = FALSE)

```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score) 
```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(anthropomorphism_score ~ Condition)
```

#### Likeability

We were not explicitly intending to manipulate likeability

##### Plot

```{r}
violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "likeability_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, likeability_score)
```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(likeability_score ~ Condition)
```

#### Competence

We were not explicitly intending to manipulate competence \##### Plot

```{r}
violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "competence_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, competence_score)
```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(competence_score ~ Condition)
```

### Main Analysis

#### Content Trust

##### Plot

```{r}

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "content_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s2_cleaned_data |> descriptives_by_group(Condition, content_trust_combined_score)

```

##### Inferential Statistics

###### T-tests

```{r}
s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Condition)
```

##### Post-hoc Analysis

###### Anthropomorphism

```{r}

s2_cleaned_data |> linear_model(content_trust_combined_score ~ anthropomorphism_score)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "content_trust_combined_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "content_trust_combined_score")

plot
```

###### Author / Content Trust Interaction

```{r}

s2_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "author_trust_combined_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

```{r}

lm_model <- s2_cleaned_data |> 
  linear_model(content_trust_combined_score ~  author_trust_combined_score * anthropomorphism_score)

# interactions::sim_slopes(lm_model,
#               pred = author_trust_combined_score,
#               modx = anthropomorphism_score)

plot <- s2_cleaned_data |> interaction_plot_3(
  lm_model, 
  pred_name = "author_trust_combined_score",
  mod_name = "anthropomorphism_score", 
  target_name = "content_trust_combined_score", 
  study = s2_study)

plot


```

```{r}

lm_model <- s2_cleaned_data |> 
  linear_model(content_trust_combined_score ~ author_trust_combined_score * anthropomorphism_score * AIChatbotsFrequency_regrouped)

# interactions::sim_slopes(lm_model,
#               pred = author_trust_combined_score,
#               modx = anthropomorphism_score)

plot <- s2_cleaned_data |> interaction_plot_4(
  lm_model, 
  pred_name = "author_trust_combined_score",
  mod_name = "anthropomorphism_score", 
  mod2_name = "AIChatbotsFrequency_regrouped",
  mod2_v = c("frequently", "occasionally", "rarely"),
  target_name = "content_trust_combined_score", 
  study = s2_study)

plot



```

###### Age

```{r}

aov_model <- s2_cleaned_data |>
  group_by(age_range) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(content_trust_combined_score ~ age_range, "content_trust_combined_score")

```

```{r}

s2_cleaned_data |> test_correlation("Age_1", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data,
            s2_study,
            "Age_1",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

###### Gender

```{r}

aov_model <- s2_cleaned_data |>
  droplevels() |>
  run_between_subjects_anova(content_trust_combined_score ~ Gender, "content_trust_combined_score")

s2_cleaned_data |>
  droplevels() |> run_simple_effects_t_tests(content_trust_combined_score ~ Gender)

```

###### Sex

```{r}

aov_model <- s2_cleaned_data |>
  group_by(Sex) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(content_trust_combined_score ~ Sex, "content_trust_combined_score")

```

###### Education

```{r}

aov_model <- s2_cleaned_data |>
  droplevels() |>
  run_between_subjects_anova(content_trust_combined_score ~ Education_regrouped, "content_trust_combined_score")

```

###### AI Usage Experience

```{r}

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ AIChatbotsFrequency_regrouped, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ AIChatbotsFrequency_regrouped)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "AIChatbotsFrequency_regrouped",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  c("rarely", "occasionally"),
    c("rarely", "frequently"),
    c("occasionally", "frequently") ))

plot

```

```{r}
lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * AIChatbotsFrequency_regrouped)


plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "AIChatbotsFrequency_regrouped",
                                target_name = "content_trust_combined_score",
                                study = s2_study
                                )

plot

```

###### Science Content Experience

```{r}

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ ScienceContent_regrouped, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ScienceContent_regrouped)


plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "ScienceContent_regrouped",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  c("rarely", "occasionally"),
    c("rarely", "frequently"),
    c("occasionally", "frequently") ))

plot


```

```{r}

lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * ScienceContent_regrouped)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "ScienceContent_regrouped",
                                target_name = "content_trust_combined_score",
                                study = s2_study
                                )

plot


```

###### Intention to Use AI

```{r}
s2_cleaned_data |> test_correlation("intention_to_use_score", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data,
            s2_study,
            "intention_to_use_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess


```

###### Changed Opinion

```{r}

s2_cleaned_data |> descriptives_by_group(Experience_4, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ Experience_4, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Experience_4)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Experience_4",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(
              c("1", "2"),
              c("2", "3"),
              c("3", "4"),
              c("4", "5"),
              c("1", "3"),
              c("2", "4"),
              c("3", "5"),
              c("1", "4"),
              c("2", "5"),
              c("1", "5")
              )
    )

```

###### Fear of AI

```{r}


s2_cleaned_data |> test_correlation("fear_of_ai_score", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data,
            s2_study,
            "fear_of_ai_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

###### Could Write

```{r}

s2_cleaned_data |> descriptives_by_group(Experience_7, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ Experience_7, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Experience_7)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Experience_7",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(
              c("1", "2"),
              c("2", "3"),
              c("3", "4"),
              c("4", "5"),
              c("1", "3"),
              c("2", "4"),
              c("3", "5"),
              c("1", "4"),
              c("2", "5"),
              c("1", "5")
              )
    )

```

###### Professional Content / Writing Expertise

```{r}

s2_cleaned_data |> test_correlation("professional_content_expertise", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data,
            s2_study,
            "professional_content_expertise",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

###### Content Properties

Well-written

```{r}
s2_cleaned_data |> descriptives_by_group(Appelman_4, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ Appelman_4, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Appelman_4)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Appelman_4",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(
              c("-2", "-1"),
              c("-1", "0"),
              c("0", "1"),
              c("1", "2"),
              c("-2", "0"),
              c("-1", "1"),
              c("0", "2"),
              c("-2", "1"),
              c("-1", "2"),
              c("-2", "2")
              )
    )
```

```{r}

lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Appelman_4)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "Appelman_4",
                                target_name = "content_trust_combined_score",
                                study = s2_study
                                )

plot

```

Boring

```{r}
s2_cleaned_data |> descriptives_by_group(Appelman_5, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ Appelman_5, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Appelman_5)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Appelman_5",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(
              c("-2", "-1"),
              c("-1", "0"),
              c("0", "1"),
              c("1", "2"),
              c("-2", "0"),
              c("-1", "1"),
              c("0", "2"),
              c("-2", "1"),
              c("-1", "2"),
              c("-2", "2")
              )
    )
```

```{r}

lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Appelman_5)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "Appelman_5",
                                target_name = "content_trust_combined_score",
                                study = s2_study
                                )

plot

```

Engaging

```{r}
s2_cleaned_data |> descriptives_by_group(Appelman_6, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ Appelman_6, "content_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Appelman_6)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Appelman_6",
            "content_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(
              c("-2", "-1"),
              c("-1", "0"),
              c("0", "1"),
              c("1", "2"),
              c("-2", "0"),
              c("-1", "1"),
              c("0", "2"),
              c("-2", "1"),
              c("-1", "2"),
              c("-2", "2")
              )
    )
```

```{r}

lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Appelman_6)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "Appelman_6",
                                target_name = "content_trust_combined_score",
                                study = s2_study
                                )

plot

```

###### Survey Purpose Check

```{r}
s2_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ SurveyTopicCheck_coded, "content_trust_combined_score")

```

###### Unrealistic Check

```{r}
s2_cleaned_data |> descriptives_by_group(Unrealistic, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(content_trust_combined_score ~ Unrealistic, "content_trust_combined_score")

```

```{r}
s2_cleaned_data |> descriptives_by_group(Unrealistic_coded, content_trust_combined_score)

aov_model <- s2_cleaned_data |>
   group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |>
  run_between_subjects_anova(content_trust_combined_score ~ Unrealistic_coded, "content_trust_combined_score")

s2_cleaned_data |>
  droplevels() |>
  run_simple_effects_t_tests(content_trust_combined_score ~ Unrealistic_coded)


```

#### Author Trust

##### Plot

```{r}
plot <- violin_plot(s2_cleaned_data, 
            s2_study,
            "Condition",
            "author_trust_combined_score",
            include_legend = FALSE)

plot

```

##### Descriptive Statistics

```{r}

s2_cleaned_data |> descriptives_by_group(Condition, author_trust_combined_score)

```

##### Inferential Statistics

```{r}

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Condition)

```

##### Post-hoc Analysis

###### Anthropomorphism

```{r}

s2_cleaned_data |> linear_model(author_trust_combined_score ~ anthropomorphism_score)

```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "author_trust_combined_score")

plot <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "anthropomorphism_score",
            "author_trust_combined_score")

plot

```

###### Path Analysis

```{r}
model_design <- '
  # Mediation paths
  anthropomorphism_score ~ a1 * Condition
  author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition 
  content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + c_prime * Condition

  # Indirect effects
  indirect1 := a1 * b2
  indirect2 := a1 * a2 * b1
  indirect3 := d * b1

  # Total effect
  total := c_prime + indirect1 + indirect2 + indirect3
'
s2_fit_basic <- s2_cleaned_data |> test_med_mod_model(model_design)
```

```{r}
plot <- plot_model(s2_fit_basic, s2_study)

plot
```

```{r}
model_design <- '

  # Define the latent variable
  author_trust_behaviour =~ z.TrustBehaviour_7 + z.TrustBehaviour_8 + z.TrustBehaviour_10 + z.TrustBehaviour_11
  
  expertise =~ z.GodspeedMETI_10 + z.GodspeedMETI_13 + z.GodspeedMETI_15r + z.GodspeedMETI_16r + z.GodspeedMETI_17r + z.GodspeedMETI_18r
  integreity =~ z.GodspeedMETI_19r + z.GodspeedMETI_20r + z.GodspeedMETI_21r + z.GodspeedMETI_22r
  benevolence =~ z.GodspeedMETI_23r + z.GodspeedMETI_24r + z.GodspeedMETI_25r + z.GodspeedMETI_26r
  author_trust_traits =~ expertise + integreity + benevolence 
  
  perceived_author_trust =~ author_trust_behaviour + author_trust_traits
  
  # Mediation paths
  anthropomorphism_score ~ a1 * Condition
  perceived_author_trust ~ a2 * anthropomorphism_score + d * Condition 
  content_trust_combined_score ~ b1 * perceived_author_trust + b2 * anthropomorphism_score + c_prime * Condition

  # Indirect effects
  indirect1 := a1 * b2
  indirect2 := a1 * a2 * b1
  indirect3 := d * b1

  # Total effect
  total := c_prime + indirect1 + indirect2 + indirect3
'
s2_fit_basic <- s2_cleaned_data |> test_med_mod_model(model_design)
```

```{r}
summary_table <- get_sem_summary_table(s2_fit_basic, save_doc = TRUE, outfile = "plots/s2/sem_summary_table.docx")
knitr::kable(summary_table)
```

```{r}
plot <- plot_model(s2_fit_basic, s2_study)

plot
```

```{r}
model_design <- '
  # Mediation paths
  anthropomorphism_score ~ a1 * Condition
  likeability_score ~ a3 * anthropomorphism_score + e * Condition
  author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition + b3 * likeability_score
  content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + c_prime * Condition

  # Indirect effects
  indirect1 := a1 * b2
  indirect2 := a1 * a2 * b1
  indirect3 := d * b1
  indirect4 := e * b3 * b1
  indirect5 := a1 * a3 * b3 * b1

  # Total effect
  total := c_prime + indirect1 + indirect2 + indirect3 + indirect4 + indirect5
'
s2_fit_with_likeability <- s2_cleaned_data |> test_med_mod_model(model_design)
```

```{r}
plot <- plot_model(s2_fit_with_likeability, s2_study)

plot
```

```{r}
model_design <- '
  # Mediation paths
  anthropomorphism_score ~ a1 * Condition
  likeability_score ~ a3 * anthropomorphism_score + e * Condition
  competence_score ~ f * Condition + b4 * likeability_score + b5 * anthropomorphism_score
  author_trust_combined_score ~ a2 * anthropomorphism_score + d * Condition + b3 * likeability_score + b6 * competence_score
  content_trust_combined_score ~ b1 * author_trust_combined_score + b2 * anthropomorphism_score + b7 * competence_score + b8 * likeability_score + c_prime * Condition

  # Indirect effects
  indirect1 := a1 * b2
  indirect2 := a1 * a2 * b1
  indirect3 := d * b1
  indirect4 := e * b3 * b1
  indirect5 := a1 * a3 * b3 * b1
  indirect6 := f * b7
  indirect7 := f * b6 * b1
  indirect8 := e * b8

  # Total effect
  total := c_prime + indirect1 + indirect2 + indirect3 + indirect4 + indirect5 + indirect6 + indirect7 + indirect8
'
s2_fit_with_likeability_and_competence <- s2_cleaned_data |> test_med_mod_model(model_design)
```

```{r}
plot <- plot_model(s2_fit_with_likeability_and_competence, s2_study)

plot
```

```{r}
# library(lavaan)
# 
# model <- '
#   # Mutual paths
#   anthropomorphism_score ~ author_trust_combined_score
#   author_trust_combined_score ~ anthropomorphism_score
# '
# 
# fit <- sem(model, data = s2_cleaned_data)
# summary(fit, standardized = TRUE)
```

```{r}
# # Mediation model
# library(mediation)
# 
# # Mediator model
# med_model <- lm(author_trust_combined_score ~ Condition, data = s2_cleaned_data)
# 
# # Outcome model
# outcome_model <- lm(content_trust_combined_score ~ Condition + author_trust_combined_score, data = s2_cleaned_data)
# 
# # Mediation analysis
# mediation_result <- mediate(med_model, outcome_model,
#                             treat = "Condition",
#                             mediator = "author_trust_combined_score",
#                             boot = TRUE, sims = 5000)
# 
# summary(mediation_result)
```

```{r}
# library(lavaan)
# 
# s2_cleaned_data$interaction_term <- s2_cleaned_data$author_trust_combined_score * s2_cleaned_data$anthropomorphism_score
# 
# 
# modmed_model <- '
#   # First stage: Condition → Author Trust
#   author_trust_combined_score ~ a1*Condition
# 
#   # Second stage: Content Trust ~ Author Trust + Moderator + Interaction
#   content_trust_combined_score ~ b1*author_trust_combined_score + b2*anthropomorphism_score + b3*interaction_term
# 
#   # Indirect effect (not moderated)
#   indirect := a1 * b1
# 
#   # Conditional indirect effect when moderator is low (-1 SD) and high (+1 SD)
#   ind_low := a1 * (b1 + b3 * -1)
#   ind_high := a1 * (b1 + b3 * 1)
# '
# 
# fit <- sem(modmed_model, data = s2_cleaned_data, se = "bootstrap", bootstrap = 5000)
# summary(fit, standardized = TRUE)

```

```{r}
# library(semPlot)
# 
# # # After fitting a lavaan model:
# # semPaths(fit, 
# #          what = "std",             # show standardized coefficients
# #          layout = "circle",        # or "tree", "spring", "circle2"
# #          edge.label.cex = 1.2,     # size of path labels
# #          nCharNodes = 0,           # don't shorten node names
# #          sizeMan = 8,              # node size
# #          residuals = FALSE,        # hide residual variances
# #          title = FALSE)
# 
# semPaths(
#   object = fit,              # your lavaan model object
#   what = "std",              # show standardized coefficients
#   layout = "tree",           # "tree", "circle", "spring", etc.
#   edge.label.cex = 1.2,      # size of edge (path) labels
#   sizeMan = 8,               # size of variable boxes
#   sizeLat = 0,               # hide latent variable nodes (you have none)
#   residuals = FALSE,         # don't show residual variances
#   nCharNodes = 0,            # show full variable names
#   title = FALSE
# )

```

```{r}
# 
# lm_model <- lm(author_trust_combined_score ~ anthropomorphism_score * content_trust_combined_score, data = s2_cleaned_data)
# summary(lm_model)
# 
# plot <- interact_plot(lm_model, 
#               pred = anthropomorphism_score, 
#               modx = content_trust_combined_score,  
#               x.label ="Anthropomorphism Score",
#               y.label = "Author Trust Score",
#               legend.main = "Content Trust Score",
#               plot.points = TRUE, jitter = 0.5, point.alpha = 0.25, geom="bar", 
#               colors = safe_pal) +
#   theme(legend.position = "right")
# 
# ggsave("plots/s2/author_anthropomorphism_content_interaction.png", plot = plot, create.dir = TRUE)
# 
# plot

```

```{r}
# 
# lm_model <- lm(author_trust_combined_score ~ anthropomorphism_score * content_trust_combined_score * AIChatbotsFrequency_regrouped, data = s2_cleaned_data)
# summary(lm_model)
# 
# plot <- interact_plot(lm_model, 
#               pred = anthropomorphism_score, 
#               modx = content_trust_combined_score,
#               mod2 = AIChatbotsFrequency_regrouped,
#               x.label ="Anthropomorphism Score",
#               y.label = "Author Trust Score",
#               legend.main = "Content Trust Score",
#               mod2.values = c("frequently", "occasionally", "rarely"),
#               mod2.labels = c("frequently", "occasionally", "rarely"),
#               plot.points = TRUE, jitter = 0.5, point.alpha = 0.25, geom="bar", 
#               colors = safe_pal) +
#   theme(legend.position = "right")
# 
# ggsave("plots/s2/author_anthropomorphism_content_frequency_interaction.png", plot = plot, create.dir = TRUE)
# 
# plot

```

```{r}
# 
# lm_model <- lm(author_trust_combined_score ~ anthropomorphism_score * AIChatbotsFrequency_regrouped, data = s2_cleaned_data)
# summary(lm_model)
# 
# plot <- interact_plot(lm_model, 
#               pred = anthropomorphism_score, 
#               modx = AIChatbotsFrequency_regrouped,
#               x.label ="Anthropomorphism Score",
#               y.label = "Author Trust Score",
#               legend.main = "Frequency",
#               # mod2.values = c("frequently", "occasionally", "rarely"),
#               # mod2.labels = c("frequently", "occasionally", "rarely"),
#               plot.points = TRUE, jitter = 0.5, point.alpha = 0.25, geom="bar", 
#               colors = safe_pal) +
#   theme(legend.position = "right")
# 
# ggsave("plots/s2/author_anthropomorphism_frequency_interaction.png", plot = plot, create.dir = TRUE)
# 
# plot

```

###### Age

```{r}

s2_cleaned_data |> descriptives_by_group(age_range, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(age_range) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ age_range, "author_trust_combined_score")

```

```{r}

s2_cleaned_data |> test_correlation("Age_1", "author_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "Age_1",
            "author_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

###### Gender (Man / Woman only)

```{r}
s2_cleaned_data |> descriptives_by_group(Gender, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(Gender) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ Gender, "author_trust_combined_score")


```

###### Sex (Male / Female only)

```{r}

s2_cleaned_data |> descriptives_by_group(Sex, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(Sex) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ Sex, "author_trust_combined_score")
```

###### Education

```{r}

s2_cleaned_data |> descriptives_by_group(Education, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(Education) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ Education, "author_trust_combined_score")



```

###### AI Usage Experience

```{r}

s2_cleaned_data |> descriptives_by_group(AIChatbotsFrequency_regrouped, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(AIChatbotsFrequency_regrouped) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ AIChatbotsFrequency_regrouped, "author_trust_combined_score")


```

###### Science Content Experience

```{r}

s2_cleaned_data |> descriptives_by_group(ScienceContent, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(ScienceContent) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ ScienceContent, "author_trust_combined_score")


s2_cleaned_data |> descriptives_by_group(ScienceContent_regrouped, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  group_by(ScienceContent_regrouped) |> filter(n() > 3) |> ungroup() |>
  droplevels() |>
  run_between_subjects_anova(author_trust_combined_score ~ ScienceContent_regrouped, "author_trust_combined_score")


```

###### Intention to Use AI

```{r}

s2_cleaned_data |> test_correlation("intention_to_use_score", "author_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "intention_to_use_score",
            "author_trust_combined_score")

# Display the plots
plots$lm
plots$loess



```

###### Changed Opinion

```{r}
s2_cleaned_data |> descriptives_by_group(Experience_4, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ Experience_4, "author_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Experience_4)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Experience_4",
            "author_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  
              c("1", "2"),
              c("2", "3"),
              c("3", "4"),
              c("4", "5"),
              c("1", "3"),
              c("2", "4"),
              c("3", "5"),
              c("1", "4"),
              c("2", "5"),
              c("1", "5")
              )
    )
```

###### Fear of AI

```{r}

s2_cleaned_data |> test_correlation("fear_of_ai_score", "author_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "fear_of_ai_score",
            "author_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

###### Could Write

```{r}
s2_cleaned_data |> descriptives_by_group(Experience_7, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ Experience_7, "author_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Experience_7)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Experience_7",
            "author_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  
              c("1", "2"),
              c("2", "3"),
              c("3", "4"),
              c("4", "5"),
              c("1", "3"),
              c("2", "4"),
              c("3", "5"),
              c("1", "4"),
              c("2", "5"),
              c("1", "5")
              )
    )
```

###### Professional Content / Writing Expertise

```{r}

s2_cleaned_data |> test_correlation("professional_content_expertise", "author_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "professional_content_expertise",
            "author_trust_combined_score")

# Display the plots
plots$lm
plots$loess

```

###### Content Properties

####### Well-written

```{r}
s2_cleaned_data |> descriptives_by_group(Appelman_4, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ Appelman_4, "author_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Appelman_4)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Appelman_4",
            "author_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  
              c("-2", "-1"),
              c("-1", "0"),
              c("0", "1"),
              c("1", "2"),
              c("-2", "0"),
              c("-1", "1"),
              c("0", "2"),
              c("-2", "1"),
              c("-1", "2"),
              c("-2", "2")
              )
    )

lm_model <- s2_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Appelman_4)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "Appelman_4",
                                target_name = "author_trust_combined_score",
                                study = s2_study
                                )

plot

```

####### Boring

```{r}
s2_cleaned_data |> descriptives_by_group(Appelman_5, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ Appelman_5, "author_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Appelman_5)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Appelman_5",
            "author_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  
              c("-2", "-1"),
              c("-1", "0"),
              c("0", "1"),
              c("1", "2"),
              c("-2", "0"),
              c("-1", "1"),
              c("0", "2"),
              c("-2", "1"),
              c("-1", "2"),
              c("-2", "2")
              )
    )


lm_model <- s2_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Appelman_5)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "Appelman_5",
                                target_name = "author_trust_combined_score",
                                study = s2_study
                                )

plot

```

####### Engaging

```{r}
s2_cleaned_data |> descriptives_by_group(Appelman_6, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ Appelman_6, "author_trust_combined_score")

s2_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Appelman_6)

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Appelman_6",
            "author_trust_combined_score",
            include_legend = FALSE,
            comparisons = list(  
              c("-2", "-1"),
              c("-1", "0"),
              c("0", "1"),
              c("1", "2"),
              c("-2", "0"),
              c("-1", "1"),
              c("0", "2"),
              c("-2", "1"),
              c("-1", "2"),
              c("-2", "2")
              )
    )
lm_model <- s2_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Appelman_6)

plot <- s2_cleaned_data |>
  categorical_interaction_plot_3(lm_model,
                                pred_name = "Condition",
                                mod_name = "Appelman_6",
                                target_name = "author_trust_combined_score",
                                study = s2_study
                                )

plot
```

###### Survey Purpose Check

```{r}
s2_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ SurveyTopicCheck_coded, "author_trust_combined_score")

```

###### Unrealistic Check

```{r}
s2_cleaned_data |> descriptives_by_group(Unrealistic, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
  run_between_subjects_anova(author_trust_combined_score ~ Unrealistic, "author_trust_combined_score")

s2_cleaned_data |> descriptives_by_group(Unrealistic_coded, author_trust_combined_score) 

aov_model <- s2_cleaned_data |>
   group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |>
  run_between_subjects_anova(author_trust_combined_score ~ Unrealistic_coded, "author_trust_combined_score")

s2_cleaned_data |>
  droplevels() |>
  run_simple_effects_t_tests(author_trust_combined_score ~ Unrealistic_coded)

```

#### Correlations

```{r}
correlation_data <- s2_cleaned_data |> select(author_trust_combined_score,
                                           content_trust_combined_score,
                                           likeability_score, 
                                           competence_score, 
                                           expertise_score, 
                                           integrity_score, 
                                           benevolence_score, 
                                           anthropomorphism_score, 
                                           content_trust_appelman_score,
                                           content_trust_behaviour_score,
                                           author_trust_METI_score,
                                           author_trust_behaviour_score)

corr_matrix = cor(correlation_data)

corr_matrix_p <- psych::corr.test(correlation_data)

kable(head(corr_matrix))
corrplot::corrplot(corr_matrix, type="upper", method = "circle", order = "hclust", 
         addCoef.col = "white", # Add coefficient of correlation
         tl.col="black", tl.srt=45, #Text label color and rotation
         p.mat = corr_matrix_p$p, sig.level = 0.01, insig = "blank", 
         diag = FALSE)

```

##### Correlations at High Condition

```{r}
correlation_data_high <- s2_cleaned_data |> 
  filter(Condition == "High") |> 
  select(author_trust_combined_score, content_trust_combined_score, likeability_score, competence_score, expertise_score, integrity_score, benevolence_score)


corr_matrix_high = cor(correlation_data_high)
corr_matrix_p_high <- psych::corr.test(correlation_data_high)

kable(head(corr_matrix_high))
corrplot::corrplot(corr_matrix_high, type="upper", method = "circle", order = "hclust", 
         addCoef.col = "white", # Add coefficient of correlation
         tl.col="black", tl.srt=45, #Text label color and rotation
         p.mat = corr_matrix_p_high$p, sig.level = 0.01, insig = "blank", 
         diag = FALSE)
```

##### Correlations at Low Condition

```{r}
correlation_data_low <- s2_cleaned_data |> 
  filter(Condition == "Low") |> 
  select(author_trust_combined_score, content_trust_combined_score, likeability_score, competence_score, expertise_score, integrity_score, benevolence_score)


corr_matrix_low = cor(correlation_data_low)
corr_matrix_p_low <- psych::corr.test(correlation_data_low)


kable(head(corr_matrix_low))
corrplot::corrplot(corr_matrix_low, type="upper", method = "circle", order = "hclust", 
         addCoef.col = "white", # Add coefficient of correlation
         tl.col="black", tl.srt=45, #Text label color and rotation
         p.mat = corr_matrix_p_low$p, sig.level = 0.01, insig = "blank", 
         diag = FALSE)
```

```{r}

cocor::cocor(~ `content_trust_combined_score` + `expertise_score` | `content_trust_combined_score` + `expertise_score`, 
      data = list(
        as.data.frame(s2_cleaned_data |> filter(Condition == "High")), 
        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))
      )
)

```

```{r}
cocor::cocor(~ `content_trust_combined_score` + `competence_score` | `content_trust_combined_score` + `competence_score`, 
      data = list(
        as.data.frame(s2_cleaned_data |> filter(Condition == "High")), 
        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))
      )
)

```

```{r}
cocor::cocor(~ `content_trust_combined_score` + `likeability_score` | `content_trust_combined_score` + `likeability_score`, 
      data = list(
        as.data.frame(s2_cleaned_data |> filter(Condition == "High")), 
        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))
      )
)
```

```{r}
cocor::cocor(~ `content_trust_combined_score` + `benevolence_score` | `content_trust_combined_score` + `benevolence_score`, 
      data = list(
        as.data.frame(s2_cleaned_data |> filter(Condition == "High")), 
        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))
      )
)
```

```{r}
cocor::cocor(~ `content_trust_combined_score` + `integrity_score` | `content_trust_combined_score` + `integrity_score`, 
      data = list(
        as.data.frame(s2_cleaned_data |> filter(Condition == "High")), 
        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))
      )
)
```

```{r}
cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`, 
      data = list(
        as.data.frame(s2_cleaned_data |> filter(Condition == "High")), 
        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))
      )
)
```

# References

```{r}
citation()
version$version.string

citation("rstatix")
packageVersion("rstatix")

citation("stats")
packageVersion("stats")

citation("effectsize")
packageVersion("effectsize")

citation("psych")
packageVersion("psych")

citation("interactions")
packageVersion("interactions")

citation("corrplot")
packageVersion("corrplot")

citation("performance")
packageVersion("performance")

citation("FSA")
packageVersion("FSA")

citation("see")
packageVersion("see")
```
