---
title: "Analysis"
author: "Caroline Simpson"
format: 
  html:
    theme: cerulean
    df-print: kable
    code-fold: false
    toc: true
    toc-float:
      collapsed: true
      smooth-scroll: false
    toc-depth: 7

editor: visual
---

```{r include=FALSE}
#| label: setup

library(knitr)
library(kableExtra)

# library(rstatix)
# library(tidyverse)
# library(forcats)
# 
# library(haven)
# library(jtools)
# library(forcats)
# library(FactoMineR)
# library(psych)
# library(interactions)
# library(corrplot)
# library(rcartocolor)
# library(ggpubr)
# library(apaTables)
# library(FSA)
# 
# library(performance)
# library(see)


source("./scripts/data-loading.R", local = TRUE)
source("./scripts/data-cleaning.R", local = TRUE)
source("./scripts/analysis-data-properties.R", local = TRUE)
source("./scripts/analysis-descriptives.R", local = TRUE)
source("./scripts/analysis-reliability.R", local = TRUE)
source("./scripts/analysis-inferential.R", local = TRUE)
source("./scripts/analysis-correlation.R", local = TRUE)
source("./scripts/analysis-regression.R", local = TRUE)
source("./scripts/analysis-moderation-mediation.R", local = TRUE)
source("./scripts/analysis-chat-logs.R", local = TRUE)
source("./scripts/plotting.R", local = TRUE)
source("./scripts/common.R", local = TRUE)

directory_setup()
theme_set(my_theme)

s2_study <- "s2"

```

# Trusting the machine: Epistemic trust and anthropomorphism in generative artificial intelligence

**Research Question**: What effect does anthropomorphism have on level of trust in generative AI and the content it creates?

My **hypothesis** is that there will be an increase in epistemic trust with increasing levels of anthropomorphism.

## Data Analysis

### Load data

```{r}
#| label: load-data

s2_raw_data <- load_data(s2_study)
s2_raw_data <- factorize_data(s2_study, s2_raw_data)


```

Number of participants in raw data = `r nrow(s2_raw_data)`.

```{r}
#| label: explode-chatbots-used

s2_raw_data <- explode_chatbots_used(s2_raw_data)

```

### Exclude non-consent

```{r}

s2_raw_data <- exclude_non_consenting_participants(s2_raw_data)

```

### Manual Processing

Reviewed and coded Survey purpose check (what they think this study is about, not the attention check)

-   Manually coded the response values with the following key:

    -   0 = no answer provided

    -   1 = identified the survey was about AI content, perception of AI, human versus AI distinction

    -   2 = nonsensical text

    -   3 = values that describe a purpose (not about AI)

    -   4 = random word

    -   5 = unsure

    -   6 = "the study was interesting" or "good" and variations of this

    -   7 = None

    -   8 = paying attention

```{r}
#| label: participant-survey-topic-check

s2_raw_data |> 
  summarize_columns(SurveyTopicCheck_coded) 
```

Reviewed and coded Unrealistic parts of survey.

-   Unrealistic field is a separate field with the values of:

    -   1 = No

    -   2 = Yes

-   Unrealistic_coded -\> Manually coded the response values from Unrealistic_2_TEXT field with the following key:

    -   0 = no answer provided

    -   1 = didn't believe content written by the AI

    -   2 = don't believe that traits make sense to apply to AI

    -   3 = it all seemed realistic

    -   4 = description of AI was not believable

    -   5 = random text

    -   6 = unsure why they were asked questions about AI (in High condition)

    -   7 = Identified didn't follow instructions

    -   8 = Confusion with sliders

    -   9 = The chat (Chatbot was too fast, Chatbot wouldn't talk about other topics, Question why they would talk to an author)

    -   10 = Didn't understand the blog post

    -   11 = other (subconscious bias introduced)

    -   12 = predisposed to distrust information in experiments

    -   13 =

    -   14 = Quality or content of the article (no citations, etc)

```{r}

s2_raw_data |> 
  summarize_columns(Unrealistic) 

s2_raw_data |> 
  summarize_columns(Unrealistic, Unrealistic_coded) 
```

### Clean Data

#### Validate no duplicate participants

```{r}
duplicates <- s2_raw_data |> count_duplicate_participants()

```

There are `r if (duplicates == 0) "no duplicate participants" else paste (duplicates, "duplicates")`

```{r clean_remove_duplicates}
s2_deduped_data <- s2_raw_data |> deduplicate_participants()
duplicates <- s2_deduped_data |> count_duplicate_participants()
```

There are `r if (duplicates == 0) "no duplicate participants" else paste (duplicates, "duplicates")`after removing duplicates.

```{r}
recruited_participants <- s2_deduped_data |> count_recruited_participants(s2_study)

```

Number of participants recruited = `r recruited_participants`.

```{r}
s2_cleaned_data <- s2_deduped_data |> clean_data(s2_study)
```

Number of participants after exclusions = `r nrow(s2_cleaned_data)`.

### Fill missing values

#### Assess skewness and distribution

```{r}
s2_cleaned_data |> check_skewness(s2_study)

s2_cleaned_data |>
  dplyr::select(-Progress, -ConsentForm, -`Duration (in seconds)`, -Status, -Finished, -TopicCheck, -GodspeedMETI_28, -GodspeedMETI_29, -AIChatbotsUsed_NA) |> 
  check_normality(s2_study)

```

#### Fill missing values with median values

Populate missing values with the median within Condition.

```{r}

missing_values_within_conditions(s2_cleaned_data)

# Perform imputation only on selected variables
s2_imputed_data <- impute_data(s2_cleaned_data)

missing_values_within_conditions(s2_imputed_data)

```

### Reverse Coding

Reverse code items for each scale where appropriate

```{r}

s2_recoded_data <- s2_imputed_data |> recode_data(s2_study)

```

#### Standardize Scale Item Values

```{r}


s2_cleaned_data <- s2_recoded_data |> standardize_data()


```

#### Regroup data

Regroup the AIChatbotsFrequency, Education, and Age columns into smaller number of categories of data for analysis. Some of the more granular categories don't have a large enough sample for meaningful comparisons.

```{r}

s2_cleaned_data <- s2_cleaned_data |> regroup_data()                                  
```

#### Define Score Components

```{r}
s2_cleaned_data <- s2_cleaned_data |> compute_scores(s2_study)

s2_cleaned_data <- s2_cleaned_data |> bin_scores(s2_study)
```

```{r}
s2_cleaned_data <- s2_cleaned_data |> cast_variables(s2_study)
```

### Scale Inter-item Reliability Analysis

#### Anthropomorphism (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$anthropomorphism_score)

s2_cleaned_data |> cronbachs_alpha(get_anthropomorphism_score_godspeed_cols())

```

#### Likeability (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$likeability_score)

s2_cleaned_data |> cronbachs_alpha(get_likeability_score_godspeed_cols())

```

#### Competence (Godspeed Subscale)

```{r}

basic_descriptives(s2_cleaned_data$competence_score)

s2_cleaned_data |> cronbachs_alpha(get_competence_score_godspeed_cols())

```

#### Expertise (METI Subscale)

```{r}

basic_descriptives(s2_cleaned_data$expertise_score)

s2_cleaned_data |> cronbachs_alpha(get_expertise_score_METI_cols())

```

#### Integrity (METI Subscale)

```{r}

basic_descriptives(s2_cleaned_data$integrity_score)

s2_cleaned_data |> cronbachs_alpha(get_integrity_score_METI_cols())


```

#### Benevolence (METI Subscale)

```{r}
basic_descriptives(s2_cleaned_data$benevolence_score)

s2_cleaned_data |> cronbachs_alpha(get_benevolence_score_METI_cols())

```

#### METI (Author Trust)

```{r}

basic_descriptives(s2_cleaned_data$author_trust_METI_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_METI_cols())

```

#### Trust Behaviour (Author Trust)

```{r}
basic_descriptives(s2_cleaned_data$author_trust_behaviour_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_behaviour_cols(s2_study))

```

#### Combine Author Trust

```{r}

basic_descriptives(s2_cleaned_data$author_trust_combined_score)

s2_cleaned_data |> cronbachs_alpha(get_author_trust_score_combined_cols(s2_study))


```

#### Appelman (Content Trust)

```{r}
basic_descriptives(s2_cleaned_data$content_trust_appelman_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_appelman_cols())

```

#### Trust Behaviour (Content Trust)

```{r}
basic_descriptives(s2_cleaned_data$content_trust_behaviour_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_behaviour_cols())

```

#### Combined Content Trust

```{r}

basic_descriptives(s2_cleaned_data$content_trust_combined_score)

s2_cleaned_data |> cronbachs_alpha(get_content_trust_score_combined_cols())

```

#### Expertise / Intentions

```{r}
basic_descriptives(s2_cleaned_data$intention_to_use_score)
s2_cleaned_data |> cronbachs_alpha(get_intention_cols())


basic_descriptives(s2_cleaned_data$fear_of_ai_score)
s2_cleaned_data |> cronbachs_alpha(get_fear_cols())


basic_descriptives(s2_cleaned_data$writing_expertise)
s2_cleaned_data |> cronbachs_alpha(get_writing_experience_cols())


basic_descriptives(s2_cleaned_data$science_expertise)
s2_cleaned_data |> cronbachs_alpha(get_science_experience_cols())


basic_descriptives(s2_cleaned_data$writing_quality_score)
s2_cleaned_data |> cronbachs_alpha(get_writing_quality_cols())
```

### Sample Characteristics

```         
N=`r length(unique(s2_cleaned_data$ResponseId))`
```

#### Study duration (in minutes)

```{r}
basic_descriptives(s2_cleaned_data$`Duration (in seconds)` / 60)
```

#### Participants reporting Technical Issues (Not removed in data cleaning)

```{r}
s2_cleaned_data |> 
  summarize_columns(TechnicalIssues) 

s2_cleaned_data |> 
  summarize_columns(TechnicalIssues, Condition) 


```

```{r}
s2_cleaned_data |> 
  summarize_columns(Unrealistic) 

s2_cleaned_data |> 
  summarize_columns(Unrealistic, Condition)

s2_cleaned_data |> 
  summarize_columns(Unrealistic_coded) 

s2_cleaned_data |> 
  summarize_columns(Unrealistic_coded, Condition) 
```

#### Participants per condition.

```{r}
s2_cleaned_data |> 
  summarize_columns(Condition)

```

#### Age

Age range: `r round(min(s2_cleaned_data$Age_1, na.rm = TRUE), 2)` to `r round(max(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
Mean age: `r round(mean(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`
Standard deviation: `r round(sd(s2_cleaned_data$Age_1, na.rm = TRUE), 2)`

```{r}
s2_cleaned_data |> 
  summarize_columns(age_range)

s2_cleaned_data |> 
  summarize_columns(age_range, Condition) 
```

#### Gender

```{r}

s2_cleaned_data |> 
  summarize_columns(Gender) 

s2_cleaned_data |> 
  summarize_columns(Gender, Condition) 

```

#### Sex

```{r}

s2_cleaned_data |> 
  summarize_columns(Sex)

s2_cleaned_data |> 
  summarize_columns(Sex, Condition)
```

#### Education Level

```{r}

s2_cleaned_data |> 
  summarize_columns(Education) 

s2_cleaned_data |> 
  summarize_columns(Education, Condition) 

s2_cleaned_data |> 
  summarize_columns(Education_regrouped) 

s2_cleaned_data |> 
  summarize_columns(Education_regrouped, Condition) 

```

#### AI Chatbot Usage

```{r}

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency) 

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency, Condition) 

s2_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped) 

s2_cleaned_data |>
  summarize_columns(AIChatbotsFrequency_regrouped, Condition)

s2_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed)
  
s2_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed, Condition)

```

#### Science Content Familiarity

```{r}

s2_cleaned_data |> 
  summarize_columns(ScienceContent) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent, Condition) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped) 

s2_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped, Condition) 

```

### Manipulation Check

#### Chat Analysis

```{r}
# process_chatlogs(s2_cleaned_data)
```

```{r}

```

#### Anthropomorphism

##### Plot

```{r}

violin_plot(s2_cleaned_data, 
            s2_study,
            "Condition",
            "anthropomorphism_score",
            include_legend = FALSE)

```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score) 
```

##### Inferential Statistics

###### T-tests

```{r}
# s2_cleaned_data |> run_simple_effects_t_tests(anthropomorphism_score ~ Condition)

result <- s2_cleaned_data |> run_inferential(anthropomorphism_score ~ Condition)

result$model
result$effect_size
```

##### Correlations

```{r}

# s2_cleaned_data$Engaging <- as.numeric(s2_cleaned_data$Engaging)
# s2_cleaned_data |> test_correlation("anthropomorphism_score", "Engaging")
# 
# plot <- correlation_plot(s2_cleaned_data,
#             s2_study,
#             "Engaging",
#             "anthropomorphism_score"
#             )
#  
# plot
```

#### Likeability

We were not explicitly intending to manipulate likeability

##### Plot

```{r}
violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "likeability_score",
            include_legend = FALSE)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "likeability_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "likeability_score")

plot
```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, likeability_score)
```

##### Inferential Statistics

###### T-tests

```{r}
# s2_cleaned_data |> run_simple_effects_t_tests(likeability_score ~ Condition)

result <- s2_cleaned_data |> run_inferential(likeability_score ~ Condition)

result$model
result$effect_size
```

#### Competence

We were not explicitly intending to manipulate competence \##### Plot

```{r}
violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "competence_score",
            include_legend = FALSE)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "competence_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "competence_score")

plot
```

```{r}


s2_cleaned_data |> test_correlation("competence_score", "likeability_score")

plot <- correlation_plot(s2_cleaned_data,
            s2_study,
            "competence_score",
            "likeability_score")

plot
```

##### Descriptive Statistics

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, competence_score)
```

##### Inferential Statistics

###### T-tests

```{r}
# s2_cleaned_data |> run_simple_effects_t_tests(competence_score ~ Condition)

result <- s2_cleaned_data |> run_inferential(competence_score ~ Condition)

result$model
result$effect_size
```

### Main Analysis

#### Content Trust

##### Plot

```{r}

plot <- violin_plot(s2_cleaned_data,
            s2_study,
            "Condition",
            "content_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s2_cleaned_data |> descriptives_by_group(Condition, content_trust_combined_score)

```

##### Inferential Statistics

###### T-tests

```{r}
result <- s2_cleaned_data |> run_inferential(content_trust_combined_score ~ Condition)

result$model
result$effect_size
```

##### Post-hoc Analysis

###### Sample Characteristics

```{r}

result <- s2_cleaned_data |> test_correlation(Age_1, content_trust_combined_score)




formulas <- c(content_trust_combined_score ~ Gender, 
              content_trust_combined_score ~ Sex, 
              content_trust_combined_score ~ Education #,
              # content_trust_combined_score ~ Education_regrouped
              )


for (i_formula in formulas){
  result <- s2_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

if (!is.null(result) && result$test == "ANOVA"){
  result$apa_output
  result$omega_squared
} else if (!is.null(result) && result$test == "t-test"){
  result$model
  result$effect_size
}
}



```

###### Sample Attitudes / Experience

```{r}
# Check for correlations between trust and variables
result <- s2_cleaned_data |> test_correlation(changed_opinion_of_ai_score, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(fear_of_ai_score, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(intention_to_use_score, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(writing_expertise, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(science_expertise, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(writing_quality_score, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(changed_opinion_of_ai_score, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(AIChatbotsFrequency, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(AIChatbotsFrequency_regrouped, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(ScienceContent, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(ScienceContent_regrouped, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(TechnicalIssues, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(Unrealistic, content_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(number_ai_chatbots_used, content_trust_combined_score)

```

```{r}
# Check for differences in means of trust across groups in various variables
formulas <- c(
              # content_trust_combined_score ~ AIChatbotsFrequency,
              content_trust_combined_score ~ AIChatbotsFrequency_regrouped,
              # content_trust_combined_score ~ ScienceContent,
              content_trust_combined_score ~ ScienceContent_regrouped,
              content_trust_combined_score ~ TechnicalIssues,
              content_trust_combined_score ~ Unrealistic,
              content_trust_combined_score ~ Unrealistic_coded, 
              content_trust_combined_score ~ AIChatbotsUsed_ChatGPT,
              content_trust_combined_score ~ AIChatbotsUsed_Gemini,
              content_trust_combined_score ~ AIChatbotsUsed_Grok,
              content_trust_combined_score ~ AIChatbotsUsed_Claude,
              content_trust_combined_score ~ AIChatbotsUsed_Other,
              content_trust_combined_score ~ AIChatbotsUsed_None,
              content_trust_combined_score ~ AIChatbotsUsed_Copilot, 
              content_trust_combined_score ~ number_ai_chatbots_used_f,
              content_trust_combined_score ~ intention_to_use_binned,
              content_trust_combined_score ~ fear_of_ai_binned,
              content_trust_combined_score ~ changed_opinion_of_ai_binned,
              content_trust_combined_score ~ writing_expertise_binned,
              content_trust_combined_score ~ science_expertise_binned,
              content_trust_combined_score ~ likeability_binned,
              content_trust_combined_score ~ competence_binned,
              content_trust_combined_score ~ anthropomorphism_binned
              
              )


for (i_formula in formulas){
  s2_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s2_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

  if (!is.null(result) && result$test == "ANOVA"){
    result$apa_output
    if (!is.null(result$pwt_result) && !all(is.na(result$pwt_result))){
      print("Summary")
      summary(result$pwt_result)
      print("Inf print")
      print(result$pwt_result, width=Inf)
    }
    
  } else if (!is.null(result) && result$test == "t-test"){
    result$model
  }
}

```

###### Hierarchical Regression

```{r}
result <- run_post_hoc_regression_analysis(
  data = s2_cleaned_data,
  dv = "content_trust_combined_score",
  study = s2_study
)

print(result)
# result <- build_regression_table_apa(
#   data = s2_cleaned_data,
#   dv = "content_trust_combined_score",
#   predictors = c("Condition",  
#                  "likeability_score", "competence_score", 
#                  "author_trust_combined_score",
#                  "Age_1", "Gender", "Sex", "Education_regrouped", 
#                  "AIChatbotsFrequency_regrouped",
#                  "ScienceContent_regrouped",
#                  "intention_to_use_score",
#                  "ChangedOpinionOfAI",
#                  "fear_of_ai_score",
#                  "CouldWriteContent",
#                  "professional_content_expertise",
#                  "SurveyTopicCheck_coded",
#                  "Unrealistic",
#                  "Unrealistic_coded",
#                  "WellWritten",
#                  "Boring",
#                  "Engaging",
#                  "fear_of_ai_score"
#                  ), 
#   study = s2_study
# )
# 
# print(result)

```

###### Anthropomorphism

```{r}

s2_cleaned_data |> linear_model(content_trust_combined_score ~ anthropomorphism_score)
```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "content_trust_combined_score")

plot_correlation_content_anthro <- correlation_plot(s2_cleaned_data,
            s2_study,
            "anthropomorphism_score",
            "content_trust_combined_score")

plot_correlation_content_anthro
```

<!-- ###### Author / Content Trust Interaction -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data,  -->

<!--             s2_study, -->

<!--             "author_trust_combined_score", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |>  -->

<!--   linear_model(content_trust_combined_score ~  author_trust_combined_score * anthropomorphism_score) -->

<!-- # interactions::sim_slopes(lm_model, -->

<!-- #               pred = author_trust_combined_score, -->

<!-- #               modx = anthropomorphism_score) -->

<!-- plot <- s2_cleaned_data |> interaction_plot_3( -->

<!--   lm_model,  -->

<!--   pred_name = "author_trust_combined_score", -->

<!--   mod_name = "anthropomorphism_score",  -->

<!--   target_name = "content_trust_combined_score",  -->

<!--   study = s2_study) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |>  -->

<!--   linear_model(content_trust_combined_score ~ author_trust_combined_score * anthropomorphism_score * AIChatbotsFrequency_regrouped) -->

<!-- # interactions::sim_slopes(lm_model, -->

<!-- #               pred = author_trust_combined_score, -->

<!-- #               modx = anthropomorphism_score) -->

<!-- plot <- s2_cleaned_data |> interaction_plot_4( -->

<!--   lm_model,  -->

<!--   pred_name = "author_trust_combined_score", -->

<!--   mod_name = "anthropomorphism_score",  -->

<!--   mod2_name = "AIChatbotsFrequency_regrouped", -->

<!--   mod2_v = c("frequently", "occasionally", "rarely"), -->

<!--   target_name = "content_trust_combined_score",  -->

<!--   study = s2_study) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Age -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   group_by(age_range) |> filter(n() > 3) |> ungroup() |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ age_range, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("Age_1", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "Age_1", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Gender -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Gender, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> -->

<!--   droplevels() |> run_simple_effects_t_tests(content_trust_combined_score ~ Gender) -->

<!-- ``` -->

<!-- ###### Sex -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   group_by(Sex) |> filter(n() > 3) |> ungroup() |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Sex, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Education -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Education_regrouped, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### AI Usage Experience -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ AIChatbotsFrequency_regrouped, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ AIChatbotsFrequency_regrouped) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "AIChatbotsFrequency_regrouped", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(  c("rarely", "occasionally"), -->

<!--     c("rarely", "frequently"), -->

<!--     c("occasionally", "frequently") )) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * AIChatbotsFrequency_regrouped) -->

<!-- plot <- s2_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "AIChatbotsFrequency_regrouped", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s2_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Science Content Experience -->

<!-- ```{r} -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ ScienceContent_regrouped, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ScienceContent_regrouped) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "ScienceContent_regrouped", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(  c("rarely", "occasionally"), -->

<!--     c("rarely", "frequently"), -->

<!--     c("occasionally", "frequently") )) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * ScienceContent_regrouped) -->

<!-- plot <- s2_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "ScienceContent_regrouped", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s2_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Intention to Use AI -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("intention_to_use_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "intention_to_use_score", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Changed Opinion -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(ChangedOpinionOfAI, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ ChangedOpinionOfAI, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ChangedOpinionOfAI) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "ChangedOpinionOfAI", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list( -->

<!--               c("1", "2"), -->

<!--               c("2", "3"), -->

<!--               c("3", "4"), -->

<!--               c("4", "5"), -->

<!--               c("1", "3"), -->

<!--               c("2", "4"), -->

<!--               c("3", "5"), -->

<!--               c("1", "4"), -->

<!--               c("2", "5"), -->

<!--               c("1", "5") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ###### Fear of AI -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("fear_of_ai_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "fear_of_ai_score", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Could Write -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(CouldWriteContent, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ CouldWriteContent, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ CouldWriteContent) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "CouldWriteContent", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list( -->

<!--               c("1", "2"), -->

<!--               c("2", "3"), -->

<!--               c("3", "4"), -->

<!--               c("4", "5"), -->

<!--               c("1", "3"), -->

<!--               c("2", "4"), -->

<!--               c("3", "5"), -->

<!--               c("1", "4"), -->

<!--               c("2", "5"), -->

<!--               c("1", "5") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ###### Professional Content / Writing Expertise -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> test_correlation("professional_content_expertise", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "professional_content_expertise", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Content Properties -->

<!-- Well-written -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(WellWritten, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ WellWritten, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ WellWritten) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "WellWritten", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list( -->

<!--               c("-2", "-1"), -->

<!--               c("-1", "0"), -->

<!--               c("0", "1"), -->

<!--               c("1", "2"), -->

<!--               c("-2", "0"), -->

<!--               c("-1", "1"), -->

<!--               c("0", "2"), -->

<!--               c("-2", "1"), -->

<!--               c("-1", "2"), -->

<!--               c("-2", "2") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * WellWritten) -->

<!-- plot <- s2_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "WellWritten", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s2_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- Boring -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(Boring, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Boring, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Boring) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "Boring", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list( -->

<!--               c("-2", "-1"), -->

<!--               c("-1", "0"), -->

<!--               c("0", "1"), -->

<!--               c("1", "2"), -->

<!--               c("-2", "0"), -->

<!--               c("-1", "1"), -->

<!--               c("0", "2"), -->

<!--               c("-2", "1"), -->

<!--               c("-1", "2"), -->

<!--               c("-2", "2") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Boring) -->

<!-- plot <- s2_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "Boring", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s2_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- Engaging -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(Engaging, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Engaging, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Engaging) -->

<!-- plot <- violin_plot(s2_cleaned_data, -->

<!--             s2_study, -->

<!--             "Engaging", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list( -->

<!--               c("-2", "-1"), -->

<!--               c("-1", "0"), -->

<!--               c("0", "1"), -->

<!--               c("1", "2"), -->

<!--               c("-2", "0"), -->

<!--               c("-1", "1"), -->

<!--               c("0", "2"), -->

<!--               c("-2", "1"), -->

<!--               c("-1", "2"), -->

<!--               c("-2", "2") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s2_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Engaging) -->

<!-- plot <- s2_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "Engaging", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s2_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Survey Purpose Check -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ SurveyTopicCheck_coded, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Unrealistic Check -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(Unrealistic, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Unrealistic, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s2_cleaned_data |> descriptives_by_group(Unrealistic_coded, content_trust_combined_score) -->

<!-- aov_model <- s2_cleaned_data |> -->

<!--    group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Unrealistic_coded, "content_trust_combined_score") -->

<!-- s2_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_simple_effects_t_tests(content_trust_combined_score ~ Unrealistic_coded) -->

<!-- ``` -->

#### Author Trust

##### Plot

```{r}
plot <- violin_plot(s2_cleaned_data, 
            s2_study,
            "Condition",
            "author_trust_combined_score",
            include_legend = FALSE)

plot

```

##### Descriptive Statistics

```{r}

s2_cleaned_data |> descriptives_by_group(Condition, author_trust_combined_score)

```

##### Inferential Statistics

```{r}

result <- s2_cleaned_data |> run_inferential(author_trust_combined_score ~ Condition)

result$model
result$effect_size

```

##### Post-hoc Analysis

###### Sample Characteristics

```{r}

result <- s2_cleaned_data |> test_correlation(Age_1, author_trust_combined_score)
result

formulas <- c(author_trust_combined_score ~ Gender, 
              author_trust_combined_score ~ Sex, 
              author_trust_combined_score ~ Education #,
              # author_trust_combined_score ~ Education_regrouped
              )

for (i_formula in formulas){
  result <- s2_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

if (!is.null(result) && result$test == "ANOVA"){
  result$apa_output
  result$omega_squared
} else if (!is.null(result) && result$test == "t-test"){
  result$model
  result$effect_size
}
}


```

###### Sample Attitudes / Experience

```{r}
# Check for correlations between trust and variables
result <- s2_cleaned_data |> test_correlation(changed_opinion_of_ai_score, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(fear_of_ai_score, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(intention_to_use_score, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(writing_expertise, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(science_expertise, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(writing_quality_score, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(changed_opinion_of_ai_score, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(AIChatbotsFrequency, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(AIChatbotsFrequency_regrouped, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(ScienceContent, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(ScienceContent_regrouped, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(TechnicalIssues, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(Unrealistic, author_trust_combined_score)
result <- s2_cleaned_data |> test_correlation(number_ai_chatbots_used, author_trust_combined_score)

```

```{r}
# Check for differences in means of trust across groups in various variables
formulas <- c(
              # content_trust_combined_score ~ AIChatbotsFrequency,
              author_trust_combined_score ~ AIChatbotsFrequency_regrouped,
              # content_trust_combined_score ~ ScienceContent,
              author_trust_combined_score ~ ScienceContent_regrouped,
              author_trust_combined_score ~ TechnicalIssues,
              author_trust_combined_score ~ Unrealistic,
              author_trust_combined_score ~ Unrealistic_coded, 
              author_trust_combined_score ~ AIChatbotsUsed_ChatGPT,
              author_trust_combined_score ~ AIChatbotsUsed_Gemini,
              author_trust_combined_score ~ AIChatbotsUsed_Grok,
              author_trust_combined_score ~ AIChatbotsUsed_Claude,
              author_trust_combined_score ~ AIChatbotsUsed_Other,
              author_trust_combined_score ~ AIChatbotsUsed_None,
              author_trust_combined_score ~ AIChatbotsUsed_Copilot, 
              author_trust_combined_score ~ number_ai_chatbots_used_f,
              author_trust_combined_score ~ intention_to_use_binned,
              author_trust_combined_score ~ fear_of_ai_binned,
              author_trust_combined_score ~ changed_opinion_of_ai_binned,
              author_trust_combined_score ~ writing_expertise_binned,
              author_trust_combined_score ~ science_expertise_binned,
              author_trust_combined_score ~ likeability_binned,
              author_trust_combined_score ~ competence_binned,
              author_trust_combined_score ~ anthropomorphism_binned
              
              )


for (i_formula in formulas){
  
  s2_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s2_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

  if (!is.null(result) && result$test == "ANOVA"){
    result$apa_output
    if (!is.null(result$pwt_result) && !all(is.na(result$pwt_result))){
      print("trying summary")
      summary(result$pwt_result)
      print("trying Inf print")
      print(result$pwt_result, width=Inf)
      # result$pwt_result |> rmarkdown::paged_table() |> print()
    }
    
  } else if (!is.null(result) && result$test == "t-test"){
    result$model
  }
}

```

###### Hierarchical Regression Analysis

```{r}

result <- run_post_hoc_regression_analysis(
  data = s2_cleaned_data,
  dv = "author_trust_combined_score",
  study = s2_study
)

print(result)
# result <- build_regression_table_apa(
#   data = s2_cleaned_data,
#   dv = "author_trust_combined_score",
#   predictors = c("Condition",  
#                  "likeability_score", "competence_score", 
#                  "content_trust_combined_score",
#                  "Age_1", "Gender", "Sex", "Education_regrouped", 
#                  "AIChatbotsFrequency_regrouped",
#                  "ScienceContent_regrouped",
#                  "intention_to_use_score",
#                  "ChangedOpinionOfAI",
#                  "fear_of_ai_score",
#                  "CouldWriteContent",
#                  "professional_content_expertise",
#                  "SurveyTopicCheck_coded",
#                  "Unrealistic",
#                  "Unrealistic_coded",
#                  "WellWritten",
#                  "Boring",
#                  "Engaging",
#                  "fear_of_ai_score"
#                  ), 
#   study = s2_study
# )
# 
# print(result)

```

###### Anthropomorphism

```{r}

s2_cleaned_data |> linear_model(author_trust_combined_score ~ anthropomorphism_score)

```

```{r}

s2_cleaned_data |> test_correlation("anthropomorphism_score", "author_trust_combined_score")

plot_correlation_author_anthro <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "anthropomorphism_score",
            "author_trust_combined_score")

plot_correlation_author_anthro
```

#### General Post Hoc

```{r}
s2_cleaned_data |> descriptives_by_group(Condition, Age_1)
s2_cleaned_data |> descriptives_by_group(Condition, Gender_n)
s2_cleaned_data |> descriptives_by_group(Condition, Sex_n)
s2_cleaned_data |> descriptives_by_group(Condition, Education_n)
s2_cleaned_data |> descriptives_by_group(Condition, changed_opinion_of_ai_score)
s2_cleaned_data |> descriptives_by_group(Condition, changed_opinion_of_ai_binned_n)
s2_cleaned_data |> descriptives_by_group(Condition, fear_of_ai_score)
s2_cleaned_data |> descriptives_by_group(Condition, fear_of_ai_binned_n)
s2_cleaned_data |> descriptives_by_group(Condition, intention_to_use_score)
s2_cleaned_data |> descriptives_by_group(Condition, intention_to_use_binned_n)
s2_cleaned_data |> descriptives_by_group(Condition, writing_expertise)
s2_cleaned_data |> descriptives_by_group(Condition, writing_expertise_binned_n)
s2_cleaned_data |> descriptives_by_group(Condition, science_expertise)
s2_cleaned_data |> descriptives_by_group(Condition, science_expertise_binned_n)
s2_cleaned_data |> descriptives_by_group(Condition, writing_quality_score)
s2_cleaned_data |> descriptives_by_group(Condition, writing_quality_binned_n)

s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsFrequency_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsFrequency_regrouped_n)
s2_cleaned_data |> descriptives_by_group(Condition, ScienceContent_n)
s2_cleaned_data |> descriptives_by_group(Condition, ScienceContent_regrouped_n)
s2_cleaned_data |> descriptives_by_group(Condition, TechnicalIssues_n)
s2_cleaned_data |> descriptives_by_group(Condition, Unrealistic_n)
s2_cleaned_data |> descriptives_by_group(Condition, number_ai_chatbots_used)

s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_ChatGPT_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Gemini_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Grok_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Claude_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Copilot_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Other_n)
s2_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_None_n)

s2_cleaned_data |> descriptives_by_group(Condition, likeability_score)
s2_cleaned_data |> descriptives_by_group(Condition, competence_score)
s2_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score)

```

```{r}
# Check for differences in means of trust across groups in various variables
formulas <- c(
              Age_1 ~ Condition,
              Gender_n ~ Condition,
              Sex_n ~ Condition,
              Education_n ~ Condition,
              Unrealistic_n ~ Condition,
              TechnicalIssues_n ~ Condition,
              AIChatbotsFrequency_n ~ Condition,
              AIChatbotsFrequency_regrouped_n ~ Condition,
              ScienceContent_n ~ Condition,
              ScienceContent_regrouped_n ~ Condition,
              AIChatbotsUsed_ChatGPT_n ~ Condition,
              AIChatbotsUsed_Gemini_n ~ Condition,
              AIChatbotsUsed_Grok_n ~ Condition,
              AIChatbotsUsed_Claude_n ~ Condition,
              AIChatbotsUsed_Other_n ~ Condition,
              AIChatbotsUsed_None_n ~ Condition,
              AIChatbotsUsed_Copilot_n ~ Condition, 
              number_ai_chatbots_used ~ Condition,
              intention_to_use_score ~ Condition,
              fear_of_ai_score ~ Condition,
              changed_opinion_of_ai_score ~ Condition,
              writing_quality_score ~ Condition,
              writing_expertise ~ Condition,
              science_expertise ~ Condition,
              likeability_score ~ Condition,
              competence_score ~ Condition,
              anthropomorphism_score ~ Condition
              
              )


for (i_formula in formulas){

  s2_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s2_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

  if (!is.null(result) && result$test == "ANOVA"){
    result$apa_output
    if (!is.null(result$pwt_result) && !all(is.na(result$pwt_result))){
      summary(result$pwt_result)
      print(result$pwt_result, width=Inf)
      result$pwt_result |> rmarkdown::paged_table() |> print()
    }
    
  } else if (!is.null(result) && result$test == "t-test"){
    result$model
  }
}

```

#### Interaction Effects

```{r}
model <- aov(formula = content_trust_combined_score ~ writing_quality_binned * fear_of_ai_binned, data = s2_cleaned_data)
summary(model)

print(effectsize::omega_squared(model))

# Mediator model
med_model <- lm(writing_quality_score ~ fear_of_ai_score, data = s2_cleaned_data)

# Outcome model
out_model <- lm(content_trust_combined_score ~ writing_quality_score + fear_of_ai_score, data = s2_cleaned_data)

mediation_result <- mediation::mediate(med_model, out_model,
                            treat = "fear_of_ai_score",
                            mediator = "writing_quality_score",
                            boot = TRUE, sims = 5000)

summary(mediation_result)
plot(mediation_result)


model <- aov(formula = content_trust_combined_score ~ writing_quality_binned * AIChatbotsFrequency, data = s2_cleaned_data)
summary(model)
print(effectsize::omega_squared(model))

# Mediator model
med_model <- lm(writing_quality_score ~ AIChatbotsFrequency, data = s2_cleaned_data)

# Outcome model
out_model <- lm(content_trust_combined_score ~ writing_quality_score + AIChatbotsFrequency, data = s2_cleaned_data)

mediation_result <- mediation::mediate(med_model, out_model,
                            treat = "AIChatbotsFrequency",
                            mediator = "writing_quality_score",
                            boot = TRUE, sims = 5000)

summary(mediation_result)
plot(mediation_result)

```

#### Path Analysis

```{r}
s2_cleaned_data$ScienceContent_ordinal <- as.numeric(factor(s2_cleaned_data$ScienceContent_regrouped,
                                              levels = c("rarely", "occasionally", "frequently")))

s2_cleaned_data$AIChatbotsFrequency_ordinal <- as.numeric(factor(s2_cleaned_data$AIChatbotsFrequency_regrouped,
                                              levels = c("rarely", "occasionally", "frequently")))

  # s2_cleaned_data$WellWritten_n <- as.numeric(s2_cleaned_data$WellWritten)
  # s2_cleaned_data$Boring_n <- as.numeric(s2_cleaned_data$Boring)
  # s2_cleaned_data$Engaging_n <- as.numeric(s2_cleaned_data$Engaging)
```

```{r}
# s2_model_full <- '
# #
#   anthropomorphism_score ~ Condition
#   likeability_score ~ Condition
#   competence_score ~ Condition
# 
#   ai_attitudes =~ AIChatbotsFrequency_ordinal + intention_to_use_score + fear_of_ai_score
#   author_perceptions =~ anthropomorphism_score + likeability_score + competence_score + expertise_score + integrity_score + benevolence_score
# 
#   author_perceptions ~ ai_attitudes
# 
#   # content_experience =~ ScienceContent_ordinal + science_expertise
#   writing_quality =~ writing_quality_score + content_trust_appelman_score
# 
#   # author_trust ~ author_perceptions + ai_attitudes
#   #
#   # content_trust ~ ScienceContent_ordinal + science_expertise + writing_quality
# 
#   # author_trust ~ content_trust
# 
#   author_trust_behaviour_score ~ author_perceptions + ai_attitudes
#   content_trust_behaviour_score ~ ScienceContent_ordinal + science_expertise + writing_quality + author_perceptions + ai_attitudes
# 
# 
# 
# 
#   # Correlations
#   competence_score ~~ anthropomorphism_score
#   likeability_score ~~ anthropomorphism_score
#   competence_score ~~ likeability_score
# 
# 
# '
# 
# s2_model_full_fit <- s2_cleaned_data |> test_med_mod_model(s2_model_full)
```

```{r}
# lavaan::summary(s2_model_full_fit, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
# lavaan::inspect(s2_model_full_fit, "r2")
```

```{r}
# export_sem_results_to_word(s2_model_full_fit, s2_study, "full_model")
```

```{r}
# plot <- plot_model(s2_model_full_fit, s2_study)
# plot
```

```{r}
s2_model_trimmed <- '
 
 anthropomorphism_score ~ a1*Condition
  likeability_score ~ b1*Condition
  competence_score ~ c1*Condition
  
  writing_quality_score ~ content_trust_combined_score
  content_trust_combined_score ~ writing_quality_score
  author_trust_combined_score ~ likeability_score + competence_score + anthropomorphism_score
  content_trust_combined_score ~ e1*author_trust_combined_score 

    # Optional: bidirectional path (uncomment if theoretically justified)
  author_trust_combined_score ~ f1*content_trust_combined_score

  # Optional: or use covariance if you don’t want to assume direction
  # author_trust_combined_score ~~ content_trust_combined_score
  
  # Correlations
  ScienceContent_ordinal ~~ content_trust_combined_score
  
  competence_score ~~ anthropomorphism_score 
  likeability_score ~~ anthropomorphism_score
  competence_score ~~ likeability_score
  
  # writing_quality_score ~~ content_trust_combined_score
  
  # Indirect effects
  ind1 := b1 * e1           # Condition → Anthro → Author Trust  → Content Trust
  ind2 := a1 * e1           # Condition → Likeability → Author Trust → Content Trust
  ind3 := c1 * e1           # Condition → Competence → Author Trust → Content Trust

'

s2_trimmed_model_fit <- s2_cleaned_data |> test_med_mod_model(s2_model_trimmed)
```

```{r}
lavaan::summary(s2_trimmed_model_fit, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
lavaan::inspect(s2_trimmed_model_fit, "r2")
```

```{r}
export_sem_results_to_word(s2_trimmed_model_fit, s2_study, "trimmed_model")
```

```{r}
# plot <- plot_model(s2_trimmed_model_fit, s2_study)
# plot

labels <- list(Condition = "Anthropomorphism Manipulation", 
               competence_score = "Perceived Intelligence", 
               likeability_score = "Perceived Likeability", 
               anthropomorphism_score = "Perceived Anthropomorphism", 
               author_trust_combined_score = "Author Trust", 
               content_trust_combined_score = "Content Trust",
               ScienceContent_ordinal = "Frequency of Science Content Consumption",
               writing_quality_score = "Writing Quality")

plot_lavaan_model(s2_trimmed_model_fit, labels, "trimmed", s2_study)
```

```{r}
# # Center the variables to reduce multicollinearity
# s2_cleaned_data$wrtng_c <- scale(s2_cleaned_data$writing_quality_score, scale = FALSE)
# s2_cleaned_data$fear_c <- scale(s2_cleaned_data$fear_of_ai_score, scale = FALSE)
# # s2_cleaned_data$ai_attitudes_c <- rowMeans(s2_cleaned_data$fear_of_ai_score, as.numeric(s2_cleaned_data$AIChatbotsFrequency), )
# 
# # Create interaction term
# s2_cleaned_data$interaction <- s2_cleaned_data$wrtng_c * s2_cleaned_data$fear_c
# 
# # Run regression
# model <- lm(content_trust_combined_score ~ wrtng_c + fear_c + interaction, data = s2_cleaned_data)
# summary(model)
# 
# 
# # Step 1: fear → writing quality
# m1 <- lm(writing_quality_score ~ fear_of_ai_score, data = s2_cleaned_data)
# 
# # Step 2: fear + writing quality → content trust
# m2 <- lm(content_trust_combined_score ~ fear_of_ai_score + writing_quality_score, data = s2_cleaned_data)
# 
# med_model <- mediation::mediate(m1, m2, treat = "fear_of_ai_score", mediator = "writing_quality_score", boot = TRUE, sims = 5000)
# summary(med_model)

```

```{r}
# s2_cleaned_data$wrtng_c <- scale(s2_cleaned_data$writing_quality_score, scale = FALSE)
# s2_cleaned_data$aiuse_c <- scale(as.numeric(s2_cleaned_data$AIChatbotsFrequency_regrouped), scale = FALSE)
# 
# # Create interaction term
# s2_cleaned_data$wrtng_aiuse_interaction <- s2_cleaned_data$wrtng_c * s2_cleaned_data$aiuse_c
# 
# # Run regression
# model <- lm(content_trust_combined_score ~ wrtng_c + aiuse_c + wrtng_aiuse_interaction, data = s2_cleaned_data)
# summary(model)
```

```{r}
# 
# s2_cleaned_data$wrtng_c <- as.numeric(s2_cleaned_data$writing_quality_score)
# s2_cleaned_data$fear_c <- as.numeric(as.numeric(s2_cleaned_data$fear_of_ai_score))
# s2_cleaned_data$wrtng_fear_interaction <- s2_cleaned_data$wrtng_c * s2_cleaned_data$fear_c
# 
# model <- lm(content_trust_combined_score ~ wrtng_c + fear_c + wrtng_fear_interaction,
#             data = s2_cleaned_data)
# 
# 
# low_fear <- mean(s2_cleaned_data$fear_c, na.rm = TRUE) - sd(s2_cleaned_data$fear_c, na.rm = TRUE)
# high_fear <- mean(s2_cleaned_data$fear_c, na.rm = TRUE) + sd(s2_cleaned_data$fear_c, na.rm = TRUE)
# 
# plot_data <- expand.grid(
#   wrtng_c = seq(min(s2_cleaned_data$wrtng_c, na.rm = TRUE),
#                 max(s2_cleaned_data$wrtng_c, na.rm = TRUE), length.out = 100),
#   fear_c = c(low_fear, high_fear)
# )
# 
# plot_data$wrtng_fear_interaction <- plot_data$wrtng_c * plot_data$fear_c
# plot_data$predicted <- predict(model, newdata = plot_data)
# plot_data$fear_group <- factor(plot_data$fear_c, labels = c("Low Fear", "High Fear"))
# 
# 
# ggplot2::ggplot(plot_data, aes(x = wrtng_c, y = predicted, color = fear_group)) +
#   geom_line(size = 1.2) +
#   labs(
#     x = "Centered Writing Quality",
#     y = "Predicted Content Trust",
#     color = "AI Fear",
#     title = "Interaction between Writing Quality and AI Fear on Content Trust"
#   ) +
#   theme_minimal()
# 


```

```{r}
# 
# s2_cleaned_data$wrtng_c <- as.numeric(s2_cleaned_data$writing_quality_score)
# s2_cleaned_data$aiuse_c <- as.numeric(as.numeric(s2_cleaned_data$AIChatbotsFrequency_regrouped))
# s2_cleaned_data$wrtng_aiuse_interaction <- s2_cleaned_data$wrtng_c * s2_cleaned_data$aiuse_c
# 
# model <- lm(content_trust_combined_score ~ wrtng_c + aiuse_c + wrtng_aiuse_interaction,
#             data = s2_cleaned_data)
# 
# 
# low_aiuse <- mean(s2_cleaned_data$aiuse_c, na.rm = TRUE) - sd(s2_cleaned_data$aiuse_c, na.rm = TRUE)
# high_aiuse <- mean(s2_cleaned_data$aiuse_c, na.rm = TRUE) + sd(s2_cleaned_data$aiuse_c, na.rm = TRUE)
# 
# plot_data <- expand.grid(
#   wrtng_c = seq(min(s2_cleaned_data$wrtng_c, na.rm = TRUE),
#                 max(s2_cleaned_data$wrtng_c, na.rm = TRUE), length.out = 100),
#   aiuse_c = c(low_aiuse, high_aiuse)
# )
# 
# plot_data$wrtng_aiuse_interaction <- plot_data$wrtng_c * plot_data$aiuse_c
# plot_data$predicted <- predict(model, newdata = plot_data)
# plot_data$aiuse_group <- factor(plot_data$aiuse_c, labels = c("Low AI Use", "High AI Use"))
# 
# 
# ggplot2::ggplot(plot_data, aes(x = wrtng_c, y = predicted, color = aiuse_group)) +
#   geom_line(size = 1.2) +
#   labs(
#     x = "Centered Writing Quality",
#     y = "Predicted Content Trust",
#     color = "AI Use Frequency",
#     title = "Interaction between Writing Quality and AI Use on Content Trust"
#   ) +
#   theme_minimal()
# 


```

```{r}
# # Step 1: fear → writing quality
# m1 <- lm(writing_quality_score ~ AIChatbotsFrequency_regrouped, data = s2_cleaned_data)
# 
# # Step 2: fear + writing quality → content trust
# m2 <- lm(content_trust_combined_score ~ AIChatbotsFrequency_regrouped + writing_quality_score, data = s2_cleaned_data)
# 
# med_model <- mediation::mediate(m1, m2, treat = "AIChatbotsFrequency_regrouped", mediator = "writing_quality_score", boot = TRUE, sims = 5000)
# summary(med_model)
```

#### Correlations

```{r}

s2_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score")

plots <- correlation_plot(s2_cleaned_data, 
            s2_study,
            "author_trust_combined_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess
```

```{r}

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s2_cleaned_data |> filter(Condition == "High")),

        as.data.frame(s2_cleaned_data |> filter(Condition == "Low"))

      )

)

```

##### Partial correlations

What is the relationship between anthropomorphism and author trust, when controlling for content trust?

```{r}

s2_cleaned_data |> partial_correlation_test("anthropomorphism_score", "author_trust_combined_score", "content_trust_combined_score")
```

What is the breakdown by Condition?

```{r}
s2_cleaned_data |> filter(Condition == "Low") |> partial_correlation_test("anthropomorphism_score", "author_trust_combined_score", "content_trust_combined_score")

s2_cleaned_data |> filter(Condition == "High") |> partial_correlation_test("anthropomorphism_score", "author_trust_combined_score", "content_trust_combined_score")
```

What is the relationship between anthropomorphism and content trust, when controlling for author trust?

```{r}

s2_cleaned_data |> partial_correlation_test("anthropomorphism_score", "content_trust_combined_score", "author_trust_combined_score")

```

What is the breakdown by Condition?

```{r}
s2_cleaned_data |> filter(Condition == "Low") |> partial_correlation_test("anthropomorphism_score", "content_trust_combined_score", "author_trust_combined_score")

s2_cleaned_data |> filter(Condition == "High") |> partial_correlation_test("anthropomorphism_score", "content_trust_combined_score", "author_trust_combined_score")
```

Path (mediation) diagram

```{r}
library(lavaan)
library(semPlot)

x <- "anthropomorphism_score"
y_author <- "author_trust_combined_score"
y_content <- "content_trust_combined_score"

model_txt <- sprintf('
  %1$s ~ a*%2$s
  %3$s ~ b*%1$s + cprime*%2$s

  # (optional) indirect and total effects
  ind := a*b
  total := cprime + (a*b)
', y_author, x, y_content)

fit <- lavaan::sem(model_txt, data = s2_cleaned_data, meanstructure = TRUE, std.lv = TRUE)
summary(fit, standardized = TRUE, fit.measures = TRUE)

# Plot standardized paths
semPlot::semPaths(
  fit,
  what = "std", whatLabels = "std", layout = "tree",
  nCharNodes = 0, sizeMan = 7, edge.label.cex = 1.1,
  residuals = FALSE, intercepts = FALSE, mar = c(6,6,6,6)
)
```

Partial‑correlation residual scatterplots (two panels)

```{r}
library(patchwork)

x <- "anthropomorphism_score"
y_author <- "author_trust_combined_score"
y_content <- "content_trust_combined_score"

df <- s2_cleaned_data %>%
  dplyr::select(all_of(c(x, y_author, y_content))) %>%
  drop_na()

# A: residuals for (x | content) vs (author | content)
res_x_c <- resid(lm(df[[x]] ~ df[[y_content]]))
res_author_c <- resid(lm(df[[y_author]] ~ df[[y_content]]))
pA <- tibble(rx = res_x_c, ry = res_author_c) %>%
  ggplot(aes(rx, ry)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Anthropomorphism ↔ Author (controlling Content)",
    x = sprintf("Residual %s | %s", x, y_content),
    y = sprintf("Residual %s | %s", y_author, y_content)
  ) +
  theme_minimal(base_size = 12)

# B: residuals for (x | author) vs (content | author)
res_x_a <- resid(lm(df[[x]] ~ df[[y_author]]))
res_content_a <- resid(lm(df[[y_content]] ~ df[[y_author]]))
pB <- tibble(rx = res_x_a, ry = res_content_a) %>%
  ggplot(aes(rx, ry)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Anthropomorphism ↔ Content (controlling Author)",
    x = sprintf("Residual %s | %s", x, y_author),
    y = sprintf("Residual %s | %s", y_content, y_author)
  ) +
  theme_minimal(base_size = 12)

pA + pB
```

Correlation network (bivariate vs partial)

```{r}

# ---- Correlation network graphs with numeric edge labels ----
library(qgraph)
library(corpcor)
library(dplyr)

x <- "anthropomorphism_score"
y_author <- "author_trust_combined_score"
y_content <- "content_trust_combined_score"

vars <- c(x, y_author, y_content)
M <- s2_cleaned_data %>% dplyr::select(all_of(vars)) %>% drop_na() %>% as.matrix()

# Compute correlation and partial correlation matrices
cor_mat  <- cor(M)
pcor_mat <- corpcor::cor2pcor(cor_mat)

# Helper: numeric labels only for lower triangle
edge_label_matrix <- function(mat, digits = 2) {
  L <- round(mat, digits)
  diag(L) <- NA
  L[upper.tri(L, diag = FALSE)] <- NA  # use NA instead of ""
  return(L)
}

lab_cor  <- edge_label_matrix(cor_mat,  digits = 2)
lab_pcor <- edge_label_matrix(pcor_mat, digits = 2)

# Plot side by side
par(mfrow = c(1,2))
# Bivariate
qgraph(
  cor_mat,
  layout = "spring",
  labels = c("Anthro","Author","Content"),
  title = "Bivariate correlations",
  edge.labels = TRUE,             # <-- let qgraph print weights
  edge.label.cex = 1.2,
  edge.label.position = 0.5,
  edge.label.bg = "white"
)

# Partial
qgraph(
  pcor_mat,
  layout = "spring",
  labels = c("Anthro","Author","Content"),
  title = "Partial correlations (control other)",
  edge.labels = TRUE,
  edge.label.cex = 1.2,
  edge.label.position = 0.5,
  edge.label.bg = "white"
)
par(mfrow = c(1,1))
```

Bar plot: raw vs partial correlations (with stars)

```{r}

plot_corr_vs_partial_bars(
  s2_cleaned_data,
  study = s2_study, 
  name = "anthro_content_author",
  x = "anthropomorphism_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "anthro",
  y_label = "author",
  z_label = "content"
)

```

```{r}

plot_corr_vs_partial_bars(
  s2_cleaned_data |> filter(Condition == "Low"),
  study = s2_study, 
  name = "low_anthro_content_author",
  x = "anthropomorphism_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "anthro",
  y_label = "author",
  z_label = "content"
)

```

```{r}
plot_corr_vs_partial_bars(
  s2_cleaned_data |> filter(Condition == "High"),
  study = s2_study, 
  name = "high_anthro_content_author",
  x = "anthropomorphism_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "anthro",
  y_label = "author",
  z_label = "content"
)
```

```{r}

combined_plot <- ggpubr::ggarrange(plot_correlation_author_anthro$lm, plot_correlation_content_anthro$lm, 
          labels = c("A", "B"),
  common.legend = TRUE, legend = "bottom")

  filename <- paste0("e2_correlation_lm_author_content_anthro.png")
  save_path <- paste(sep = "/", "plots", "s2", filename)
  
    ggsave(save_path,
         plot = combined_plot,
         create.dir = TRUE)

```


# References

```{r}
citation()
version$version.string

citation("rstatix")
packageVersion("rstatix")

citation("stats")
packageVersion("stats")

citation("effectsize")
packageVersion("effectsize")

citation("psych")
packageVersion("psych")

citation("interactions")
packageVersion("interactions")

citation("corrplot")
packageVersion("corrplot")

citation("performance")
packageVersion("performance")

citation("FSA")
packageVersion("FSA")

citation("see")
packageVersion("see")
```
