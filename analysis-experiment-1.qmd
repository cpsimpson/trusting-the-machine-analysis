---
title: "Analysis"
author: "Caroline Simpson"
format: 
  html:
    theme: cerulean
    df-print: kable
    # df-print: paged
    code-fold: false
    toc: true
    toc-float:
      collapsed: true
      smooth-scroll: false
    toc-depth: 7

editor: visual
---

```{r include=FALSE}
#| label: setup

library(knitr)
library(kableExtra)


source("./scripts/data-loading.R", local = TRUE)
source("./scripts/data-cleaning.R", local = TRUE)
source("./scripts/analysis-data-properties.R", local = TRUE)
source("./scripts/analysis-descriptives.R", local = TRUE)
source("./scripts/analysis-reliability.R", local = TRUE)
source("./scripts/analysis-inferential.R", local = TRUE)
source("./scripts/analysis-correlation.R", local = TRUE)
source("./scripts/analysis-regression.R", local = TRUE)
source("./scripts/analysis-moderation-mediation.R", local = TRUE)
source("./scripts/plotting.R", local = TRUE)
source("./scripts/common.R", local = TRUE)

library(tidyverse)

directory_setup()
theme_set(my_theme)

s1_study <- "s1"

```

# Trusting the machine: Epistemic trust and anthropomorphism in generative artificial intelligence

**Research Question**: What effect does anthropomorphism have on level of trust in generative AI and the content it creates?

My **hypothesis** is that there will be an increase in epistemic trust with increasing levels of anthropomorphism.

## Data Analysis

### Load data

```{r}
s1_raw_data <- load_data(s1_study)
s1_raw_data <- factorize_data(s1_study, s1_raw_data)
```

Number of participants in raw data = `r nrow(s1_raw_data)`.

```{r}

s1_raw_data <- explode_chatbots_used(s1_raw_data)

s1_raw_data <- explode_languages(s1_raw_data)

```

### Exclude non-consent

```{r}
s1_raw_data <- exclude_non_consenting_participants(s1_raw_data)
```

### Manual Processing

Reviewed and coded Survey purpose check (what they think this study is about, not the attention check)

-   Manually coded the response values with the following key:

    -   0 = no answer provided

    -   1 = identified the survey was about AI content, perception of AI, human versus AI distinction

    -   2 = nonsensical text

    -   3 = values that describe a purpose (not about AI)

    -   4 = random word

    -   5 = unsure

    -   6 = "the study was interesting" or "good" and variations of this

    -   7 = None

```{r}
summarize_columns(s1_raw_data, SurveyTopicCheck_coded)
```

Reviewed and coded Unrealistic parts of survey.

-   Unrealistic field is a separate field with the values of:

    -   1 = No

    -   2 = Yes

-   Unrealistic_coded -\> Manually coded the response values from Unrealistic_2_TEXT field with the following key:

    -   0 = no answer provided

    -   1 = believe descriptions written by AI or content written by AI when told human or content written by human when told AI

    -   2 = don't believe that traits make sense to apply to AI

    -   3 = it all seemed realistic

    -   4 = description of AI was not believable

    -   5 = random text

    -   6 = unsure why they were asked questions about AI (in High condition)

```{r}

s1_raw_data |> summarize_columns(Unrealistic)

s1_raw_data |> summarize_columns(Unrealistic, Unrealistic_coded) 
```

### Clean Data

No ability to check for duplicates because we recruited through CloudResearch and don't have ids. Assume that the platform prevents duplicate participant responses.

```{r}
recruited_participants <- s1_raw_data |> count_recruited_participants(s1_study)
```

Number of participants recruited = `r recruited_participants`.

```{r}
s1_cleaned_data <- s1_raw_data |> clean_data(s1_study)

```

Number of participants after basic filtering = `r nrow(s1_cleaned_data)`.

### Fill missing values

#### Assess skewness and distribution

```{r}

# Compute skewness for each numeric variable
s1_cleaned_data |> check_skewness(s1_study)

# Shapiro-Wilk normality test 
s1_cleaned_data |>
  dplyr::select(-Progress, -ConsentForm, -`Duration (in seconds)`, -Status, -Finished, -TopicCheck, -GodspeedMETI_28, -GodspeedMETI_29, -AIChatbotsUsed_NA, -Reread, -LanguagesFluent_NA) |>
  check_normality(s1_study)

```

#### Fill missing values with median values

Populate missing values with the median within Condition.

```{r}

missing_values_within_conditions(s1_cleaned_data)

# Perform imputation only on selected variables
s1_imputed_data <- impute_data(s1_cleaned_data)

missing_values_within_conditions(s1_imputed_data)

```

### Reverse Coding

Reverse code items for each scale where appropriate

```{r}
s1_recoded_data <- s1_imputed_data |> recode_data(s1_study)
```

#### Standardize Scale Item Values

```{r}

s1_cleaned_data <- s1_recoded_data |> standardize_data()

```

#### Regroup data

Regroup the AIChatbotsFrequency, Education, and Age columns into smaller number of categories of data for analysis. Some of the more granular categories don't have a large enough sample for meaningful comparisons.

```{r}

s1_cleaned_data <- s1_cleaned_data |> regroup_data()

```

### Calculate Scale Scores

#### Define Score Components

```{r}
s1_cleaned_data <- s1_cleaned_data |> compute_scores(s1_study)

s1_cleaned_data <- s1_cleaned_data |> bin_scores(s1_study)
```

```{r}
s1_cleaned_data <- s1_cleaned_data |> cast_variables(s1_study)
```

### Scale Inter-item Reliability Analysis

#### Anthropomorphism (Godspeed Subscale)

```{r}

basic_descriptives(s1_cleaned_data$anthropomorphism_score)

s1_cleaned_data |> cronbachs_alpha(get_anthropomorphism_score_godspeed_cols())

```

#### Likeability (Godspeed Subscale)

```{r}

basic_descriptives(s1_cleaned_data$likeability_score)

s1_cleaned_data |> cronbachs_alpha(get_likeability_score_godspeed_cols())

```

#### Competence (Godspeed Subscale)

```{r}

basic_descriptives(s1_cleaned_data$competence_score)

s1_cleaned_data |> cronbachs_alpha(get_competence_score_godspeed_cols())

```

#### Expertise (METI Subscale)

```{r}

basic_descriptives(s1_cleaned_data$expertise_score)

s1_cleaned_data |> cronbachs_alpha(get_expertise_score_METI_cols())

```

#### Integrity (METI Subscale)

```{r}

basic_descriptives(s1_cleaned_data$integrity_score)

s1_cleaned_data |> cronbachs_alpha(get_integrity_score_METI_cols())


```

#### Benevolence (METI Subscale)

```{r}
basic_descriptives(s1_cleaned_data$benevolence_score)

s1_cleaned_data |> cronbachs_alpha(get_benevolence_score_METI_cols())

```

#### METI (Author Trust)

```{r}

basic_descriptives(s1_cleaned_data$author_trust_METI_score)

s1_cleaned_data |> cronbachs_alpha(get_author_trust_score_METI_cols())

```

#### Trust Behaviour (Author Trust)

```{r}
basic_descriptives(s1_cleaned_data$author_trust_behaviour_score)

s1_cleaned_data |> cronbachs_alpha(get_author_trust_score_behaviour_cols(s1_study))

```

#### Combine Author Trust

```{r}

basic_descriptives(s1_cleaned_data$author_trust_combined_score)

s1_cleaned_data |> cronbachs_alpha(get_author_trust_score_combined_cols(s1_study))


```

#### Appelman (Content Trust)

```{r}
basic_descriptives(s1_cleaned_data$content_trust_appelman_score)

s1_cleaned_data |> cronbachs_alpha(get_content_trust_score_appelman_cols())

```

#### Trust Behaviour (Content Trust)

```{r}
basic_descriptives(s1_cleaned_data$content_trust_behaviour_score)

s1_cleaned_data |> cronbachs_alpha(get_content_trust_score_behaviour_cols())

```

#### Combined Content Trust

```{r}

basic_descriptives(s1_cleaned_data$content_trust_combined_score)

s1_cleaned_data |> cronbachs_alpha(get_content_trust_score_combined_cols())

```

#### Expertise / Intentions

```{r}
basic_descriptives(s1_cleaned_data$intention_to_use_score)
s1_cleaned_data |> cronbachs_alpha(get_intention_cols())


basic_descriptives(s1_cleaned_data$fear_of_ai_score)
s1_cleaned_data |> cronbachs_alpha(get_fear_cols())


basic_descriptives(s1_cleaned_data$writing_expertise)
s1_cleaned_data |> cronbachs_alpha(get_writing_experience_cols())


basic_descriptives(s1_cleaned_data$science_expertise)
s1_cleaned_data |> cronbachs_alpha(get_science_experience_cols())


basic_descriptives(s1_cleaned_data$writing_quality_score)
s1_cleaned_data |> cronbachs_alpha(get_writing_quality_cols())

```

### Sample Characteristics

```         
N=`r length(unique(s1_cleaned_data$ResponseId))`
```

#### Study duration (in minutes)

```{r}
basic_descriptives(s1_cleaned_data$`Duration (in seconds)` / 60)
```

#### Participants reporting Technical Issues (Not removed in data cleaning)

```{r}
s1_cleaned_data |> 
  summarize_columns(TechnicalIssues) 

s1_cleaned_data |> 
  summarize_columns(TechnicalIssues, Condition) 
```

```{r}
s1_cleaned_data |> 
  summarize_columns(Unrealistic) 

s1_cleaned_data |> 
  summarize_columns(Unrealistic, Condition) 

s1_cleaned_data |> 
  summarize_columns(Unrealistic_coded) 

s1_cleaned_data |> 
  summarize_columns(Unrealistic_coded, Condition) 
```

#### Participants per condition.

```{r}
s1_cleaned_data |> 
  summarize_columns(Condition)

```

#### Age

```         
Age range: `r round(min(s1_cleaned_data$Age_1, na.rm = TRUE), 2)` to `r round(max(s1_cleaned_data$Age_1, na.rm = TRUE), 2)`
Mean age: `r round(mean(s1_cleaned_data$Age_1, na.rm = TRUE), 2)`
Standard deviation: `r round(sd(s1_cleaned_data$Age_1, na.rm = TRUE), 2)`
```

```{r}
s1_cleaned_data |> 
  summarize_columns(age_range)

s1_cleaned_data |> 
  summarize_columns(age_range, Condition) 
```

#### Gender

```{r}

s1_cleaned_data |> 
  summarize_columns(Gender) 

s1_cleaned_data |> 
  summarize_columns(Gender, Condition) 

```

#### Sex

```{r}

s1_cleaned_data |> 
  summarize_columns(Sex)

s1_cleaned_data |> 
  summarize_columns(Sex, Condition)
```

#### Education Level

```{r}

s1_cleaned_data |> 
  summarize_columns(Education) 

s1_cleaned_data |> 
  summarize_columns(Education, Condition) 

s1_cleaned_data |> 
  summarize_columns(Education_regrouped) 

s1_cleaned_data |> 
  summarize_columns(Education_regrouped, Condition) 

```

#### AI Chatbot Usage

```{r}

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency) 

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency, Condition) 

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped) 

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped, Condition) 

s1_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed)
  
s1_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed, Condition)

```

#### Science Content Familiarity

```{r}

s1_cleaned_data |> 
  summarize_columns(ScienceContent) 

s1_cleaned_data |> 
  summarize_columns(ScienceContent, Condition) 

s1_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped) 

s1_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped, Condition) 

```

#### English as a First Language

```{r}

s1_cleaned_data |> 
  summarize_columns(English) 

s1_cleaned_data |> 
  summarize_columns(English, Condition) 
```

#### Other Languages

```{r}

s1_cleaned_data |> summarize_exploded_columns("LanguagesFluent", LanguagesFluent)

s1_cleaned_data |> summarize_exploded_columns("LanguagesFluent", LanguagesFluent, Condition)

```

### Manipulation Check

#### Anthropomorphism

##### Plot

```{r}

violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "anthropomorphism_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score) 
```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(anthropomorphism_score ~ Condition, "anthropomorphism_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(anthropomorphism_score ~ Condition)
```

#### Likeability

We were not explicitly intending to manipulate likeability

##### Plot

```{r}
violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "likeability_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, likeability_score) 
```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(likeability_score ~ Condition, "likeability_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(likeability_score ~ Condition)
```

#### Competence

We were not explicitly intending to manipulate competence \##### Plot

```{r}
violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "competence_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, competence_score) 
```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(competence_score ~ Condition, "competence_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(competence_score ~ Condition)
```

### Main Analysis

#### Content Trust

##### Plot

```{r}

plot <- violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "content_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s1_cleaned_data |> descriptives_by_group(Condition, content_trust_combined_score)

```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(content_trust_combined_score ~ Condition, "competence_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Condition)
```

##### Post-hoc Analysis

###### Sample Characteristics

```{r}

result <- s1_cleaned_data |> test_correlation(Age_1, content_trust_combined_score)
result

formulas <- c(content_trust_combined_score ~ Gender, 
              content_trust_combined_score ~ Sex, 
              content_trust_combined_score ~ Education #,
              # content_trust_combined_score ~ Education_regrouped
              )


for (i_formula in formulas){
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

if (!is.null(result) && result$test == "ANOVA"){
  result$apa_output
} else if (!is.null(result) && result$test == "t-test"){
  result$model
}
}



```

###### Sample Attitudes / Experience

```{r}
# Check for correlations between trust and variables
result <- s1_cleaned_data |> test_correlation(changed_opinion_of_ai_score, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(fear_of_ai_score, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(intention_to_use_score, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(writing_expertise, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(science_expertise, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(writing_quality_score, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(changed_opinion_of_ai_score, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(AIChatbotsFrequency, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(AIChatbotsFrequency_regrouped, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(ScienceContent, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(ScienceContent_regrouped, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(TechnicalIssues, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(Unrealistic, content_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(number_ai_chatbots_used, content_trust_combined_score)

```

```{r}
# Check for differences in means of trust across groups in various variables
formulas <- c(
              # content_trust_combined_score ~ AIChatbotsFrequency,
              content_trust_combined_score ~ AIChatbotsFrequency_regrouped,
              # content_trust_combined_score ~ ScienceContent,
              content_trust_combined_score ~ ScienceContent_regrouped,
              content_trust_combined_score ~ TechnicalIssues,
              content_trust_combined_score ~ Unrealistic,
              content_trust_combined_score ~ Unrealistic_coded, 
              content_trust_combined_score ~ AIChatbotsUsed_ChatGPT,
              content_trust_combined_score ~ AIChatbotsUsed_Gemini,
              content_trust_combined_score ~ AIChatbotsUsed_Grok,
              content_trust_combined_score ~ AIChatbotsUsed_Claude,
              content_trust_combined_score ~ AIChatbotsUsed_Other,
              content_trust_combined_score ~ AIChatbotsUsed_None,
              content_trust_combined_score ~ AIChatbotsUsed_Copilot, 
              content_trust_combined_score ~ number_ai_chatbots_used_f,
              content_trust_combined_score ~ intention_to_use_binned,
              content_trust_combined_score ~ fear_of_ai_binned,
              content_trust_combined_score ~ changed_opinion_of_ai_binned,
              content_trust_combined_score ~ writing_expertise_binned,
              content_trust_combined_score ~ science_expertise_binned,
              content_trust_combined_score ~ likeability_binned,
              content_trust_combined_score ~ competence_binned,
              content_trust_combined_score ~ anthropomorphism_binned
              
              )


for (i_formula in formulas){
  s1_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

  if (!is.null(result) && result$test == "ANOVA"){
    result$apa_output
    if (!is.null(result$pwt_result) && !all(is.na(result$pwt_result))){
      print("Summary")
      summary(result$pwt_result)
      print("Inf print")
      print(result$pwt_result, width=Inf)
    }
    
  } else if (!is.null(result) && result$test == "t-test"){
    result$model
  }
}

```

###### Hierarchical Regression Analysis

```{r}

result <- run_post_hoc_regression_analysis(
  data = s1_cleaned_data,
  dv = "content_trust_combined_score",
  study = s1_study
)

print(result)


```

###### Anthropomorphism

```{r}

s1_cleaned_data |> linear_model(content_trust_combined_score ~ anthropomorphism_score)
```

```{r}

s1_cleaned_data |> test_correlation("anthropomorphism_score", "content_trust_combined_score")

plot_correlation_content_anthro <- correlation_plot(s1_cleaned_data, 
            s1_study,
            "anthropomorphism_score",
            "content_trust_combined_score")

plot_correlation_content_anthro
```

#### Author Trust

##### Plot

```{r}
plot <- violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "author_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s1_cleaned_data |> descriptives_by_group(Condition, author_trust_combined_score)
```

##### Inferential Statistics

###### Main Effect ANOVA

```{r}


result <- s1_cleaned_data |> run_inferential(author_trust_combined_score ~ Condition)
result$pwt_result

```

##### Post-hoc Analysis

###### Sample Characteristics

```{r}

result <- s1_cleaned_data |> test_correlation(Age_1, author_trust_combined_score)
result

formulas <- c(author_trust_combined_score ~ Gender, 
              author_trust_combined_score ~ Sex, 
              author_trust_combined_score ~ Education #,
              # author_trust_combined_score ~ Education_regrouped
              )


for (i_formula in formulas){
  
  s1_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

if (!is.null(result) && result$test == "ANOVA"){
  result$apa_output
} else if (!is.null(result) && result$test == "t-test"){
  result$model
}
}


```

###### Sample Attitudes / Experience

```{r}
# Check for correlations between trust and variables
result <- s1_cleaned_data |> test_correlation(changed_opinion_of_ai_score, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(fear_of_ai_score, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(intention_to_use_score, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(writing_expertise, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(science_expertise, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(writing_quality_score, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(changed_opinion_of_ai_score, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(AIChatbotsFrequency, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(AIChatbotsFrequency_regrouped, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(ScienceContent, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(ScienceContent_regrouped, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(TechnicalIssues, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(Unrealistic, author_trust_combined_score)
result <- s1_cleaned_data |> test_correlation(number_ai_chatbots_used, author_trust_combined_score)

```

```{r}
# Check for differences in means of trust across groups in various variables
formulas <- c(
              # content_trust_combined_score ~ AIChatbotsFrequency,
              author_trust_combined_score ~ AIChatbotsFrequency_regrouped,
              # content_trust_combined_score ~ ScienceContent,
              author_trust_combined_score ~ ScienceContent_regrouped,
              author_trust_combined_score ~ TechnicalIssues,
              author_trust_combined_score ~ Unrealistic,
              author_trust_combined_score ~ Unrealistic_coded, 
              author_trust_combined_score ~ AIChatbotsUsed_ChatGPT,
              author_trust_combined_score ~ AIChatbotsUsed_Gemini,
              author_trust_combined_score ~ AIChatbotsUsed_Grok,
              author_trust_combined_score ~ AIChatbotsUsed_Claude,
              author_trust_combined_score ~ AIChatbotsUsed_Other,
              author_trust_combined_score ~ AIChatbotsUsed_None,
              author_trust_combined_score ~ AIChatbotsUsed_Copilot, 
              author_trust_combined_score ~ number_ai_chatbots_used_f,
              author_trust_combined_score ~ intention_to_use_binned,
              author_trust_combined_score ~ fear_of_ai_binned,
              author_trust_combined_score ~ changed_opinion_of_ai_binned,
              author_trust_combined_score ~ writing_expertise_binned,
              author_trust_combined_score ~ science_expertise_binned,
              author_trust_combined_score ~ likeability_binned,
              author_trust_combined_score ~ competence_binned,
              author_trust_combined_score ~ anthropomorphism_binned
              
              )


for (i_formula in formulas){
  
  s1_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

  if (!is.null(result) && result$test == "ANOVA"){
    result$apa_output
    if (!is.null(result$pwt_result) && !all(is.na(result$pwt_result))){
      print("trying summary")
      summary(result$pwt_result)
      print("trying Inf print")
      print(result$pwt_result, width=Inf)
      # result$pwt_result |> rmarkdown::paged_table() |> print()
    }
    
  } else if (!is.null(result) && result$test == "t-test"){
    result$model
  }
}

```

###### Regression Analysis

```{r}

result <- run_post_hoc_regression_analysis(
  data = s1_cleaned_data,
  dv = "author_trust_combined_score",
  study = s1_study
)

print(result)


```

###### Anthropomorphism

```{r}

s1_cleaned_data |> linear_model(author_trust_combined_score ~ anthropomorphism_score)

```

```{r}

s1_cleaned_data |> test_correlation("anthropomorphism_score", "author_trust_combined_score")

plot_correlation_author_anthro <- correlation_plot(s1_cleaned_data, 
            s1_study,
            "anthropomorphism_score",
            "author_trust_combined_score")

plot_correlation_author_anthro


```

#### General Post Hoc

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, Age_1)
s1_cleaned_data |> descriptives_by_group(Condition, Gender_n)
s1_cleaned_data |> descriptives_by_group(Condition, Sex_n)
s1_cleaned_data |> descriptives_by_group(Condition, English_n)
s1_cleaned_data |> descriptives_by_group(Condition, Education_n)
s1_cleaned_data |> descriptives_by_group(Condition, changed_opinion_of_ai_score)
s1_cleaned_data |> descriptives_by_group(Condition, changed_opinion_of_ai_binned_n)
s1_cleaned_data |> descriptives_by_group(Condition, fear_of_ai_score)
s1_cleaned_data |> descriptives_by_group(Condition, fear_of_ai_binned_n)
s1_cleaned_data |> descriptives_by_group(Condition, intention_to_use_score)
s1_cleaned_data |> descriptives_by_group(Condition, intention_to_use_binned_n)
s1_cleaned_data |> descriptives_by_group(Condition, writing_expertise)
s1_cleaned_data |> descriptives_by_group(Condition, writing_expertise_binned_n)
s1_cleaned_data |> descriptives_by_group(Condition, science_expertise)
s1_cleaned_data |> descriptives_by_group(Condition, science_expertise_binned_n)
s1_cleaned_data |> descriptives_by_group(Condition, writing_quality_score)
s1_cleaned_data |> descriptives_by_group(Condition, writing_quality_binned_n)

s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsFrequency_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsFrequency_regrouped_n)
s1_cleaned_data |> descriptives_by_group(Condition, ScienceContent_n)
s1_cleaned_data |> descriptives_by_group(Condition, ScienceContent_regrouped_n)
s1_cleaned_data |> descriptives_by_group(Condition, TechnicalIssues_n)
s1_cleaned_data |> descriptives_by_group(Condition, Unrealistic_n)
s1_cleaned_data |> descriptives_by_group(Condition, number_ai_chatbots_used)

s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_ChatGPT_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Gemini_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Grok_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Claude_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Copilot_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_Other_n)
s1_cleaned_data |> descriptives_by_group(Condition, AIChatbotsUsed_None_n)

s1_cleaned_data |> descriptives_by_group(Condition, likeability_score)
s1_cleaned_data |> descriptives_by_group(Condition, competence_score)
s1_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score)

```

```{r}
# Check for differences in means of trust across groups in various variables
formulas <- c(
              Age_1 ~ Condition,
              Gender_n ~ Condition,
              Sex_n ~ Condition,
              English_n ~ Condition,
              Education_n ~ Condition,
              Unrealistic_n ~ Condition,
              TechnicalIssues_n ~ Condition,
              AIChatbotsFrequency_n ~ Condition,
              AIChatbotsFrequency_regrouped_n ~ Condition,
              ScienceContent_n ~ Condition,
              ScienceContent_regrouped_n ~ Condition,
              AIChatbotsUsed_ChatGPT_n ~ Condition,
              AIChatbotsUsed_Gemini_n ~ Condition,
              AIChatbotsUsed_Grok_n ~ Condition,
              AIChatbotsUsed_Claude_n ~ Condition,
              AIChatbotsUsed_Other_n ~ Condition,
              AIChatbotsUsed_None_n ~ Condition,
              AIChatbotsUsed_Copilot_n ~ Condition, 
              number_ai_chatbots_used ~ Condition,
              intention_to_use_score ~ Condition,
              fear_of_ai_score ~ Condition,
              changed_opinion_of_ai_score ~ Condition,
              writing_quality_score ~ Condition,
              writing_expertise ~ Condition,
              science_expertise ~ Condition,
              likeability_score ~ Condition,
              competence_score ~ Condition,
              anthropomorphism_score ~ Condition
              
              )


for (i_formula in formulas){

  s1_cleaned_data |> descriptives_from_formula(i_formula)
  
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

  if (!is.null(result) && result$test == "ANOVA"){
    result$apa_output
    if (!is.null(result$pwt_result) && !all(is.na(result$pwt_result))){
      summary(result$pwt_result)
      print(result$pwt_result, width=Inf)
      result$pwt_result |> rmarkdown::paged_table() |> print()
    }
    
  } else if (!is.null(result) && result$test == "t-test"){
    result$model
  }
}

```

#### Mediation Analysis

Anthro -\> Author -\> Content

```{r}

# Define mediation model
s1_anthro_author_content_model <- '
  # direct effect
  content_trust_combined_score ~ c_prime*anthropomorphism_score + b*author_trust_combined_score

  # mediator
  author_trust_combined_score ~ a*anthropomorphism_score

  # indirect effect
  indirect := a*b

  # total effect
  total := c_prime + (a*b)
'

# Fit the model
s1_anthro_author_content_model_fit <- sem(s1_anthro_author_content_model, data = s1_cleaned_data, se = "bootstrap", bootstrap = 5000)

# Summary with standardized estimates
summary(s1_anthro_author_content_model_fit, standardized = TRUE, ci = TRUE)

```

```{r}
labels <- list(
               anthropomorphism_score = "Perceived Anthropomorphism", 
               author_trust_combined_score = "Author Trust", 
               content_trust_combined_score = "Content Trust"
               )

s1_sem_anthro_author_content_plot <- plot_lavaan_model(s1_anthro_author_content_model_fit, labels, "anthro_author_content", s1_study)

```

Reverse model: Anthro -\> Content -\> Author

```{r}

# Define mediation model
s1_anthro_content_author_model <- '
  # direct effect
  author_trust_combined_score ~ c_prime*anthropomorphism_score + b*content_trust_combined_score

  # mediator
  content_trust_combined_score ~ a*anthropomorphism_score

  # indirect effect
  indirect := a*b

  # total effect
  total := c_prime + (a*b)
'

# Fit the model
s1_anthro_content_author_model_fit <- sem(s1_anthro_content_author_model, data = s1_cleaned_data, se = "bootstrap", bootstrap = 5000)

# Summary with standardized estimates
summary(s1_anthro_content_author_model_fit, standardized = TRUE, ci = TRUE)

```

```{r}
labels <- list(
               anthropomorphism_score = "Perceived Anthropomorphism", 
               author_trust_combined_score = "Author Trust", 
               content_trust_combined_score = "Content Trust"
               )

s1_sem_anthro_content_author_plot <- plot_lavaan_model(s1_anthro_content_author_model_fit, labels, "anthro_content_author", s1_study)

```

```{r}

combined_plot <- ggpubr::ggarrange(s1_sem_anthro_author_content_plot, s1_sem_anthro_content_author_plot, 
          labels = c("A", "B"),
  common.legend = TRUE, legend = "bottom")

  filename <- paste0("e1_sem.png")
  save_path <- paste(sep = "/", "plots", "s1", filename)
  
    ggsave(save_path,
         plot = combined_plot,
         create.dir = TRUE)

```

#### Correlations

```{r}

s1_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score")

plots <- correlation_plot(s1_cleaned_data, 
            s1_study,
            "author_trust_combined_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess
```

```{r}

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s1_cleaned_data |> filter(Condition == "High")),

        as.data.frame(s1_cleaned_data |> filter(Condition == "Low"))

      )

)

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s1_cleaned_data |> filter(Condition == "High")),

        as.data.frame(s1_cleaned_data |> filter(Condition == "Medium"))

      )

)

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s1_cleaned_data |> filter(Condition == "Low")),

        as.data.frame(s1_cleaned_data |> filter(Condition == "Medium"))

      )

)

```

##### Partial correlations

###### Anthropomorphism - Trust

What is the relationship between anthropomorphism and author trust, when controlling for content trust?

```{r}

s1_pct_anthro_author_content <- s1_cleaned_data |> partial_correlation_test("anthropomorphism_score", "author_trust_combined_score", "content_trust_combined_score")

```

What is the relationship between anthropomorphism and content trust, when controlling for author trust?

```{r}

s1_pct_anthro_content_author <- s1_cleaned_data |> partial_correlation_test("anthropomorphism_score", "content_trust_combined_score", "author_trust_combined_score")

```

What is the relationship between author trust and content trust, when controlling for anthropomorphism?

```{r}

s1_pct_content_author_anthro <- s1_cleaned_data |> partial_correlation_test("content_trust_combined_score", "author_trust_combined_score", "anthropomorphism_score")

dr <- delta_r_boot(s1_cleaned_data, "content_trust_combined_score", "author_trust_combined_score", "anthropomorphism_score")
```

Bar plot: raw vs partial correlations (with stars)

```{r}

plot_corr_vs_partial_bars(
  s1_cleaned_data,
  study = s1_study, 
  name = "anthro_content_author",
  x = "anthropomorphism_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "Anthro",
  y_label = "Author",
  z_label = "Content"
)


```

###### Writing Quality - Trust

```{r}
plot_corr_vs_partial_bars(
  s1_cleaned_data,
  study = s1_study, 
  name = "quality_content_author",
  x = "writing_quality_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "quality",
  y_label = "author",
  z_label = "content"
)

```

###### Lkeability - Trust

```{r}
plot_corr_vs_partial_bars(
  s1_cleaned_data,
  study = s1_study, 
  name = "likeability_content_author",
  x = "likeability_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "likeability",
  y_label = "author",
  z_label = "content"
)

```

###### Competence - Trust

```{r}
plot_corr_vs_partial_bars(
  s1_cleaned_data,
  study = s1_study, 
  name = "competence_content_author",
  x = "competence_score",
  y = "author_trust_combined_score",
  z = "content_trust_combined_score",
  x_label = "competence",
  y_label = "author",
  z_label = "content"
)

```

```{r}

combined_plot <- ggpubr::ggarrange(plot_correlation_author_anthro$lm, plot_correlation_content_anthro$lm, 
          labels = c("A", "B"),
  common.legend = TRUE, legend = "bottom")

  filename <- paste0("e1_correlation_lm_author_content_anthro.png")
  save_path <- paste(sep = "/", "plots", "s1", filename)
  
    ggsave(save_path,
         plot = combined_plot,
         create.dir = TRUE)

```

# References

```{r}
my_packages = c("rstatix", "stats", "effectsize", "psych", "interactions",
                 "corrplot", "performance", "FSA", "see", "cocor")

write_bib(my_packages, file= "outputs/s1/packages.bib")
```

