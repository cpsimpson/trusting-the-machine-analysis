---
title: "Analysis"
author: "Caroline Simpson"
format: 
  html:
    theme: cerulean
    df-print: kable
    code-fold: false
    toc: true
    toc-float:
      collapsed: true
      smooth-scroll: false
    toc-depth: 7

editor: visual
---

```{r include=FALSE}
#| label: setup

library(knitr)
library(kableExtra)
# library(rstatix)
library(tidyverse)
# library(forcats)
# # library(qualtRics)
# library(haven)
# library(jtools)
# library(forcats)
# library(FactoMineR)
# library(psych)
# library(interactions)
# library(corrplot::corrplot)
# library(rcartocolor)
# library(ggpubr)
# library(ggtext)
# library(ggsignif)
# library(apaTables)
# 
# library(FSA)
# 
# library(performance)
# library(see)


source("./scripts/data-loading.R", local = TRUE)
source("./scripts/data-cleaning.R", local = TRUE)
source("./scripts/analysis-data-properties.R", local = TRUE)
source("./scripts/analysis-descriptives.R", local = TRUE)
source("./scripts/analysis-reliability.R", local = TRUE)
source("./scripts/analysis-inferential.R", local = TRUE)
source("./scripts/analysis-correlation.R", local = TRUE)
source("./scripts/analysis-regression.R", local = TRUE)
source("./scripts/analysis-moderation-mediation.R", local = TRUE)
source("./scripts/plotting.R", local = TRUE)
source("./scripts/common.R", local = TRUE)

directory_setup()
theme_set(my_theme)

s1_study <- "s1"

```

# Trusting the machine: Epistemic trust and anthropomorphism in generative artificial intelligence

**Research Question**: What effect does anthropomorphism have on level of trust in generative AI and the content it creates?

My **hypothesis** is that there will be an increase in epistemic trust with increasing levels of anthropomorphism.

## Data Analysis

### Load data

```{r}
s1_raw_data <- load_data(s1_study)
s1_raw_data <- factorize_data(s1_study, s1_raw_data)
```

Number of participants in raw data = `r nrow(s1_raw_data)`.

```{r}

s1_raw_data <- explode_chatbots_used(s1_raw_data)

s1_raw_data <- explode_languages(s1_raw_data)

```

### Exclude non-consent

```{r}
s1_raw_data <- exclude_non_consenting_participants(s1_raw_data)
```

### Manual Processing

Reviewed and coded Survey purpose check (what they think this study is about, not the attention check)

-   Manually coded the response values with the following key:

    -   0 = no answer provided

    -   1 = identified the survey was about AI content, perception of AI, human versus AI distinction

    -   2 = nonsensical text

    -   3 = values that describe a purpose (not about AI)

    -   4 = random word

    -   5 = unsure

    -   6 = "the study was interesting" or "good" and variations of this

    -   7 = None

```{r}
summarize_columns(s1_raw_data, SurveyTopicCheck_coded)
```

Reviewed and coded Unrealistic parts of survey.

-   Unrealistic field is a separate field with the values of:

    -   1 = No

    -   2 = Yes

-   Unrealistic_coded -\> Manually coded the response values from Unrealistic_2_TEXT field with the following key:

    -   0 = no answer provided

    -   1 = believe descriptions written by AI or content written by AI when told human or content written by human when told AI

    -   2 = don't believe that traits make sense to apply to AI

    -   3 = it all seemed realistic

    -   4 = description of AI was not believable

    -   5 = random text

    -   6 = unsure why they were asked questions about AI (in High condition)

```{r}

s1_raw_data |> summarize_columns(Unrealistic)

s1_raw_data |> summarize_columns(Unrealistic, Unrealistic_coded) 
```

### Clean Data

No ability to check for duplicates because we recruited through CloudResearch and don't have ids. Assume that the platform prevents duplicate participant responses.

```{r}
recruited_participants <- s1_raw_data |> count_recruited_participants(s1_study)
```

Number of participants recruited = `r recruited_participants`.

```{r}
s1_cleaned_data <- s1_raw_data |> clean_data(s1_study)

```

Number of participants after basic filtering = `r nrow(s1_cleaned_data)`.

### Fill missing values

#### Assess skewness and distribution

```{r}

# Compute skewness for each numeric variable
s1_cleaned_data |> check_skewness(s1_study)

# Shapiro-Wilk normality test 
s1_cleaned_data |>
  select(-Progress, -ConsentForm, -`Duration (in seconds)`, -Status, -Finished, -TopicCheck, -GodspeedMETI_28, -GodspeedMETI_29, -AIChatbotsUsed_NA, -Reread, -LanguagesFluent_NA) |>
  check_normality(s1_study)

```

#### Fill missing values with median values

Populate missing values with the median within Condition.

```{r}

missing_values_within_conditions(s1_cleaned_data)

# Perform imputation only on selected variables
s1_imputed_data <- impute_data(s1_cleaned_data)

missing_values_within_conditions(s1_imputed_data)

```

### Reverse Coding

Reverse code items for each scale where appropriate

```{r}
s1_recoded_data <- s1_imputed_data |> recode_data(s1_study)
```

#### Standardize Scale Item Values

```{r}

s1_cleaned_data <- s1_recoded_data |> standardize_data()

```

#### Regroup data

Regroup the AIChatbotsFrequency, Education, and Age columns into smaller number of categories of data for analysis. Some of the more granular categories don't have a large enough sample for meaningful comparisons.

```{r}

s1_cleaned_data <- s1_cleaned_data |> regroup_data()

```

### Calculate Scale Scores

#### Define Score Components

```{r}

s1_cleaned_data <- s1_cleaned_data |> compute_scores(s1_study)

```

### Scale Inter-item Reliability Analysis

#### Anthropomorphism (Godspeed Subscale)

```{r}

basic_descriptives(s1_cleaned_data$anthropomorphism_score)

s1_cleaned_data |> cronbachs_alpha(get_anthropomorphism_score_godspeed_cols())

```

#### Likeability (Godspeed Subscale)

```{r}

basic_descriptives(s1_cleaned_data$likeability_score)

s1_cleaned_data |> cronbachs_alpha(get_likeability_score_godspeed_cols())

```

#### Competence (Godspeed Subscale)

```{r}

basic_descriptives(s1_cleaned_data$competence_score)

s1_cleaned_data |> cronbachs_alpha(get_competence_score_godspeed_cols())

```

#### Expertise (METI Subscale)

```{r}

basic_descriptives(s1_cleaned_data$expertise_score)

s1_cleaned_data |> cronbachs_alpha(get_expertise_score_METI_cols())

```

#### Integrity (METI Subscale)

```{r}

basic_descriptives(s1_cleaned_data$integrity_score)

s1_cleaned_data |> cronbachs_alpha(get_integrity_score_METI_cols())


```

#### Benevolence (METI Subscale)

```{r}
basic_descriptives(s1_cleaned_data$benevolence_score)

s1_cleaned_data |> cronbachs_alpha(get_benevolence_score_METI_cols())

```

#### METI (Author Trust)

```{r}

basic_descriptives(s1_cleaned_data$author_trust_METI_score)

s1_cleaned_data |> cronbachs_alpha(get_author_trust_score_METI_cols())

```

#### Trust Behaviour (Author Trust)

```{r}
basic_descriptives(s1_cleaned_data$author_trust_behaviour_score)

s1_cleaned_data |> cronbachs_alpha(get_author_trust_score_behaviour_cols(s1_study))

```

#### Combine Author Trust

```{r}

basic_descriptives(s1_cleaned_data$author_trust_combined_score)

s1_cleaned_data |> cronbachs_alpha(get_author_trust_score_combined_cols(s1_study))


```

#### Appelman (Content Trust)

```{r}
basic_descriptives(s1_cleaned_data$content_trust_appelman_score)

s1_cleaned_data |> cronbachs_alpha(get_content_trust_score_appelman_cols())

```

#### Trust Behaviour (Content Trust)

```{r}
basic_descriptives(s1_cleaned_data$content_trust_behaviour_score)

s1_cleaned_data |> cronbachs_alpha(get_content_trust_score_behaviour_cols())

```

#### Combined Content Trust

```{r}

basic_descriptives(s1_cleaned_data$content_trust_combined_score)

s1_cleaned_data |> cronbachs_alpha(get_content_trust_score_combined_cols())

```

#### Expertise / Intentions

```{r}
basic_descriptives(s1_cleaned_data$intention_to_use_score)
s1_cleaned_data |> cronbachs_alpha(get_intention_cols())


basic_descriptives(s1_cleaned_data$fear_of_ai_score)
s1_cleaned_data |> cronbachs_alpha(get_fear_cols())


basic_descriptives(s1_cleaned_data$writing_expertise)
s1_cleaned_data |> cronbachs_alpha(get_writing_experience_cols())


basic_descriptives(s1_cleaned_data$science_expertise)
s1_cleaned_data |> cronbachs_alpha(get_science_experience_cols())


basic_descriptives(s1_cleaned_data$writing_quality)
s1_cleaned_data |> cronbachs_alpha(get_writing_quality_cols())

```

### Sample Characteristics

```         
N=`r length(unique(s1_cleaned_data$ResponseId))`
```

#### Study duration (in minutes)

```{r}
basic_descriptives(s1_cleaned_data$`Duration (in seconds)` / 60)
```

#### Participants reporting Technical Issues (Not removed in data cleaning)

```{r}
s1_cleaned_data |> 
  summarize_columns(TechnicalIssues) 

s1_cleaned_data |> 
  summarize_columns(TechnicalIssues, Condition) 
```

```{r}
s1_cleaned_data |> 
  summarize_columns(Unrealistic) 

s1_cleaned_data |> 
  summarize_columns(Unrealistic, Condition) 

s1_cleaned_data |> 
  summarize_columns(Unrealistic_coded) 

s1_cleaned_data |> 
  summarize_columns(Unrealistic_coded, Condition) 
```

#### Participants per condition.

```{r}
s1_cleaned_data |> 
  summarize_columns(Condition)

```

#### Age

```         
Age range: `r round(min(s1_cleaned_data$Age_1, na.rm = TRUE), 2)` to `r round(max(s1_cleaned_data$Age_1, na.rm = TRUE), 2)`
Mean age: `r round(mean(s1_cleaned_data$Age_1, na.rm = TRUE), 2)`
Standard deviation: `r round(sd(s1_cleaned_data$Age_1, na.rm = TRUE), 2)`
```

```{r}
s1_cleaned_data |> 
  summarize_columns(age_range)

s1_cleaned_data |> 
  summarize_columns(age_range, Condition) 
```

#### Gender

```{r}

s1_cleaned_data |> 
  summarize_columns(Gender) 

s1_cleaned_data |> 
  summarize_columns(Gender, Condition) 

```

#### Sex

```{r}

s1_cleaned_data |> 
  summarize_columns(Sex)

s1_cleaned_data |> 
  summarize_columns(Sex, Condition)
```

#### Education Level

```{r}

s1_cleaned_data |> 
  summarize_columns(Education) 

s1_cleaned_data |> 
  summarize_columns(Education, Condition) 

s1_cleaned_data |> 
  summarize_columns(Education_regrouped) 

s1_cleaned_data |> 
  summarize_columns(Education_regrouped, Condition) 

```

#### AI Chatbot Usage

```{r}

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency) 

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency, Condition) 

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped) 

s1_cleaned_data |> 
  summarize_columns(AIChatbotsFrequency_regrouped, Condition) 

s1_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed)
  
s1_cleaned_data |> summarize_exploded_columns("AIChatbotsUsed", AIChatbotsUsed, Condition)

```

#### Science Content Familiarity

```{r}

s1_cleaned_data |> 
  summarize_columns(ScienceContent) 

s1_cleaned_data |> 
  summarize_columns(ScienceContent, Condition) 

s1_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped) 

s1_cleaned_data |> 
  summarize_columns(ScienceContent_regrouped, Condition) 

```

#### Expertise

```{r}

s1_cleaned_data |> 
  summarize_columns(intention_to_use_score) 

s1_cleaned_data |> 
  summarize_columns(intention_to_use_score, Condition) 

s1_cleaned_data |> 
  summarize_columns(fear_of_ai_score) 

s1_cleaned_data |> 
  summarize_columns(fear_of_ai_score, Condition) 

# changed opinion of AI
s1_cleaned_data |> 
  summarize_columns(ChangedOpinionOfAI) 

s1_cleaned_data |> 
  summarize_columns(ChangedOpinionOfAI, Condition) 


s1_cleaned_data |> 
  summarize_columns(writing_expertise)

s1_cleaned_data |> 
  summarize_columns(writing_expertise, Condition) 

s1_cleaned_data |> 
  summarize_columns(science_expertise)

s1_cleaned_data |> 
  summarize_columns(science_expertise, Condition) 

s1_cleaned_data |> 
  summarize_columns(writing_quality)

s1_cleaned_data |> 
  summarize_columns(writing_quality, Condition) 
```

#### English as a First Language

```{r}

s1_cleaned_data |> 
  summarize_columns(English) 

s1_cleaned_data |> 
  summarize_columns(English, Condition) 
```

#### Other Languages

```{r}

s1_cleaned_data |> summarize_exploded_columns("LanguagesFluent", LanguagesFluent)

s1_cleaned_data |> summarize_exploded_columns("LanguagesFluent", LanguagesFluent, Condition)

```

### Manipulation Check

#### Anthropomorphism

##### Plot

```{r}

violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "anthropomorphism_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, anthropomorphism_score) 
```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(anthropomorphism_score ~ Condition, "anthropomorphism_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(anthropomorphism_score ~ Condition)
```

#### Likeability

We were not explicitly intending to manipulate likeability

##### Plot

```{r}
violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "likeability_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, likeability_score) 
```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(likeability_score ~ Condition, "likeability_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(likeability_score ~ Condition)
```

#### Competence

We were not explicitly intending to manipulate competence \##### Plot

```{r}
violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "competence_score",
            include_legend = FALSE)
```

##### Descriptive Statistics

```{r}
s1_cleaned_data |> descriptives_by_group(Condition, competence_score) 
```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(competence_score ~ Condition, "competence_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(competence_score ~ Condition)
```

### Main Analysis

#### Content Trust

##### Plot

```{r}

plot <- violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "content_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s1_cleaned_data |> descriptives_by_group(Condition, content_trust_combined_score)

```

##### Inferential Statistics

###### ANOVA

```{r}
aov_model <- s1_cleaned_data |> run_between_subjects_anova(content_trust_combined_score ~ Condition, "competence_score")

```

###### T-tests

```{r}
s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Condition)
```

##### Post-hoc Analysis

###### Sample Characteristics

```{r}

result <- s1_cleaned_data |> test_correlation(Age_1, content_trust_combined_score)
result

# result <- s1_cleaned_data |> test_correlation(fear_of_ai_score, content_trust_combined_score)
# result
# 
# result <- s1_cleaned_data |> test_correlation(intention_to_use_score, content_trust_combined_score)
# result
# 
# result <- s1_cleaned_data |> test_correlation(professional_content_expertise, content_trust_combined_score)
# result



formulas <- c(content_trust_combined_score ~ Gender, 
              content_trust_combined_score ~ Sex, 
              content_trust_combined_score ~ Education #,
              # content_trust_combined_score ~ Education_regrouped,
              # content_trust_combined_score ~ AIChatbotsFrequency,
              # content_trust_combined_score ~ AIChatbotsFrequency_regrouped,
              # content_trust_combined_score ~ ScienceContent,
              # content_trust_combined_score ~ ScienceContent_regrouped, 
              # content_trust_combined_score ~ ChangedOpinionOfAI,
              # content_trust_combined_score ~ CouldWriteContent,
              # content_trust_combined_score ~ TechnicalIssues,
              # content_trust_combined_score ~ Unrealistic,
              # content_trust_combined_score ~ Unrealistic_coded
              )


for (i_formula in formulas){
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

if (!is.null(result) && result$test == "ANOVA"){
  print("I ran an ANOVA")
  result$apa_output
  # result$omega_squared
  # result$tukey
} else if (!is.null(result) && result$test == "t-test"){
  result$model
  # result$effect_size
}
}



```

###### Hierarchical Regression Analysis

```{r}

result <- run_post_hoc_regression_analysis(
  data = s1_cleaned_data,
  dv = "content_trust_combined_score",
  study = s1_study
)

print(result)


```

###### Anthropomorphism

```{r}

s1_cleaned_data |> linear_model(content_trust_combined_score ~ anthropomorphism_score)
```

```{r}

s1_cleaned_data |> test_correlation("anthropomorphism_score", "content_trust_combined_score")

plot <- correlation_plot(s1_cleaned_data, 
            s1_study,
            "anthropomorphism_score",
            "content_trust_combined_score")

plot
```

<!-- ###### Author / Content Trust Interaction -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~  author_trust_combined_score * anthropomorphism_score) -->

<!-- plot <- s1_cleaned_data |> interaction_plot_3( -->

<!--   lm_model,  -->

<!--   pred_name = "author_trust_combined_score", -->

<!--   mod_name = "anthropomorphism_score",  -->

<!--   target_name = "content_trust_combined_score",  -->

<!--   study = s1_study) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~ anthropomorphism_score * author_trust_combined_score * AIChatbotsFrequency_regrouped) -->

<!-- plot <- s1_cleaned_data |> interaction_plot_4( -->

<!--   lm_model,  -->

<!--   pred_name = "author_trust_combined_score", -->

<!--   mod_name = "anthropomorphism_score",  -->

<!--   mod2_name = "AIChatbotsFrequency_regrouped", -->

<!--   mod2_v = c("frequently", "occasionally", "rarely"), -->

<!--   target_name = "content_trust_combined_score",  -->

<!--   study = s1_study) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Age -->

<!-- ```{r} -->

<!-- aov_model <- s1_cleaned_data |> run_between_subjects_anova(content_trust_combined_score ~ age_range, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("Age_1", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "Age_1", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Gender -->

<!-- ```{r} -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Gender, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> -->

<!--   droplevels() |> run_simple_effects_t_tests(content_trust_combined_score ~ Gender) -->

<!-- ``` -->

<!-- ###### Sex -->

<!-- ```{r} -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Sex, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Education -->

<!-- ```{r} -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Education_regrouped, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### AI Usage Experience -->

<!-- ```{r} -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ AIChatbotsFrequency_regrouped, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ AIChatbotsFrequency_regrouped) -->

<!-- plot <- violin_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "AIChatbotsFrequency_regrouped", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE,  -->

<!--             comparisons = list(  c("rarely", "occasionally"), -->

<!--     c("rarely", "frequently"), -->

<!--     c("occasionally", "frequently") )) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * AIChatbotsFrequency_regrouped) -->

<!-- plot <- s1_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "AIChatbotsFrequency_regrouped", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s1_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Science Content Experience -->

<!-- ```{r} -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ ScienceContent_regrouped, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ScienceContent_regrouped) -->

<!-- plot <- violin_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "ScienceContent_regrouped", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE,  -->

<!--             comparisons = list(  c("rarely", "occasionally"), -->

<!--     c("rarely", "frequently"), -->

<!--     c("occasionally", "frequently") )) -->

<!-- plot -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * ScienceContent_regrouped) -->

<!-- plot <- s1_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "ScienceContent_regrouped", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s1_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Intention to Use AI -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("intention_to_use_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "intention_to_use_score", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Changed Opinion -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(ChangedOpinionOfAI, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ ChangedOpinionOfAI, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ ChangedOpinionOfAI) -->

<!-- plot <- violin_plot(s1_cleaned_data, -->

<!--             s1_study, -->

<!--             "ChangedOpinionOfAI", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(   -->

<!--               c("1", "2"), -->

<!--               c("2", "3"), -->

<!--               c("3", "4"), -->

<!--               c("4", "5"), -->

<!--               c("1", "3"), -->

<!--               c("2", "4"), -->

<!--               c("3", "5"), -->

<!--               c("1", "4"), -->

<!--               c("2", "5"), -->

<!--               c("1", "5") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ###### Fear of AI -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("fear_of_ai_score", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "fear_of_ai_score", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Could Write -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(CouldWriteContent, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ CouldWriteContent, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ CouldWriteContent) -->

<!-- plot <- violin_plot(s1_cleaned_data, -->

<!--             s1_study, -->

<!--             "CouldWriteContent", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(   -->

<!--               c("1", "2"), -->

<!--               c("2", "3"), -->

<!--               c("3", "4"), -->

<!--               c("4", "5"), -->

<!--               c("1", "3"), -->

<!--               c("2", "4"), -->

<!--               c("3", "5"), -->

<!--               c("1", "4"), -->

<!--               c("2", "5"), -->

<!--               c("1", "5") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ###### Professional Content / Writing Expertise -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("professional_content_expertise", "content_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "professional_content_expertise", -->

<!--             "content_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Content Properties -->

<!-- Well-written -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(WellWritten, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ WellWritten, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ WellWritten) -->

<!-- plot <- violin_plot(s1_cleaned_data, -->

<!--             s1_study, -->

<!--             "WellWritten", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(   -->

<!--               c("-2", "-1"), -->

<!--               c("-1", "0"), -->

<!--               c("0", "1"), -->

<!--               c("1", "2"), -->

<!--               c("-2", "0"), -->

<!--               c("-1", "1"), -->

<!--               c("0", "2"), -->

<!--               c("-2", "1"), -->

<!--               c("-1", "2"), -->

<!--               c("-2", "2") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * WellWritten) -->

<!-- plot <- s1_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "WellWritten", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s1_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- Boring -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Boring, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Boring, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Boring) -->

<!-- plot <- violin_plot(s1_cleaned_data, -->

<!--             s1_study, -->

<!--             "Boring", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(   -->

<!--               c("-2", "-1"), -->

<!--               c("-1", "0"), -->

<!--               c("0", "1"), -->

<!--               c("1", "2"), -->

<!--               c("-2", "0"), -->

<!--               c("-1", "1"), -->

<!--               c("0", "2"), -->

<!--               c("-2", "1"), -->

<!--               c("-1", "2"), -->

<!--               c("-2", "2") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Boring) -->

<!-- plot <- s1_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "Boring", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s1_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- Engaging -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Engaging, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Engaging, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> run_simple_effects_t_tests(content_trust_combined_score ~ Engaging) -->

<!-- plot <- violin_plot(s1_cleaned_data, -->

<!--             s1_study, -->

<!--             "Engaging", -->

<!--             "content_trust_combined_score", -->

<!--             include_legend = FALSE, -->

<!--             comparisons = list(   -->

<!--               c("-2", "-1"), -->

<!--               c("-1", "0"), -->

<!--               c("0", "1"), -->

<!--               c("1", "2"), -->

<!--               c("-2", "0"), -->

<!--               c("-1", "1"), -->

<!--               c("0", "2"), -->

<!--               c("-2", "1"), -->

<!--               c("-1", "2"), -->

<!--               c("-2", "2") -->

<!--               ) -->

<!--     ) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- lm_model <- s1_cleaned_data |> linear_model(content_trust_combined_score ~ Condition * Engaging) -->

<!-- plot <- s1_cleaned_data |> -->

<!--   categorical_interaction_plot_3(lm_model, -->

<!--                                 pred_name = "Condition", -->

<!--                                 mod_name = "Engaging", -->

<!--                                 target_name = "content_trust_combined_score", -->

<!--                                 study = s1_study -->

<!--                                 ) -->

<!-- plot -->

<!-- ``` -->

<!-- ###### Survey Purpose Check -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ SurveyTopicCheck_coded, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ###### Unrealistic Check -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Unrealistic, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Unrealistic, "content_trust_combined_score") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Unrealistic_coded, content_trust_combined_score)  -->

<!-- aov_model <- s1_cleaned_data |> -->

<!--    group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |> -->

<!--   run_between_subjects_anova(content_trust_combined_score ~ Unrealistic_coded, "content_trust_combined_score") -->

<!-- s1_cleaned_data |> -->

<!--   droplevels() |> -->

<!--   run_simple_effects_t_tests(content_trust_combined_score ~ Unrealistic_coded) -->

<!-- ``` -->

#### Author Trust

##### Plot

```{r}
plot <- violin_plot(s1_cleaned_data, 
            s1_study,
            "Condition",
            "author_trust_combined_score",
            include_legend = FALSE)

plot
```

##### Descriptive Statistics

```{r}

s1_cleaned_data |> descriptives_by_group(Condition, author_trust_combined_score)
```

##### Inferential Statistics

###### Main Effect ANOVA

```{r}


result <- s1_cleaned_data |> run_inferential(author_trust_combined_score ~ Condition)
result$pwt_result

```

```{r}

#s1_cleaned_data |> descriptives_by_group(Condition, author_trust_combined_score)

# aov_model <- s1_cleaned_data |>
#   group_by(Condition) |> filter(n() > 3) |> ungroup() |>
#   droplevels() |>
#   run_between_subjects_anova(author_trust_combined_score ~ Condition, "author_trust_combined_score")
# 
# s1_cleaned_data |>
#   droplevels() |>
#   run_simple_effects_t_tests(author_trust_combined_score ~ Condition)

```

##### Post-hoc Analysis

###### Sample Characteristics

```{r}

result <- s1_cleaned_data |> test_correlation(Age_1, author_trust_combined_score)
result

# result <- s1_cleaned_data |> test_correlation(fear_of_ai_score, author_trust_combined_score)
# result
# 
# result <- s1_cleaned_data |> test_correlation(intention_to_use_score, author_trust_combined_score)
# result
# 
# result <- s1_cleaned_data |> test_correlation(professional_content_expertise, author_trust_combined_score)
# result



formulas <- c(author_trust_combined_score ~ Gender, 
              author_trust_combined_score ~ Sex, 
              author_trust_combined_score ~ Education #,
              # author_trust_combined_score ~ Education_regrouped,
              # author_trust_combined_score ~ AIChatbotsFrequency,
              # author_trust_combined_score ~ AIChatbotsFrequency_regrouped,
              # author_trust_combined_score ~ ScienceContent,
              # author_trust_combined_score ~ ScienceContent_regrouped, 
              # author_trust_combined_score ~ ChangedOpinionOfAI,
              # author_trust_combined_score ~ CouldWriteContent,
              # author_trust_combined_score ~ TechnicalIssues,
              # author_trust_combined_score ~ Unrealistic,
              # author_trust_combined_score ~ Unrealistic_coded
              )


for (i_formula in formulas){
  result <- s1_cleaned_data |> run_inferential(i_formula, share_fraction = 1 / 3)

if (!is.null(result) && result$test == "ANOVA"){
  print("I ran an ANOVA")
  result$apa_output
  # result$omega_squared
  # result$tukey
} else if (!is.null(result) && result$test == "t-test"){
  result$model
  # result$effect_size
}
}


```

###### Regression Analysis

```{r}

result <- run_post_hoc_regression_analysis(
  data = s1_cleaned_data,
  dv = "author_trust_combined_score",
  study = s1_study
)

print(result)


```

###### Anthropomorphism

```{r}

s1_cleaned_data |> linear_model(author_trust_combined_score ~ anthropomorphism_score)

```

```{r}

s1_cleaned_data |> test_correlation("anthropomorphism_score", "author_trust_combined_score")

plot <- correlation_plot(s1_cleaned_data, 
            s1_study,
            "anthropomorphism_score",
            "author_trust_combined_score")

plot


```

<!-- ###### Age -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(age_range, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ age_range) -->

<!-- c(author_trust_combined_score ~ age_range, content_trust_combined_score ~ age_range) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("Age_1", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "Age_1", -->

<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Gender (Man / Woman only) -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Gender, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Gender) -->

<!-- ``` -->

<!-- ###### Sex (Male / Female only) -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Sex, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Sex) -->

<!-- ``` -->

<!-- ###### Education -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Education, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Education) -->

<!-- s1_cleaned_data |> descriptives_by_group(Education_regrouped, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Education_regrouped) -->

<!-- ``` -->

<!-- ###### AI Usage Experience -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(AIChatbotsFrequency_regrouped, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ AIChatbotsFrequency_regrouped) -->

<!-- ``` -->

<!-- ###### Science Content Experience -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(ScienceContent, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ ScienceContent) -->

<!-- s1_cleaned_data |> descriptives_by_group(ScienceContent_regrouped, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ ScienceContent_regrouped) -->

<!-- ``` -->

<!-- ###### Intention to Use AI -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("intention_to_use_score", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "intention_to_use_score", -->

<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Changed Opinion -->

<!-- ```{r} -->

<!-- # s1_cleaned_data |> test_correlation("ChangedOpinionOfAI", "author_trust_combined_score") -->

<!-- #  -->

<!-- # plots <- correlation_plot(s1_cleaned_data,  -->

<!-- #             s1_study, -->

<!-- #             "ChangedOpinionOfAI", -->

<!-- #             "author_trust_combined_score") -->

<!-- #  -->

<!-- # # Display the plots -->

<!-- # plots$lm -->

<!-- # plots$loess -->

<!-- # comparisons = list(   -->

<!-- #               c("1", "2"), -->

<!-- #               c("2", "3"), -->

<!-- #               c("3", "4"), -->

<!-- #               c("4", "5"), -->

<!-- #               c("1", "3"), -->

<!-- #               c("2", "4"), -->

<!-- #               c("3", "5"), -->

<!-- #               c("1", "4"), -->

<!-- #               c("2", "5"), -->

<!-- #               c("1", "5") -->

<!-- #               ) -->

<!-- s1_cleaned_data |> descriptives_by_group(ChangedOpinionOfAI, author_trust_combined_score) -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ ChangedOpinionOfAI) -->

<!-- ``` -->

<!-- ###### Fear of AI -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("fear_of_ai_score", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "fear_of_ai_score", -->

<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Could Write -->

<!-- ```{r} -->

<!-- # s1_cleaned_data |> test_correlation("CouldWriteContent", "author_trust_combined_score") -->

<!-- #  -->

<!-- # plots <- correlation_plot(s1_cleaned_data,  -->

<!-- #             s1_study, -->

<!-- #             "CouldWriteContent", -->

<!-- #             "author_trust_combined_score") -->

<!-- #  -->

<!-- # # Display the plots -->

<!-- # plots$lm -->

<!-- # plots$loess -->

<!-- s1_cleaned_data |> descriptives_by_group(CouldWriteContent, author_trust_combined_score) -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ CouldWriteContent) -->

<!-- # s1_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ CouldWriteContent) -->

<!-- #  -->

<!-- # plot <- violin_plot(s1_cleaned_data, -->

<!-- #             s1_study, -->

<!-- #             "CouldWriteContent", -->

<!-- #             "author_trust_combined_score", -->

<!-- #             include_legend = FALSE, -->

<!-- #             comparisons = list(   -->

<!-- #               c("1", "2"), -->

<!-- #               c("2", "3"), -->

<!-- #               c("3", "4"), -->

<!-- #               c("4", "5"), -->

<!-- #               c("1", "3"), -->

<!-- #               c("2", "4"), -->

<!-- #               c("3", "5"), -->

<!-- #               c("1", "4"), -->

<!-- #               c("2", "5"), -->

<!-- #               c("1", "5") -->

<!-- #               ) -->

<!-- #     ) -->

<!-- ``` -->

<!-- ###### Professional Content / Writing Expertise -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> test_correlation("professional_content_expertise", "author_trust_combined_score") -->

<!-- plots <- correlation_plot(s1_cleaned_data,  -->

<!--             s1_study, -->

<!--             "professional_content_expertise", -->

<!--             "author_trust_combined_score") -->

<!-- # Display the plots -->

<!-- plots$lm -->

<!-- plots$loess -->

<!-- ``` -->

<!-- ###### Content Properties -->

<!-- ####### Well-written -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(WellWritten, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ WellWritten) -->

<!-- # aov_model <- s1_cleaned_data |> -->

<!-- #   run_between_subjects_anova(author_trust_combined_score ~ WellWritten, "author_trust_combined_score") -->

<!-- #  -->

<!-- # s1_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ WellWritten) -->

<!-- #  -->

<!-- # plot <- violin_plot(s1_cleaned_data, -->

<!-- #             s1_study, -->

<!-- #             "WellWritten", -->

<!-- #             "author_trust_combined_score", -->

<!-- #             include_legend = FALSE, -->

<!-- #             comparisons = list(   -->

<!-- #               c("-2", "-1"), -->

<!-- #               c("-1", "0"), -->

<!-- #               c("0", "1"), -->

<!-- #               c("1", "2"), -->

<!-- #               c("-2", "0"), -->

<!-- #               c("-1", "1"), -->

<!-- #               c("0", "2"), -->

<!-- #               c("-2", "1"), -->

<!-- #               c("-1", "2"), -->

<!-- #               c("-2", "2") -->

<!-- #               ) -->

<!-- #     ) -->

<!-- # s1_cleaned_data |> test_correlation("WellWritten", "author_trust_combined_score") -->

<!-- #  -->

<!-- # plots <- correlation_plot(s1_cleaned_data,  -->

<!-- #             s1_study, -->

<!-- #             "WellWritten", -->

<!-- #             "author_trust_combined_score") -->

<!-- #  -->

<!-- # # Display the plots -->

<!-- # plots$lm -->

<!-- # plots$loess -->

<!-- ``` -->

<!-- ####### Boring -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Boring, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Boring) -->

<!-- # s1_cleaned_data |> test_correlation("Boring", "author_trust_combined_score") -->

<!-- #  -->

<!-- # plots <- correlation_plot(s1_cleaned_data,  -->

<!-- #             s1_study, -->

<!-- #             "Boring", -->

<!-- #             "author_trust_combined_score") -->

<!-- #  -->

<!-- # # Display the plots -->

<!-- # plots$lm -->

<!-- # plots$loess -->

<!-- # aov_model <- s1_cleaned_data |> -->

<!-- #   run_between_subjects_anova(author_trust_combined_score ~ Boring, "author_trust_combined_score") -->

<!-- #  -->

<!-- # s1_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Boring) -->

<!-- #  -->

<!-- # plot <- violin_plot(s1_cleaned_data, -->

<!-- #             s1_study, -->

<!-- #             "Boring", -->

<!-- #             "author_trust_combined_score", -->

<!-- #             include_legend = FALSE, -->

<!-- #             comparisons = list(   -->

<!-- #               c("-2", "-1"), -->

<!-- #               c("-1", "0"), -->

<!-- #               c("0", "1"), -->

<!-- #               c("1", "2"), -->

<!-- #               c("-2", "0"), -->

<!-- #               c("-1", "1"), -->

<!-- #               c("0", "2"), -->

<!-- #               c("-2", "1"), -->

<!-- #               c("-1", "2"), -->

<!-- #               c("-2", "2") -->

<!-- #               ) -->

<!-- #     ) -->

<!-- #  -->

<!-- #  -->

<!-- # lm_model <- s1_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Boring) -->

<!-- #  -->

<!-- # plot <- s1_cleaned_data |> -->

<!-- #   categorical_interaction_plot_3(lm_model, -->

<!-- #                                 pred_name = "Condition", -->

<!-- #                                 mod_name = "Boring", -->

<!-- #                                 target_name = "author_trust_combined_score", -->

<!-- #                                 study = s1_study -->

<!-- #                                 ) -->

<!-- #  -->

<!-- # plot -->

<!-- ``` -->

<!-- ####### Engaging -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Engaging, author_trust_combined_score)  -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Engaging) -->

<!-- # s1_cleaned_data |> test_correlation("Engaging", "author_trust_combined_score") -->

<!-- #  -->

<!-- # plots <- correlation_plot(s1_cleaned_data,  -->

<!-- #             s1_study, -->

<!-- #             "Engaging", -->

<!-- #             "author_trust_combined_score") -->

<!-- #  -->

<!-- # # Display the plots -->

<!-- # plots$lm -->

<!-- # plots$loess -->

<!-- # aov_model <- s1_cleaned_data |> -->

<!-- #   run_between_subjects_anova(author_trust_combined_score ~ Engaging, "author_trust_combined_score") -->

<!-- #  -->

<!-- # s1_cleaned_data |> run_simple_effects_t_tests(author_trust_combined_score ~ Engaging) -->

<!-- #  -->

<!-- # plot <- violin_plot(s1_cleaned_data, -->

<!-- #             s1_study, -->

<!-- #             "Engaging", -->

<!-- #             "author_trust_combined_score", -->

<!-- #             include_legend = FALSE, -->

<!-- #             comparisons = list(   -->

<!-- #               c("-2", "-1"), -->

<!-- #               c("-1", "0"), -->

<!-- #               c("0", "1"), -->

<!-- #               c("1", "2"), -->

<!-- #               c("-2", "0"), -->

<!-- #               c("-1", "1"), -->

<!-- #               c("0", "2"), -->

<!-- #               c("-2", "1"), -->

<!-- #               c("-1", "2"), -->

<!-- #               c("-2", "2") -->

<!-- #               ) -->

<!-- #     ) -->

<!-- # lm_model <- s1_cleaned_data |> linear_model(author_trust_combined_score ~ Condition * Engaging) -->

<!-- #  -->

<!-- # plot <- s1_cleaned_data |> -->

<!-- #   categorical_interaction_plot_3(lm_model, -->

<!-- #                                 pred_name = "Condition", -->

<!-- #                                 mod_name = "Engaging", -->

<!-- #                                 target_name = "author_trust_combined_score", -->

<!-- #                                 study = s1_study -->

<!-- #                                 ) -->

<!-- #  -->

<!-- # plot -->

<!-- ``` -->

<!-- ###### Survey Purpose Check -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(SurveyTopicCheck_coded, author_trust_combined_score)  -->

<!-- # aov_model <- s1_cleaned_data |> -->

<!-- #   run_between_subjects_anova(author_trust_combined_score ~ SurveyTopicCheck_coded, "author_trust_combined_score") -->

<!-- #  -->

<!-- # s1_cleaned_data |> -->

<!-- #   droplevels() |> -->

<!-- #   run_simple_effects_t_tests(author_trust_combined_score ~ SurveyTopicCheck_coded) -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ SurveyTopicCheck_coded) -->

<!-- ``` -->

<!-- ###### Unrealistic Check -->

<!-- ```{r} -->

<!-- s1_cleaned_data |> descriptives_by_group(Unrealistic, author_trust_combined_score) -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Unrealistic) -->

<!-- #  -->

<!-- # aov_model <- s1_cleaned_data |> -->

<!-- #   run_between_subjects_anova(author_trust_combined_score ~ Unrealistic, "author_trust_combined_score") -->

<!-- #  -->

<!-- # s1_cleaned_data |> descriptives_by_group(Unrealistic_coded, author_trust_combined_score)  -->

<!-- # aov_model <- s1_cleaned_data |> -->

<!-- #    group_by(Unrealistic_coded) |> filter(n() > 3) |> ungroup() |> -->

<!-- #   run_between_subjects_anova(author_trust_combined_score ~ Unrealistic_coded, "author_trust_combined_score") -->

<!-- #  -->

<!-- # s1_cleaned_data |> -->

<!-- #   droplevels() |> -->

<!-- #   run_simple_effects_t_tests(author_trust_combined_score ~ Unrealistic_coded) -->

<!-- s1_cleaned_data |> descriptives_by_group(Unrealistic_coded, author_trust_combined_score) -->

<!-- s1_cleaned_data |> -->

<!--   run_inferential(author_trust_combined_score ~ Unrealistic_coded) -->

<!-- ``` -->

#### Path Analysis

```{r}

s1_cleaned_data$Condition_Compressed <- ifelse(s1_cleaned_data$Condition == "High", 1, 0)

s1_cleaned_data$Condition_Medium <- ifelse(s1_cleaned_data$Condition == "Medium", 1, 0)
s1_cleaned_data$Condition_High <- ifelse(s1_cleaned_data$Condition == "High", 1, 0)

s1_cleaned_data$ScienceContent_ordinal <- as.numeric(factor(s1_cleaned_data$ScienceContent_regrouped,
                                              levels = c("rarely", "occasionally", "frequently")))

s1_cleaned_data$AIChatbotsFrequency_ordinal <- as.numeric(factor(s1_cleaned_data$AIChatbotsFrequency_regrouped,
                                              levels = c("rarely", "occasionally", "frequently")))

  # s1_cleaned_data$WellWritten_n <- as.numeric(s1_cleaned_data$WellWritten)
  # s1_cleaned_data$Boring_n <- as.numeric(s1_cleaned_data$Boring)
  # s1_cleaned_data$Engaging_n <- as.numeric(s1_cleaned_data$Engaging)
  # 
s1_gen_ai_con_only_data <- s1_cleaned_data |> filter(Condition != "High") 
s1_gen_ai_con_only_data$Condition <- factor(s1_gen_ai_con_only_data$Condition, levels = c("Low", "Medium"))




```

```{r}
s1_model_trimmed <- '
    # Core theoretical path
  anthropomorphism_score ~ a1*Condition_Compressed
  likeability_score ~ b1*Condition_Compressed
  competence_score ~ c1*Condition_Compressed
  author_trust_combined_score ~ likeability_score + competence_score + anthropomorphism_score
  content_trust_combined_score ~ e1*author_trust_combined_score  + writing_quality

  # Optional: bidirectional path (uncomment if theoretically justified)
  author_trust_combined_score ~ f1*content_trust_combined_score

  # Optional: or use covariance if you don’t want to assume direction
  # author_trust_combined_score ~~ content_trust_combined_score


  # Correlations
  ScienceContent_ordinal ~~ content_trust_combined_score
  competence_score ~~ b2*anthropomorphism_score 
  likeability_score ~~ anthropomorphism_score
  competence_score ~~ likeability_score
  
  # Indirect effects
  ind1 := b1 * e1           # Condition → Anthro → Author Trust  → Content Trust
  ind2 := a1 * e1           # Condition → Likeability → Author Trust → Content Trust
  ind3 := c1 * e1           # Condition → Competence → Author Trust → Content Trust

'

s1_trimmed_model_fit <- s1_cleaned_data |> test_med_mod_model(s1_model_trimmed)
```

```{r}
lavaan::summary(s1_trimmed_model_fit, fit.measures = TRUE, standardized = TRUE, ci = TRUE)
```

```{r}
lavaan::inspect(s1_trimmed_model_fit, "r2")
```

```{r}
export_sem_results_to_word(s1_trimmed_model_fit, s1_study, "trimmed_model")
```

```{r}
plot <- plot_model(s1_trimmed_model_fit, s1_study)
plot
```


#### Correlations

```{r}

s1_cleaned_data |> test_correlation("author_trust_combined_score", "content_trust_combined_score")

plots <- correlation_plot(s1_cleaned_data, 
            s1_study,
            "author_trust_combined_score",
            "content_trust_combined_score")

# Display the plots
plots$lm
plots$loess
```

```{r}

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s1_cleaned_data |> filter(Condition == "High")),

        as.data.frame(s1_cleaned_data |> filter(Condition == "Low"))

      )

)

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s1_cleaned_data |> filter(Condition == "High")),

        as.data.frame(s1_cleaned_data |> filter(Condition == "Medium"))

      )

)

cocor::cocor(~ `content_trust_combined_score` + `author_trust_combined_score` | `content_trust_combined_score` + `author_trust_combined_score`,

      data = list(

        as.data.frame(s1_cleaned_data |> filter(Condition == "Low")),

        as.data.frame(s1_cleaned_data |> filter(Condition == "Medium"))

      )

)

```

# References

```{r}
my_packages = c("rstatix", "stats", "effectsize", "psych", "interactions",
                 "corrplot::corrplot", "performance", "FSA", "see")

write_bib(my_packages, file= "outputs/s1/packages.bib")
```
